<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>南昌工程学院毕业论文latex模板</title>
    <link href="/post/%E5%8D%97%E6%98%8C%E5%B7%A5%E7%A8%8B%E5%AD%A6%E9%99%A2%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87latex%E6%A8%A1%E6%9D%BF/"/>
    <url>/post/%E5%8D%97%E6%98%8C%E5%B7%A5%E7%A8%8B%E5%AD%A6%E9%99%A2%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87latex%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>毕业论文latex模板下载地址：<a href="nitthesis.rar">nitthesis.rar</a></p><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p><img src="0001.jpg" alt="0001"><br><img src="0002.jpg" alt="0002"><br><img src="0003.jpg" alt="0003"><br><img src="0004.jpg" alt="0004"><br><img src="0005.jpg" alt="0005"><br><img src="0006.jpg" alt="0006"><br><img src="0007.jpg" alt="0007"><br><img src="0008.jpg" alt="0008"><br><img src="0009.jpg" alt="0009"><br><img src="0010.jpg" alt="0010"><br><img src="0011.jpg" alt="0011"><br><img src="0012.jpg" alt="0012"><br><img src="0013.jpg" alt="0013"><br><img src="0014.jpg" alt="0014"><br><img src="0015.jpg" alt="0015"><br><img src="0016.jpg" alt="0016"><br><img src="0017.jpg" alt="0017"><br><img src="0018.jpg" alt="0018"><br><img src="0019.jpg" alt="0019"><br><img src="0020.jpg" alt="0020"><br><img src="0021.jpg" alt="0021"><br><img src="0022.jpg" alt="0022"><br><img src="0023.jpg" alt="0023"><br><img src="0024.jpg" alt="0024"></p>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>Latex</tag>
      
      <tag>毕业论文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rainbow-七夕专题</title>
    <link href="/post/rainbow-%E4%B8%83%E5%A4%95%E4%B8%93%E9%A2%98/"/>
    <url>/post/rainbow-%E4%B8%83%E5%A4%95%E4%B8%93%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="类型列表（直接点击对应标题可预览）"><a href="#类型列表（直接点击对应标题可预览）" class="headerlink" title="类型列表（直接点击对应标题可预览）"></a>类型列表（直接点击对应标题可预览）</h3><p>部分网页来自github.com</p><h4 id="Type1-欢度七夕动画，https-rainbow-eatrice-top-Qixi-Type1"><a href="#Type1-欢度七夕动画，https-rainbow-eatrice-top-Qixi-Type1" class="headerlink" title="Type1:欢度七夕动画，https://rainbow.eatrice.top/Qixi/Type1/;"></a><strong>Type1</strong>:<a href="https://rainbow.eatrice.top/Qixi/Type1/">欢度七夕动画，https://rainbow.eatrice.top/Qixi/Type1/</a>;</h4><p><strong>说明：</strong>该动画固定了时间序列和切换时序，全动画由各种图片运动而成，无文字。未有自定义链接。</p><h4 id="Type2-很长的一段文字和日期，https-rainbow-eatrice-top-Qixi-Type2"><a href="#Type2-很长的一段文字和日期，https-rainbow-eatrice-top-Qixi-Type2" class="headerlink" title="Type2:很长的一段文字和日期，https://rainbow.eatrice.top/Qixi/Type2/;"></a><strong>Type2</strong>:<a href="https://rainbow.eatrice.top/Qixi/Type2/">很长的一段文字和日期，https://rainbow.eatrice.top/Qixi/Type2/</a>;</h4><p><strong>说明：</strong>该页面有以下几处可自定义处：</p><ol><li>左上角信件的收件人：预览对应值为<code>My Love</code>，对应链接生成器属性为：<code>MyLove</code></li><li>右下角的落款：预览对应为<code>EatRice.Me</code>，对应链接生成器属性为：<code>MyName</code></li><li>右侧的时间记录，该时间记录表示为你与所表白的对象第一次在一起的时刻至今的时间，因此可以修改认识的初始时间，程序会自动计算至今为止的时间：对应预览为右侧不断刷新的时间。根据提示在下方输入对应的时间即可。</li></ol><h4 id="Type3-火树银花，https-rainbow-eatrice-top-Qixi-Type3"><a href="#Type3-火树银花，https-rainbow-eatrice-top-Qixi-Type3" class="headerlink" title="Type3:火树银花，https://rainbow.eatrice.top/Qixi/Type3/;"></a><strong>Type3</strong>:<a href="https://rainbow.eatrice.top/Qixi/Type3/">火树银花，https://rainbow.eatrice.top/Qixi/Type3/</a>;</h4><p><strong>说明：</strong>该页面有以下几处可自定义处：</p><ol><li>左上角信件的收件人：预览对应值为<code>My Love</code>，对应链接生成器属性为：<code>MyLove</code></li><li>右下角的落款：预览对应为<code>EatRice.Me</code>，对应链接生成器属性为：<code>MyName</code></li><li>右侧的时间记录，该时间记录表示为你与所表白的对象第一次在一起的时刻至今的时间，因此可以修改认识的初始时间，程序会自动计算至今为止的时间：对应预览为右侧不断刷新的时间。根据提示在下方输入对应的时间即可。</li><li>Type3 当前支持自定义表白内容，在下方的文本输入框输入相关内容即可，不支持特殊符号‘和#。</li></ol><h4 id="Type4-图片加文字，https-rainbow-eatrice-top-Qixi-Type4"><a href="#Type4-图片加文字，https-rainbow-eatrice-top-Qixi-Type4" class="headerlink" title="Type4:图片加文字，https://rainbow.eatrice.top/Qixi/Type4/;"></a><strong>Type4</strong>:<a href="https://rainbow.eatrice.top/Qixi/Type4/">图片加文字，https://rainbow.eatrice.top/Qixi/Type4/</a>;</h4><p><strong>说明：</strong>该页面有以下几处可自定义处：</p><ol><li>首页中央的对方名字：<code>My Love</code>，对应链接生成器属性为：<code>MyLove</code></li><li>首页中央的本人名字：<code>EatRice.Me</code>，对应链接生成器属性为：<code>MyName</code></li><li>最后一页的时间记录，该时间记录表示为你与所表白的对象第一次在一起的时刻至今的时间，因此可以修改认识的初始时间，程序会自动计算至今为止的时间：对应预览为右侧不断刷新的时间。根据提示在下方输入对应的时间即可。</li><li>Type4 当前支持自定义每页的一句话句子，可根据以下提示进行填写，不填写则为预览句子。</li></ol><h3 id="类型图片预览"><a href="#类型图片预览" class="headerlink" title="类型图片预览"></a>类型图片预览</h3><ul><li>Type1：<br><img src="1.png" alt=""></li><li>Type2：<br><img src="2.png" alt=""></li><li>Type3：<br><img src="3.png" alt=""></li><li>Type4：<br><img src="4.png" alt=""></li></ul><h3 id="源地址"><a href="#源地址" class="headerlink" title="源地址"></a>源地址</h3><p>源地址在rainbow七夕专题: <a href="https://rainbow.eatrice.top/Qixi/">https://rainbow.eatrice.top/Qixi/</a></p>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性代数-矩阵与图形</title>
    <link href="/post/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%9B%BE%E5%BD%A2/"/>
    <url>/post/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%9B%BE%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="0线性问题"><a href="#0线性问题" class="headerlink" title="0线性问题"></a>0线性问题</h2><p>从中学到大学二年级(非数学专业数学公共课基本已经学完了)，我们经常能够见到类似于 $ y = a_1 x_1 + a_2 x_2 + ... + a_n x_n $  类似形式的多元一次函数，等式的右边是多元一次多项式，左边为函数。这里又有点像回归方程<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="多元线性回归推导和误差处理-吃白饭的休伯利安号">[1]</span></a></sup>，含义为函数y受多个因变量的影响，且这些影响是线性的；按我个人理解，函数值是关于各个因素的影响之后叠加所得到的结果，在代数领域，我们说这种性质叫做加性。另有多元多次函数，如高中时学习的并且为之白头的椭圆： $ \frac{{{x^2}}}{{{a^2}}} + \frac{{{y^2}}}{{{b^2}}} = 1 $ ，双曲线： $ \frac{{{x^2}}}{{{a^2}}} - \frac{{{y^2}}}{{{b^2}}} = 1 $ 。,因为含自变量或因变量的项的次数总是保持一致，因此在代数上可以认为这是齐性的，同时各项通过<code>&#39;+&#39;</code>号来连接，也认为其具有加性。因此也被认为是线性问题<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="线性关系-维基百科">[2]</span></a></sup>。线性代数顾名思义就是在代数基础上研究其中线性关系的一名科学，也是高等代数学的一部分（数学专业）。</p><h2 id="1从行列式和多项式开始"><a href="#1从行列式和多项式开始" class="headerlink" title="1从行列式和多项式开始"></a>1从行列式和多项式开始</h2><p>行列式的基本形式为：${\begin{array}{*{20}{c}}{{x_{11}}}&{{x_{12}}}&{...}&{{x_{1n}}}\\{{x_{21}}}&{{x_{22}}}&{...}&{{x_{2n}}}\\ \vdots & \vdots & \ddots & \vdots \\{{x_{n1}}}&{{x_{n2}}}&{...}&{{x_{nn}}}\end{array}}$</p><p>若令矩阵$A = \left[ {\begin{array}{*{20}{c}}{{x_{11}}}&{{x_{12}}}&{...}&{{x_{1n}}}\\{{x_{21}}}&{{x_{22}}}&{...}&{{x_{2n}}}\\ \vdots & \vdots & \ddots & \vdots \\{{x_{n1}}}&{{x_{n2}}}&{...}&{{x_{nn}}}\end{array}} \right]$</p><p>则行列式可以表示为： $ det(A) $ </p><p>行列式是标量，他有一个固定的值，计算行列式的值可以通过：</p><ol><li>不同行列的所有排列数元素相乘根据逆序数变号，后加总。 $ \det (A) = \sum\limits_{\sigma  \in {S_n}} {{\mathop{\rm sgn}} (\sigma )\prod\limits_{i = 1}^n {{a_{i,\sigma (i)}}} }  $ </li><li>代数余子式分解计算。</li></ol><h3 id="1-1行列式与空间图形"><a href="#1-1行列式与空间图形" class="headerlink" title="1.1行列式与空间图形"></a>1.1行列式与空间图形</h3><p>行列式的组成矩阵是由n个n维向量所组成。如最简单的二阶行列式$\left| {\begin{array}{*{20}{c}}a&b\\c&d\end{array}} \right| $，其构成矩阵可以看作由向量 ${\alpha _1} = {(a,c)^T},{\alpha _2} = {(b,d)^T} $ ， $ [{\alpha _1},{\alpha _2}]$。</p><p>将其绘制到二维直角坐标上：如下图所示：</p><p><img src="1.jpg" alt=""></p><p>其中向量 $ {\alpha _1},{\alpha _2} $ 所确定的平行四边形的面积，就等于该行列式的绝对值，即： $ S = \left| {\det ({\alpha _1},{\alpha _2})} \right| = \left| {ad - bc} \right| $ 。（可以通过代数方法进行证明）</p><p>由上图可以看出：</p><ol><li>当 $ {\alpha _1},{\alpha _2} $ 成倍数关系时，两个向量共线，同时行列式的值等于零。</li><li>行列式的值满足加法结合律： $ \det ({\alpha _1} + {\alpha _3},{\alpha _2}) = \det ({\alpha _1},{\alpha _2}) + \det ({\alpha _3},{\alpha _2}) $ </li></ol><p>同理，三阶行列式的值在坐标系中的意义为三个向量所决定的空间六面体的体积。当有任意两条或全部的向量方向共线时，该六面体的体积为0。</p><p>代数中把行列式的几何意义称为在坐标系的线性映射，二阶行列式称为双线性映射，三阶行列式称为三线性映射。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="行列式-维基百科">[3]</span></a></sup></p><h3 id="1-2初等变换"><a href="#1-2初等变换" class="headerlink" title="1.2初等变换"></a>1.2初等变换</h3><p>对于二阶和三阶行列式来说，计算较为简单。但对于更高阶行列式，计算复杂，因此需要对原行列式进行一些变换，同时不改变行列式的值，使得行列式更为简单（如上三角或下三角行列式）。因此可以将集合的初等变换引入到行列式的变换中。</p><p>几何图形可以进行初等变换。几何图形的初等变换的常见类型主要包括：</p><ol><li>平移变换</li><li>旋转变换</li><li>反射变换</li><li>位似变换</li></ol><p>根据线性行列式对几何的映射，可以得出行列式也可以通过一系列的变换，而不改变行列式的值：</p><ol><li>交换行列式任意两行或两列的位置：行列式的值变号（ $ \det ({\alpha _1},{\alpha _2},{\alpha _3}) =  - \det ({\alpha _2},{\alpha _1},{\alpha _3}) $ ）</li><li>行列式任意一列乘以不为零的数 $ k $ ：行列式的值也乘以该数( $ \det (k{\alpha _1},{\alpha _2},{\alpha _3}) = k\det ({\alpha _1},{\alpha _2},{\alpha _3}) $ )</li><li>行列式某行或列，加上其他行或列的倍数：行列式的值不变( $ \det ({\alpha _1},{\alpha _2},{\alpha _3}) = \det ({\alpha _1},{\alpha _2},{\alpha _3} + k{\alpha _1}) $ )</li></ol><h2 id="2矩阵"><a href="#2矩阵" class="headerlink" title="2矩阵"></a>2矩阵</h2><p>矩阵是由m * n个元素排列成m行n列的排列形式。矩阵的每一行或一列都可以看是一个向量，因此矩阵也可以看作等维度向量的集合。</p><p>矩阵在运算中是矢量，其每行或每列在运算中也是矢量。</p><p>当矩阵的行数等于1时，可以看作为行向量；当矩阵的列数等于1时，可以看作列向量。</p><p>矩阵的行数等于列数时，此矩阵也可称为方阵。</p><h3 id="2-1矩阵的运算"><a href="#2-1矩阵的运算" class="headerlink" title="2.1矩阵的运算"></a>2.1矩阵的运算</h3><p><strong>矩阵乘</strong>：m * n 维矩阵A乘以 n * m维矩阵B等于 m * m 维矩阵C，矩阵C中位于 i 行 j 列的元素等于A中第 i 行向量**点乘**B中第 j 列向量。</p><div class="note note-info">            <ol><li>两个矩阵相乘，左侧的矩阵的列数，必须等于右侧矩阵的行数。</li><li>矩阵乘满足乘法的结合律和分配律，但不满足交换律</li></ol>          </div><p><strong>矩阵加</strong>：两个矩阵相加等于矩阵中对应的每个元素相加。</p><div class="note note-info">            <ul><li>两个矩阵相加，其行数和列数都相同，结果矩阵的行数和列数也相同。</li></ul>          </div><h3 id="2-2矩阵的转置、逆与伴随"><a href="#2-2矩阵的转置、逆与伴随" class="headerlink" title="2.2矩阵的转置、逆与伴随"></a>2.2矩阵的转置、逆与伴随</h3><p>所有的矩阵都可以转置，仿真的<strong>转置</strong>为方阵元素沿主对角线对称互换，矩阵的维数为 m * n 时转置后的矩阵当矩阵的维数为 m * n 时转置后的矩阵维数为 n * m ，矩阵A的转置记作$ A^T $ 。</p><p>只有方阵有<strong>伴随矩阵</strong>：</p><p>设R是一个交换环<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="交换环-维基百科">[4]</span></a></sup>，A是一个以R中元素为系数的n×n的矩阵。A的伴随矩阵可按如下步骤定义：</p><p>定义：A关于第 $ i $ 行第 $ j $ 列的余子式（记作 $ M_ij $ ）是去掉A的第i行第j列之后得到的 $ (n − 1)×(n − 1) $ 矩阵的行列式。<br>定义：A关于第i行第j列的代数余子式是：<br> ${C}_{ij} =(-1)^{i+j} \mathbf{M}_{ij} $ 。<br>定义：A的余子矩阵是一个n×n的矩阵C，使得其第i行第j列的元素是A关于第 i 行第 j 列的代数余子式。<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="伴随矩阵-维基百科">[5]</span></a></sup><br>基于以上定义，A的伴随矩阵为A的余子矩阵的转置，记作 $ adj(A) $ 。</p><p>只有方阵有<strong>逆矩阵</strong>：</p><p>定义：唯一一个方阵B，使方阵A满足： $ AB = BA = E $ ，则B叫做A的逆，记作 $ {(A)^{ - 1}} $ <br>不是所有的方阵都存在逆矩阵，当方阵的秩（2.4节）小于阶数时，方阵没有逆。</p><div class="note note-info">            <p>$ {(A)^{ - 1}} = \frac{{adj(A)}}{{\det (A)}} $ （这是逆矩阵的第一种常用的求解方法）</p>          </div><h3 id="2-3矩阵与方程"><a href="#2-3矩阵与方程" class="headerlink" title="2.3矩阵与方程"></a>2.3矩阵与方程</h3><p>由 0 节可以得到：矩阵是研究线性问题的一个工具。线性代数的初级阶段只探究最简单的线性问题，这些问题在 0 节中已经列出：多元一次方程和多元二次方程（齐性）。</p><h4 id="2-3-1对于多元一次方程："><a href="#2-3-1对于多元一次方程：" class="headerlink" title="2.3.1对于多元一次方程："></a>2.3.1对于多元一次方程：</h4><p>在每个未知数前都会有一个系数，将其系数提取出来，即组成了一个向量。</p><p>而在实际问题中，一般要解线性方程，则需要列出各变量之间的不同的等量关系，形成方程组。由方程组中提取出的系数向量组组合为矩阵。</p><p>一般地，要解n元一次线性方程需要列出n个等式方程，因此多元线性方程组所提取的矩阵一般为方阵。</p><h4 id="2-3-2对于多元二次方程"><a href="#2-3-2对于多元二次方程" class="headerlink" title="2.3.2对于多元二次方程"></a>2.3.2对于多元二次方程</h4><p>对于多元二次函数 $ f({x_1},{x_2},...,{x_n}) = {a_1}x_1^2 + {a_2}x_2^2 + ... + {a_n}x_n^2 $ 来说，提取各变量前的系数，得到$\left[ {\begin{array}{*{20}{c}}{{a_1}}&0&{...}&0\\0&{{a_2}}&{...}&0\\0&0& \ddots &0\\0&0& \cdots &{{a_n}}\end{array}} \right]$。此为二次型的标准型。</p><p>二次型将在后面的内容讨论，当前分析 2.3.1 中线性方程组的矩阵问题。</p><h3 id="2-4矩阵的秩"><a href="#2-4矩阵的秩" class="headerlink" title="2.4矩阵的秩"></a>2.4矩阵的秩</h3><p>方程组有没有解，有多少解都和矩阵的维度和秩的关系相关。因此需要先计算矩阵的秩。</p><p>矩阵的秩等于矩阵中不相互共线的行向量或列向量的数量。对于矩阵来说，行秩等于列秩，若矩阵的维度为 m * n，则<code>rank(A) &lt;= min(m,n)</code>。</p><p>有n阶矩阵A，当：</p><p><code>rank(A) = n</code> 则 <code>rank(adj(A)) = n</code><br><code>rank(A) = n - 1</code> 则 <code>rank(adj(A)) = 1</code><br><code>rank(A) &lt; n - 1</code> 则 <code>rank(adj(A)) = 0</code><br>可通过伴随矩阵的定义证明，</p><p>A的转置的秩等于A的秩。</p><h3 id="2-5矩阵的秩和方程的解"><a href="#2-5矩阵的秩和方程的解" class="headerlink" title="2.5矩阵的秩和方程的解"></a>2.5矩阵的秩和方程的解</h3><p>从 2.3.1 中可以得到，列写系数矩阵的目的是为了求解线性方程组。一般的线性方程组的形式如下：</p>$$\left\{ {\begin{array}{*{20}{c}}{{a_{11}}{x_1} + {a_{12}}{x_2} + ... + {a_{1n}}{x_n} = {y_1}}\\{{a_{21}}{x_1} + {a_{22}}{x_2} + ... + {a_{2n}}{x_n} = {y_2}}\\ \vdots \\{{a_{n1}}{x_n} + {a_{n2}}{x_n} + ... + {a_{nn}}{x_n} = {y_n}}\end{array}} \right.$$<p>当等号右侧等于0时，此时是齐次线性方程组，得到：</p>$$\left[ {\begin{array}{*{20}{c}}{{a_{11}}}&{{a_{12}}}&{...}&{{a_{1n}}}\\{{a_{21}}}&{{x_{22}}}&{...}&{{a_{2n}}}\\ \vdots & \vdots & \ddots & \vdots \\{{a_{n1}}}&{{a_{n2}}}&{...}&{{a_{nn}}}\end{array}} \right]$$<p>当右侧不等于零时，有增广矩阵（将等号另一侧的列加入系数矩阵，使之增广为 n * n + 1 为的矩阵）。</p><p><strong>对于齐次线性方程组</strong>：</p><ol><li><code>rank(A) = n</code>，有0解。</li><li><code>rank(A) &lt; n</code>，有<code>n - rank(A)</code>组基础解（通解）。</li></ol><p><strong>对于非齐次线性方程组：</strong></p><p>令A为系数矩阵，B为增广矩阵</p><ol><li><code>rank(A) = rank(B) = n</code>，有唯一不为零特解；</li><li><code>rank(A) = rank(B) &lt; n</code>，有无穷解；</li><li><code>rank(A) &lt; rank(B)</code>，无解。</li></ol><h4 id="2-5-1计算齐次线性方程的解"><a href="#2-5-1计算齐次线性方程的解" class="headerlink" title="2.5.1计算齐次线性方程的解"></a>2.5.1计算齐次线性方程的解</h4><p>由上文可得，其次线性方程要么有零解（满秩），要么有通解（不满秩）</p><p>这里讨论不满秩的情况：</p><p>当系数矩阵不满秩时，如：<br>$$\left[ {\begin{array}{*{20}{c}}{a1}&{a2}&{a3}\\0&{b2}&{b3}\\0&0&0\end{array}} \right]$$<br>此时无法直接得出不同自变量$X$之间的相互关系，因此需要对某一变量假设其等于0或1。</p><p>将假设的变量代入到方程中，即可求解各变量的值如${(1,0,1)^T}$，此时当自变量的值满足：$X = k{(1,0,1)^T}$时，线性方程恒成立，我们称该解向量为方程组的通解。</p><p>当存在多组解时，需要取出多个未知数，并将这些未知数逐个取1，其余取0，分别计算此时其他未知数的结果，如：$\begin{array}{l}{X_1} = {k_1}{(3,5,1,0,0)^T}\\{X_2} = {k_2}{(3,2,0,1,0)^T}\\{X_3} = {k_3}{(3,4,0,0,1)^T}\end{array}$ （n-r=3）</p><p>这些通解的集合叫做<strong>解集</strong>，也叫做<strong>解空间</strong>，保留假设变量的值，即不乘以k的解集称作<strong>基础解系</strong>。</p><h4 id="2-5-2非齐次方程组的解"><a href="#2-5-2非齐次方程组的解" class="headerlink" title="2.5.2非齐次方程组的解"></a>2.5.2非齐次方程组的解</h4><p><strong>唯一解的情况</strong></p><p>由上文可得，非齐次线性方程组有唯一解的充要条件是：系数矩阵的秩等于增广矩阵的秩。</p><p>首先可以通过初等行变换，将增广矩阵的系数矩阵变换为行阶梯型，后代入原方程求解，该方法即传统的消元法求解，此处不多赘述。</p><p><strong>克莱默法则</strong><sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="克莱姆法则-维基百科">[9]</span></a></sup>：</p><p>令：系数矩阵为A，等号右侧值为y向量。</p><p>定义运算 <code>trans(A, y, i)</code>：</p><p>其将A[i]列替换为y，并返回替换后的矩阵A。</p><p>则各未知数的解为：${x_i} = \frac{{\det (trans(A,y,i))}}{{\det (A)}}$，该法则为克莱默法则。</p><p>根据克莱默法则可以求解出该非齐次方程的解$x*$</p><p><strong>克莱默法则的证明</strong>：</p><p>对于线性方程组：$AX = b$，其中A为系数矩阵（方阵），X为解向量，b为结果向量。</p><p>将等式两边同时乘以A的逆：$X = {A^T}b$</p><p>由于矩阵的逆唯一，因此解向量的值也唯一。</p><p>将矩阵的逆用伴随矩阵表示：$X = {A^T}b = \frac{{A*}}{{|A|}}b$</p><p>展开：$X = \frac{{\left[ {\begin{array}{*{20}{c}}{{A_{11}}}&{{A_{21}}}&{...}&{{A_{n1}}}\\{{A_{12}}}&{{A_{22}}}&{...}&{{A_{n2}}}\\ \vdots & \vdots & \ddots & \vdots \\{{A_{1n}}}&{{A_{2n}}}&{...}&{{A_{nn}}}\end{array}} \right]\left[ {\begin{array}{*{20}{c}}{{b_1}}\\{{b_2}}\\ \vdots \\{{b_n}}\end{array}} \right]}}{{\det (A)}}$</p><p>等价于：</p><div class='full-math=div'>$$\begin{array}{l}{x_i} = {A_{1i}}{b_1} + {A_{2i}}{b_2} + ... + {A_{ni}}{b_n}\\ = \left| {\begin{array}{*{20}{c}}{{a_{11}}}&{{b_1}}&{...}&{{a_{n1}}}\\{{a_{12}}}&{{b_2}}&{...}&{{a_{n2}}}\\ \vdots & \vdots & \ddots & \vdots \\{{a_{1n}}}&{{b_n}}&{...}&{{a_{nn}}}\end{array}} \right|\end{array}$$</div><p><strong>通解情况</strong></p><p>当增广矩阵的秩等于系数矩阵的秩，且小于未知变量的个数时，此时有通解。</p><p>通解的形式：$x = x* + K[X]$，其中：X为基础解系，K为基础解系的系数向量，x*为方程的特解。</p><p>方程的特解的求解过程与其次方程组的求解过程类似，需要对部分变量假设为0，然后进行求解。根据方程的解的性质，当未知数的个数减去矩阵的秩大于1时，方程有多个特解，特解的求解方法同其次方程。一般来说只需求出一个特解就OK。</p><h3 id="2-6矩阵的左乘和右乘"><a href="#2-6矩阵的左乘和右乘" class="headerlink" title="2.6矩阵的左乘和右乘"></a>2.6矩阵的左乘和右乘</h3><p>由于矩阵乘法运算不满足乘法的交换律，因此矩阵的乘法分为左乘和右乘。</p><p>左乘的本质上是矩阵的<strong>初等行变换</strong>，右乘的本质上是矩阵的<strong>初等列变换</strong>。</p><ol><li><p>如$\left[ {\begin{array}{*{20}{c}}3&0&0\\0&2&0\\0&0&1\end{array}} \right]$左乘矩阵A，其含义是将矩阵第一行所有元素乘以3，第二行所有元素乘以2，第三行不变。等效于1.2节中的初等变换2；</p></li><li><p>如$\left[ {\begin{array}{*{20}{c}}0&1&0\\1&0&0\\0&0&1\end{array}} \right]$左乘A，其含义是将矩阵的第一行和第二行对调，等效于1.2节中的初等变换1；</p></li><li><p>如$\left[ {\begin{array}{*{20}{c}}1&2&0\\0&1&0\\0&0&1\end{array}} \right]$左乘A，其含义是将矩阵的第二行乘以2加到第一行，等效于1.2节中的初等变换3。</p></li></ol><p>右乘的是进行列变换，其变换原则与左乘行变换类似。</p><h3 id="2-7相似矩阵"><a href="#2-7相似矩阵" class="headerlink" title="2.7相似矩阵"></a>2.7相似矩阵</h3><p>定义：存在可逆矩阵P，使得 $ PA{P^{ - 1}} = B $ ，则矩阵A与B相似。<br><strong>相似矩阵</strong>：</p><ol><li>秩相等</li><li>特征值相等</li></ol><h4 id="2-7-1逆矩阵的初等行变换计算方法"><a href="#2-7-1逆矩阵的初等行变换计算方法" class="headerlink" title="2.7.1逆矩阵的初等行变换计算方法"></a>2.7.1逆矩阵的初等行变换计算方法</h4><p>由相似矩阵导出逆矩阵的第二种计算方法：<br> $ A{A^{ - 1}} = E $ 两边左乘矩阵 $ {A^{ - 1}} $ 得：<br> $ {A^{ - 1}} = {A^{ - 1}}E $ 表示矩阵A通过 $ {A^{ - 1}} $ 所表示得初等行变换之后得到了单位矩阵，因此等式右侧也要进行 $ {A^{ - 1}} $ 所表示得初等行变换，变换过程与A变换为单位矩阵得过程一致。</p><p><strong>导出</strong>：可以将单位矩阵增广至矩阵A中，对增广矩阵进行初等行变换，直至增广矩阵左侧变为单位矩阵，则右侧则为 $ {A^{ - 1}} $ 所表示的行变换。</p><h4 id="2-7-2对角阵的相似变换（重点）"><a href="#2-7-2对角阵的相似变换（重点）" class="headerlink" title="2.7.2对角阵的相似变换（重点）"></a>2.7.2对角阵的相似变换（重点）</h4><p>对于可逆矩阵A，其特征值（2.7）为 $ {\lambda _1},{\lambda _2},...,{\lambda _3} $ ，则其一定相似于主对角线为特征值其他元素为0的矩阵B。且一定存在可逆矩阵P，使得 $ PA{P^{ - 1}} = B $ 。此时矩阵P的每一列向量都为对应特征值的特征向量。</p><p><strong>证明</strong>：</p><div class="full-math-div"> $ {P^{ - 1}}AP = B $ 两边左乘矩阵P<br /> $ AP = PB $ 假设 $ P = ({\alpha _1},{\alpha _2},...,{\alpha _n}) $ ，则：<br /> $ AP = (A{\alpha _1},A{\alpha _2},...,A{\alpha _n}) = PB = ({\lambda _1}{\alpha _1},{\lambda _2}{\alpha _2},...,{\lambda _n}{\alpha _n}) $ ，<br />满足特征值和特征向量的定义： $ A\alpha  = \lambda \alpha  $ 得证。</div><h4 id="2-7-3二次型的相似变换（后面再讲，跳过）"><a href="#2-7-3二次型的相似变换（后面再讲，跳过）" class="headerlink" title="2.7.3二次型的相似变换（后面再讲，跳过）"></a>2.7.3二次型的相似变换（后面再讲，跳过）</h4><h3 id="2-8特征值和特征向量"><a href="#2-8特征值和特征向量" class="headerlink" title="2.8特征值和特征向量"></a>2.8特征值和特征向量</h3><p>定义：对于一个给定的方阵$ A $，它的特征向量（eigenvector，也译固有向量或本征向量）$ v $ 经过这个线性变换[a]之后，得到的新向量仍然与原来的$ v $ 保持在同一条直线上，但其长度或方向也许会改变。即：<br>$$Av = \lambda v$$<br>此时：$ \lambda $为矩阵A一个特征向量，$ v $为改特征向量对应的特征值。</p><h4 id="2-8-1正交基和正交阵"><a href="#2-8-1正交基和正交阵" class="headerlink" title="2.8.1正交基和正交阵"></a>2.8.1正交基和正交阵</h4><ul><li>定义：一组能在内积空间中组成一个子空间的向量叫做这个子空间的基（$ {\vec e} $）。</li><li>定义：相互正交的基向量叫做正交基($ {{\vec e}_i},{{\vec e}_j} $)。- 定义：正交基的数量等于向量的维数时，此时该空间内所有的向量都可以用正交基的线性组合来描述，这些向量的集合称作线性空间的一组标准正交基,也叫单位正交阵$ {{\vec e}_i},{{\vec e}_j},...,{{\vec e}_n} $- 定义：当A每一列向量相互正交，每列的模都为1，且满足$ {A^T}A = E $，则称该矩阵为单位正交阵。#### 2.8.2图形中的特征值与特征向量先从物理的角度说起：物理学中有一些矢量，如力、速度等等。表示这些矢量一般通过使用描述矢量的方向和矢量的大小。同理将特征值与特征向量的组合也可以表示为程度与方向。而这些程度与方向描述的是原矩阵的部分性质。回到数学问题中来：先看特征向量，特征向量是一个n维空间中的矢量，其有大小，有方向。将其放在以当前正交基构成的空间中，可以直接用当前的标准正交基E1来线性表示。根据特征值和特征向量的定义公式和（2.6）节的内容。矩阵左乘特征向量相当于把特征向量进行初等行变换，变换后的向量会等于其原来自身向量的对应特征值的倍数。也就是说，特征向量在经过矩阵A的行变换之后，方向不变。这就是特征值和特征向量方程的几何意义。#### 2.8.3矩阵的混合根据（2.6）中的观点，一个矩阵B左乘或右乘另一个矩阵A，可以看作该矩阵B进行矩阵A所表示的初等行变换或列变换。因此，认为一个矩阵可以描述一个变换规律。根据颜色的杂化机理，一个任意的八位色（彩色），可以表示为4个单色：R（红色），G（绿色），B（蓝色），A（透明度）的线性组合（每种单色占两位），比如`#RRGGBBAA = #FFFF0000`表示明黄色（0表示对应颜色的程度最低，F表示最高）。假设我有一个未知颜色，这个颜色只能通过和其他颜色混合来查看结果，让该颜色与蓝色`#RRGGBBAA = #0000ff00`混合，得到靛蓝色。此时还无法判断该颜色是什么，于是在混合颜色中增加该颜色的比重，即与`#RRGGBBAA = #00001100` 进行混合，得到青绿色。因此我们可以判断，该颜色是绿色。同理，为了凸显矩阵A所描述的变换特征，使用特征值和特征向量来描述矩阵初等变换特征。类比上面的颜色混合机理，一般地在矩阵左乘列向量时，提高矩阵所描述的行变换的比例，可以凸显出矩阵的变换特征。用公式表示为$ \mathop {\lim }\limits_{n -  > \infty } {A^n}u = \lambda _{\max }^nkv $（可自行验证，编写程序可以快速计算矩阵的n次幂）其中，$ \lambda _{\max }^n $为矩阵A的最大特征值，$ v $为特征值对应的特征向量，系数$ k $为放缩比例系数，与矩阵A有关，也与向量$ u $有关。**得出**，向量左乘一个矩阵的n次幂，向量会因为不断进行相同的初等变换，而达到一个稳定状态，该稳定状态，为矩阵最大特征值所对应的特征向量所在的直线。即对一向量不断进行相同的初等行变换，最终会使得向量的方向逼近改初等行变换的最大特征值对应的特征向量方向。比如令$ A = \left[ {\begin{array}{*{20}{c}} 6&{ - 1.5}\\ 4&1 \end{array}} \right] $求得特征值为：4， 3，其中4对应的特征向量为：$ {(0.6,0.8)^T} $，随便找个向量：$ u = {(3,2)^T} $。<br>令$ {\alpha _n} = {A^n}u $<br>结果如下表：</li></ul><p><img src="2.jpg" alt=""></p><p>可见，随着随着n的增大，$ \frac{{{\alpha _{11}}}}{{{\alpha _{21}}}} $向$ \frac{{0.6}}{{0.8}} $收敛，即向量逼近于最大特征值对应的特征向量所在直线收敛。</p><p>若矩阵A的最大特征值的小于1大于0时，$ \mathop {\lim }\limits_{n -  > \infty } {A^n}u = \lambda _{\max }^nkv -  > {(0,0)^T} $。</p><p>因此可以通过特征值判断矩阵的幂是否收敛。</p><h4 id="2-8-4对角矩阵相似的几何过程"><a href="#2-8-4对角矩阵相似的几何过程" class="headerlink" title="2.8.4对角矩阵相似的几何过程"></a>2.8.4对角矩阵相似的几何过程</h4><p>由上矩阵的混合可知。当方阵A满秩时，则一定存在对角阵B，使得$ A = {P^{ - 1}}BP $ 。改推论可以简化计算$ {A^n} = {P^{ - 1}}{B^n}P $，由于B为对角阵，所以计算B的次幂较计算A的次幂较为简单。</p><p>前面提到，常用的几何变换有，平移，旋转，和位似。回到2.8.1节正交基的内容，当前空间内任何一个向量都可以表示成为标准正交基的线性组合形式，如$ \alpha  = (a,b)^T = a{{\vec e}_i} + b{{\vec e}_j} $。该向量也可以进行旋转和标准正交基方向上的拉伸。这节主要讨论向量的**旋转拉伸**问题。<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="如何理解矩阵特征值？-知乎">[6]</span></a></sup>**坐标系的旋转**当该向量逆时针旋转30度时，其在当前正交基坐标位置变为$ (a\cos \frac{\pi }{6} - b\sin \frac{\pi }{6},a\sin \frac{\pi }{6} + b\cos \frac{\pi }{6}) $。用矩阵表示为：$\left[ {\begin{array}{*{20}{c}}{\cos \frac{\pi }{6}}&{ - \sin \frac{\pi }{6}}\\{\sin \frac{\pi }{6}}&{\cos \frac{\pi }{6}}\end{array}} \right]{(a,b)^T}$</p><p>提取矩阵$\left[ {\begin{array}{*{20}{c}}{\cos \alpha }&{ - \sin \alpha }\\{\sin \alpha }&{\cos \alpha }\end{array}} \right]$ 可以得到，当该矩阵左乘一个向量时，该向量逆时针旋转 $\alpha$ 角度，若把向量看作不变量，则可以认为将坐标轴顺时针旋转了 $\alpha$ 角度，而初试条件下的坐标系的向量表示可以看作： $\left[ {\begin{array}{*{20}{c}}1&0\\0&1\end{array}} \right]{(a,b)^T}$ ，即当 $\alpha$等于0的情况。</p><p>当坐标系进行旋转时向量的位置不变，因此在旋转后的坐标系其向量坐标发生了变化。但通过计算旋转前后的特征值，发现特征值没有发生变化，但特征向量的坐标也要变换为新的坐标系的坐标表示，但可以发现，特征向量在空间的绝对位置是不变的。</p><p>若有一组满秩的方阵A，其并不是两两向量相互正交，但可以通过初等变换和向量标准化变换成标准正交基的形式。该初等变换可利用矩阵的相似变换，来保证变换前后的矩阵特征值不会改变。</p><div class="note note-info">            <p>同理，上面详细解释了标准正交基经过旋转变换后左乘向量，可以让向量当前的坐标系顺时针旋转相应角度。同理，当该矩阵的逆右乘向量时，表示让向量的坐标系逆时针旋转相应角度。</p>          </div><p><strong>坐标系的拉伸</strong></p><p>如果正交方阵中的向量不满足为单位向量的情况，那么该一定可以写成标准正交基乘以一个对角矩阵的形式。即</p><div class='full-math-div'>$$({\vec \alpha _1},a{\vec \alpha _2},{\vec \alpha _3}) = ({\vec \alpha _1},{\vec \alpha _2},{\vec \alpha _3})\left[ {\begin{array}{*{20}{c}}1&0&0\\0&a&0\\0&0&1\end{array}} \right]$$</div><p>如上式所示，矩阵右乘一个对角阵可以将某一列向量乘以对应的元素值。可见，矩阵乘以某一对角矩阵则是对该矩阵的对应列进行拉伸。</p><p>回回到2.8.2节中：任意向量都可以用该空间的标准正交基线性表示，而用标准正交基乘以对角矩阵可以将正交基某列进行相应拉伸，通过坐标轴旋转可以将向量的方向与标准正交基中某个基向量方向重合，因此要得到该向量只需将对应的正交基拉伸，后旋转回到原位。</p><p>对于满秩方阵A来说，A可以看作是相互线性无关的列向量的集合。相互线性无关的向量数量可以作为空间图形的映射，如秩为2的二阶矩阵映射一个平行四边形，秩为3的三阶矩阵映射一个六面体；若三阶矩阵的秩为2，则其只在空间中某一平面映射一个平行四边形，性质同秩为2的二阶矩阵。因此对于满秩矩阵来说，其一定可以通过旋转将其所有的特征向量转至与该空间的一组标准正交基的方向重合。</p><p><img src="3.jpg" alt=""></p><p>对于公式：$ A{\rm{ = }}{P^{ - 1}}BP{\rm{ = }}E{P^{ - 1}}BP $，当B为对角阵，P为标准正交基时，从其图形的角度来看，可以看作先将单位矩阵代表的正交基旋转至指定方向，后根据矩阵B指定的拉伸方向对标准正交基进行拉伸，最后将坐标系旋转回去，就获得了矩阵A。2.7.2中证明了此时P为A的特征向量矩阵之一，即A的特征向量来自于该组正交基，A的特征值为该组正交基获得A向量的拉伸大小。</p><p>因此回顾相似矩阵的概念：$ A{\rm{ = }}{P^{ - 1}}BP $，其本质上是一个正交基经过旋转，拉伸，再旋转回去，然后就形成了一个矩阵。相似矩阵在<strong>绝对坐标</strong>下表示的是同一个矩阵，其<strong>区别</strong>在于在不同的标准正交基下导致矩阵中各向量的坐标也不同。</p><p>当方阵有的特征值各不相同时，其对应的特征向量，满足正交；方阵有重复特征值时，计算得到的两组特征向量可能不正交，因此需要将各个矩阵进行正交化：<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="格拉姆-施密特正交化-维基百科">[7]</span></a></sup></p><div class='full-math-div'>$$\begin{array}{l}{\beta _{\rm{1}}}{\rm{ = }}{\alpha _{\rm{1}}}\\{\beta _{\rm{2}}}{\rm{ = }}{\alpha _2} -  - \frac{{{\rm{ < }}{\alpha _2}{\rm{,}}{\beta _{\rm{1}}}{\rm{ > }}}}{{ < {\beta _{\rm{1}}},{\beta _{\rm{1}}} > }}{\beta _{\rm{1}}}\end{array}$$</div><p><strong>施密特(Schmidt)方法</strong></p><h2 id="3二次型"><a href="#3二次型" class="headerlink" title="3二次型"></a>3二次型</h2><p>在多次的线性关系中，次数更高往往决定这个函数的更多性质，比如对于最简单的一元二次函数：$  y = x ^ 2 $，其图像如下图所示：</p><p><img src="4.jpg" alt=""></p><p>给该函数增加一次项或常数：$ y = x^2 + 2x + 4 $，图像如下图所示：</p><p><img src="5.jpg" alt=""></p><p>同理，对于更高次的多项式，函数图像的形状往往只由最高次决定。高等代数中使用二次型，来研究二次函数。<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="二次型-维基百科">[8]</span></a></sup></p><h3 id="3-1二次型的平移与旋转"><a href="#3-1二次型的平移与旋转" class="headerlink" title="3.1二次型的平移与旋转"></a>3.1二次型的平移与旋转</h3><p>下面从简单的圆锥曲线来入手二次型：</p><p>对于椭圆：$  x ^ 2 + xy + y ^2 = 1 $ 其图像如下图所示：</p><p><img src="6.jpg" alt=""></p><p>可以明显看出该椭圆是标准椭圆曲线绕原点旋转而成。根据矩阵的运算过程，该二次方程可以写成：</p>$$(x,y)\left[ {\begin{array}{*{20}{c}}{\rm{1}}&{{\rm{0}}{\rm{.5}}}\\{{\rm{0}}{\rm{.5}}}&{\rm{1}}\end{array}} \right]\left( {\begin{array}{*{20}{c}}x\\y\end{array}} \right) = 1$$<p>若令：</p>$$\begin{array}{l}X = {(x,y)^T}\\A = \left[ {\begin{array}{*{20}{c}}{\rm{1}}&{{\rm{0}}{\rm{.5}}}\\{{\rm{0}}{\rm{.5}}}&{\rm{1}}\end{array}} \right]\end{array}$$<p>则该表达式可以表示为：$ {X^T}AX $</p><h3 id="3-2二元二次型的规范化"><a href="#3-2二元二次型的规范化" class="headerlink" title="3.2二元二次型的规范化"></a>3.2二元二次型的规范化</h3><p>根据2.8.4节中明确的矩阵的几何过程的定义，提取该系数矩阵的特征值为：0.5和1.5，得到特征向量：$ {( - \frac{{\sqrt 2 }}{2},\frac{{\sqrt 2 }}{2})^T},{(\frac{{\sqrt 2 }}{2},\frac{{\sqrt 2 }}{2})^T} $</p><p>当前计算的特征向量为单位向量，将其组成正交基，令</p>$$\begin{array}{l}P = \left[ {\begin{array}{*{20}{c}}{ - \frac{{\sqrt 2 }}{2}}&{\frac{{\sqrt 2 }}{2}}\\{\frac{{\sqrt 2 }}{2}}&{\frac{{\sqrt 2 }}{2}}\end{array}} \right]\\B = \left[ {\begin{array}{*{20}{c}}{0.5}&0\\0&{1.5}\end{array}} \right]\end{array}$$<p>则$ A = PB{P^{ - 1}} $</p><p>根据2.8.4节结论，可得该图形先是经过坐标轴先顺时针旋转45°，再对坐标轴进行拉伸变换，最后将坐标轴逆时针旋转，最终得到了如图所示的图形。且原图形与坐标轴旋转后的图像的空间绝对位置不变，即，矩阵B也可作为在指定的坐标系下该椭圆图形的二次型矩阵。从矩阵A到矩阵B的过程叫做二次型的规范化，其实质是将矩阵A表示为其特征值经过初等变换的形式。</p><p>规范化后的表达式为：$\begin{array}{l}(x,y)\left[ {\begin{array}{*{20}{c}}{{\rm{0}}{\rm{.5}}}&{\rm{0}}\\{\rm{0}}&{1.5}\end{array}} \right]\left( {\begin{array}{*{20}{c}}x\\y\end{array}} \right)\\ = 0.5{x^2} + 1.5{y^2} = 1\end{array}$</p><p><img src="7.gif" alt=""></p><h3 id="3-3多元二次型的规范化"><a href="#3-3多元二次型的规范化" class="headerlink" title="3.3多元二次型的规范化"></a>3.3多元二次型的规范化</h3><p>对于多元的二次函数，同样经过以下步骤将其规范化：</p><ol><li>列写函数的二次型对称矩阵</li><li>计算特征值</li><li>将特征值整理成规范化矩阵</li><li>将变量分别左乘和右乘规范化矩阵</li></ol><h3 id="3-4二次型函数的符号性质"><a href="#3-4二次型函数的符号性质" class="headerlink" title="3.4二次型函数的符号性质"></a>3.4二次型函数的符号性质</h3><p>前面讲了二次型矩阵的来源与表示方式，二次型方程等号的一侧是未知数变量，等号的另一侧是常数。</p><p>二次型函数与二次型函数类似，但其右侧为因变量函数值，即：</p><script type="math/tex; mode=display">f(X) = {X^T}AX</script><ul><li>定义：在多维空间中，使得函数值取正或负的所有坐标轴交叉形成的面的集合为0面。</li></ul><p>则对于二次型函数来说，零面与函数值有以下关系：</p><ol><li>函数图像均在0面以上，只有个别特殊点函数值等于0，则$ f(x) $为正定二次型函数</li><li>函数图像均在0面以上，但图像与0面有交线，或有无穷个点使得函数值等于0，则$ f(x) $为半正定二次型函数</li><li>函数图像均在0面以下，只有个别特殊点函数值等于0，则$ f(x) $为负定二次型函数</li><li>函数图像均在0面以下，但图像与0面有交线，或有无穷个点使得函数值等于0，则$ f(x) $为半负定二次型函数</li><li>当函数值在0面任意上下时，称$ f(x) $为不定二次型</li></ol><p>将其映射到特征值的性质来看，当坐标轴任意旋转时，坐标轴的拉伸不为负，可得到函数值将大于等于0。根据此结论：</p><ul><li>当二次型矩阵特征值均大于0，则$ f(x) $为正定二次型函数，二次型矩阵为正定矩阵</li><li>当二次型矩阵特征值均大于等于0，且至少存在1个0，则$ f(x) $为半正定二次型函数，二次型矩阵为半正定矩阵</li><li>当二次型矩阵特征值均小于0，则$ f(x) $为正负定二次型函数，二次型矩阵为负定矩阵</li><li>当二次型矩阵特征值均小于等于0，且至少存在1个0，则$ f(x) $为半负定二次型函数，二次型矩阵为半负定矩阵</li><li>当二次型矩阵特征值有正有负，则$ f(x) $为不定二次型，二次型矩阵为不定矩阵。</li></ul><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://eatrice.top/post/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%8E%A8%E5%AF%BC%E5%92%8C%E8%AF%AF%E5%B7%AE%E5%A4%84%E7%90%86/">多元线性回归推导和误差处理-吃白饭的休伯利安号</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E7%B7%9A%E6%80%A7%E9%97%9C%E4%BF%82">线性关系-维基百科</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E8%A1%8C%E5%88%97%E5%BC%8F">行列式-维基百科</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E4%BA%A4%E6%8D%A2%E7%8E%AF">交换环-维基百科</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5">伴随矩阵-维基百科</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://www.zhihu.com/question/21874816/answer/181864044">如何理解矩阵特征值？-知乎</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E6%A0%BC%E6%8B%89%E5%A7%86-%E6%96%BD%E5%AF%86%E7%89%B9%E6%AD%A3%E4%BA%A4%E5%8C%96">格拉姆-施密特正交化-维基百科</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E6%AC%A1%E5%9E%8B">二次型-维基百科</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E5%85%8B%E8%90%8A%E5%A7%86%E6%B3%95%E5%89%87">克莱姆法则-维基百科</a><a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>考研笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好机友-GoodBird</title>
    <link href="/post/%E5%A5%BD%E5%9F%BA%E5%8F%8B-GoodBird/"/>
    <url>/post/%E5%A5%BD%E5%9F%BA%E5%8F%8B-GoodBird/</url>
    
    <content type="html"><![CDATA[<h2 id="好机友-GoodBird"><a href="#好机友-GoodBird" class="headerlink" title="好机友-GoodBird"></a>好机友-GoodBird</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>总所周知，要和女孩子保持长期稳定的良好关系需要具备以下几个特性：</p><ol><li>嘴巴甜</li><li>能经常相互吹牛</li><li>看起来很是贴心</li><li>懂浪漫 <code>Romantics</code></li></ol><p>然而对于我来说，我一长舌男，说话从不拐弯，所以不满足第一条；然后我P事儿又比较多，加上长舌男特性，分分钟结束话题；看起来比较贴心应该是指让别人觉得<code>I hold you</code>，比如一日三餐嘘寒问暖，可是我年纪大了，记性不好，老是忘记在特定时间主动表达一下关心;然后又是钢铁直男，没有浪漫细胞怎么办？！！</p><p>哈！有了<strong>好机友</strong>，这些都不是问题啦！什么是<strong>好机友</strong>？</p><p>简单来说好机友是基于咕咕机的远程打印功能实现的能够每日定时向你的好机友发送你的小纸条的一个服务处理程序。那啥是咕咕机？简单来说就是用来传纸条的小打印机，虽然官网上说是错题打印机，但是用来相互传纸条。这样比起来当前都在QQ微信上浪迹天涯，是不是感觉回到了；青春时代？</p><p><a href="http://www.memobird.cn/">咕咕机官网</a></p><p><img src="1.jpg" alt=""></p><h3 id="使用-GoodBird-的理由"><a href="#使用-GoodBird-的理由" class="headerlink" title="使用 GoodBird 的理由"></a>使用 <code>GoodBird</code> 的理由</h3><p>那咕咕机怎么帮我实现上述那些愿望呢？首先逐个分析：</p><ol><li><strong>嘴巴甜</strong>：有个网站叫做<code>一言</code>(可直接百度) ，一言是一个名言句子库，因此可以使用 <code>GoodBird</code> 发送一言的句子给你的好机友，够不够甜😁😁😁；</li><li><strong>能经常相互吹牛</strong>：吹牛不如吹气球，使用 <code>GoodBird</code> 时不时发送几张气球照片给你的好机友，以达到 <code>keep in touch</code> 终极目的；</li><li><strong>看起来很是贴心</strong>：没有什么比一日三餐和节假日发点问候更加贴心的啦，使用 <code>GoodBird</code> 吧，它能帮助记性不好的同学也能够记得给你的好机友发送问候；</li><li><strong>懂浪漫 <code>Romantics</code></strong>：传纸条应该就够浪漫了吧，也可能是直男大脑限制了我的想象力。</li></ol><p>综上，你还有啥理由不来使用 <code>GoodBird</code> 来给你的好机友发送定时问候呢？</p><h3 id="关于-GoodBird"><a href="#关于-GoodBird" class="headerlink" title="关于 GoodBird"></a>关于 <code>GoodBird</code></h3><p><code>GoodBird</code> 是使用<code>C#</code>编写的，基于 <code>.NET Core 2.2</code> 框架的控制台(小黑窗)程序,因此运行它需要确保你的计算机上拥有 <code>dotnet 2.2</code> 运行时.一般可以直接把代码克隆至本地,然后修改全局的运行参数,即可直接运行.</p><h3 id="开源-Open-Source"><a href="#开源-Open-Source" class="headerlink" title="开源(Open Source)"></a>开源(Open Source)</h3><p>项目已经在 <code>github.com</code> 开源,开源地址: <a href="https://github.com/QiQiWan/GoodBird">https://github.com/QiQiWan/GoodBird</a></p><h2 id="使用-GoodBird"><a href="#使用-GoodBird" class="headerlink" title="使用 GoodBird"></a>使用 <code>GoodBird</code></h2><p>确保计算机上安装了,<code>git</code>和<code>dotnet 2.2 runtime</code>（下载地址:<a href="https://dotnet.microsoft.com/download/dotnet-core/2.2">https://dotnet.microsoft.com/download/dotnet-core/2.2</a>）;</p><p>找一个空文件夹,在命令行中运行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> git@github.com:QiQiWan/GoodBird.git <span class="hljs-comment"># 克隆源代码至本地</span><br>$ <span class="hljs-built_in">cd</span> ./GoodBird <span class="hljs-comment"># 进入源代码目录</span><br></code></pre></td></tr></table></figure><p>然后将 <code>Commmon.cs.example</code> 改名为 <code>Common.cs</code> ,并根据注释配置或下面教程配置相关变量. </p><p>首次使用需要在咕咕机开放平台申请开发者账号,获取 <code>ACCESS_KEY</code>. <a href="https://open.memobird.cn/">咕咕机开放平台: https://open.memobird.cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ dotnet run <span class="hljs-comment"># 运行</span><br></code></pre></td></tr></table></figure><p>然后,程序就会在你设置的时间给好机友发送小纸条啦!(期间不能退出程序,可以将其运行为后台服务)</p><h3 id="GoodBird-的功能"><a href="#GoodBird-的功能" class="headerlink" title="GoodBird 的功能"></a><code>GoodBird</code> 的功能</h3><ul><li><code>GoodBird</code> 支持设置每日定时打印任务</li><li><code>GoodBird</code> 支持同时发送给多个咕咕机</li><li><code>GoodBird</code> 支持打印自定义打印内容(文字,图片等)</li></ul><h4 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h4><p>打开 <code>Common.cs</code> 有个需要首先配置的变量,如下图:</p><p><img src="2.jpg" alt=""></p><p>该变量在申请到开发者账号后从账号信息中复制过来:</p><p><img src="3.jpg" alt=""></p><h4 id="配置定时任务"><a href="#配置定时任务" class="headerlink" title="配置定时任务"></a>配置定时任务</h4><p><img src="4.jpg" alt=""></p><p>变量 <code>SendPeriods</code> 是一个数组,这个数组确定了定时任务队列,数组中每个元素都是一次发送计划,可以定义发送计划的时间(0-23),然后程序会在指定小时内,随机选个时间发送;可以定义发送计划在哪个文件夹读取需要发送的图片,示例图片在 <code>img/night(morning)/</code> ;可以指定随图片一起发送的文字 <code>message</code>, 可以留空.</p><p>如,我要每天在7点-8点的随机时间发送一个早餐问候,图片在文件夹 <code>img/morning/</code> 中,同时发送文字: “Good Morning”,可以这样写:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">new</span> SendPeriod(<span class="hljs-number">7</span>, <span class="hljs-string">&quot;img/morning/&quot;</span>, <span class="hljs-string">&quot;Good Morning!&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="同时发送至多个打印机"><a href="#同时发送至多个打印机" class="headerlink" title="同时发送至多个打印机"></a>同时发送至多个打印机</h4><p><img src="5.jpg" alt=""></p><p>变量 <code>Birds</code> 也是一个数组,这个数组内包含打印机的基本信息,其中咕咕机的设备编号是双击咕咕机吐出来的设备编号,第二个参数为你在开放平台填写的咕咕号:</p><p><img src="6.jpg" alt=""></p><p>添加在该数组中的打印机在打印时会向他们发送相同的小纸条</p><h4 id="自定义打印机内容"><a href="#自定义打印机内容" class="headerlink" title="自定义打印机内容"></a>自定义打印机内容</h4><p>打印机发送的图片目录和一起发送的文字在配置定时任务时定义,若配置的图片文件夹下存在多个图片文件,则会随机选取一张图片打印发送;同时随图片发送的文字也支持自定义.</p><p>想要每天发送不同的图片给好机友,可以在定时任务文件夹中多放几张图片哦.</p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol><li>添加一言支持,程序继承了http请求模块,可以直接调用该模块请求一言的语句接口,并将其写入定时任务中</li><li>每日定时任务固定时间打印,如指定在 <code>7:30AM</code> 打印,在hour后面加上分钟即可,如:<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">new</span> SendPeriod(<span class="hljs-number">7</span>, <span class="hljs-number">30</span>, <span class="hljs-string">&quot;img/morning/&quot;</span>, <span class="hljs-string">&quot;Good Morning!&quot;</span>)<br></code></pre></td></tr></table></figure></li></ol><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>根据官方提供的文档来看<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Wifi API文档">[1]</span></a></sup>,执行一次咕咕机远程打印需要三个步骤:</p><ol><li>将图片转为灰度base64位图,官方提供转换接口: <a href="http://open.memobird.cn/home/getSignalBase64Pic">http://open.memobird.cn/home/getSignalBase64Pic</a></li><li>账号关联设备,并获得关联ID: <a href="http://open.memobird.cn/home/setuserbind">http://open.memobird.cn/home/setuserbind</a></li><li>将内容发送至指定的咕咕机,并打印: <a href="http://open.memobird.cn/home/printpaper">http://open.memobird.cn/home/printpaper</a></li></ol><p>因此程序的逻辑设计:</p><ol><li>定义咕咕机服务器类型 <code>GoodBirdServer</code></li><li>配置定时任务: 定时检查是否到达发送时间,定时刷新每天的发送时间</li><li>服务器启动时,根据相应的定时时间启动定时任务</li><li>配置纸条发送方法:<ol><li>获取定时任务的图片位置,随机抽取一张图片,将其转为Base64,并通过接口转换为指定位图</li><li>获取定时任务的文字信息,并转换为Base64位图.</li><li>请求设备关联API,获得关联号</li><li>按照文档的方法进行参数拼接</li><li>考虑到图片长度较长(几万字节),采用Post的请求方法,直接发送纸条</li></ol></li><li>定时检查若到相应达定时任务指定的时间则触发纸条发送事件,向所有记录的咕咕机发送纸条</li></ol><h2 id="联系我"><a href="#联系我" class="headerlink" title="联系我"></a>联系我</h2><p>如果你在使用过程中遇到了问题或者有更好的意见或建议,欢迎邮件给我哦: <a href="mailto:qiqi@eatrice.top">qiqi@eatrice.top</a></p><p><img src="7.jpg" alt=""></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://open.memobird.cn/upload/webapi.pdf">Wifi API文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>乱七八糟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次指导学弟C语言基础的记录(学弟写的)</title>
    <link href="/post/%E4%B8%80%E6%AC%A1%E6%8C%87%E5%AF%BC%E5%AD%A6%E5%BC%9FC%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9A%84%E8%AE%B0%E5%BD%95-%E5%AD%A6%E5%BC%9F%E5%86%99%E7%9A%84/"/>
    <url>/post/%E4%B8%80%E6%AC%A1%E6%8C%87%E5%AF%BC%E5%AD%A6%E5%BC%9FC%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9A%84%E8%AE%B0%E5%BD%95-%E5%AD%A6%E5%BC%9F%E5%86%99%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>学院的某学弟在某天某时刻告诉我他想学习编写程序，就在那一瞬间，我感到我的衣钵可能有人传承了。后面他和我讲他在学用python做爬虫，我说python这玩意儿确实好，但是爬虫就有点浪费了，可以学学数据结构和算法，这个对你的专业可能有用。因此我推荐学弟看一些网课，然后买了一本算法书。然后又因为我的python只有入门水平，不大好指导他或解决问题，于是我让他主学C语言，先让他看看网课和课本，把C精通一下。</p><p>好几天过去了我想检查下他C的精通情况，于是给他布置个C语言综合应用的问题，让他解决。花了大概一天半，他终于做出了个可以稍微看一下的结果。在这期间发生的故事相当精彩，就像一场情景剧，我想做诗人，此时一块儿客串了个演员。我全程瞧见了学弟对于这个问题的表情的变化过程：</p><ol><li>先是无所畏惧的笑到飙泪，春风得意马蹄疾，一日看尽长安花<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="孟郊《登科后》">[1]</span></a></sup>：</li></ol><p><img src="1.jpg" alt=""></p><ol><li>再是遇到问题的平静无感，人生无根蒂，飘如陌上尘<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="陶渊明《杂诗》">[2]</span></a></sup>：</li></ol><p><img src="2.jpg" alt=""></p><ol><li>最后是被我打回去好几次后的捂脸痛哭，上穷碧落下黄泉，两处茫茫皆不见<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="白居易《长恨歌》">[3]</span></a></sup>：</li></ol><p><img src="3.jpg" alt=""></p><p>问题解决了我想记录下这件事情，然后发现自己太懒了，不想写东西，于是就让学弟写一下感想，铭记这一时刻。我也是感觉学弟写的总是比我写的看起来更加有趣，所以就用他的记录下。</p><h2 id="学弟的纪实原文"><a href="#学弟的纪实原文" class="headerlink" title="学弟的纪实原文"></a>学弟的纪实原文</h2><blockquote><p>你遇过在表格里文寻找数据而感到眼花的时候吗？（如果没有肯定是你没碰见过或是数据太少(╥╯^╰╥)）<br>7月14日这天，我接受到了一个编程项目（─━ _ ─━✧）</p></blockquote><p><img src="4.jpg" alt=""></p><blockquote><p>接收任务的我</p></blockquote><p><img src="5.jpg" alt=""></p><blockquote><p>当进行自我安慰，默默地打开文档时</p></blockquote><p><img src="6.jpg" alt=""></p><blockquote><p>再放大时（##########）</p></blockquote><p><img src="7.jpg" alt=""></p><div class='alert alert-success'>可想而知，没有动手编程，而去一一寻找是不太可能的。这时我的思绪进入了前天的......<br />想想现在的问题，嗯，还好，可以解决<br />于是经过一番思索</div><p><img src="8.jpg" alt=""></p><h3 id="一开始的流程"><a href="#一开始的流程" class="headerlink" title="一开始的流程"></a>一开始的流程</h3><blockquote><p>第一步（文件读取，并赋给a[][]的数组中）就完成了</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    FILE *fp;<br>    fp = fopen(<span class="hljs-string">&quot;.\\matrix.csv&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">int</span> m = <span class="hljs-number">0</span>, n, b;<br>    <span class="hljs-keyword">int</span> a[<span class="hljs-number">576</span>][<span class="hljs-number">768</span>];<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">576</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">768</span>; j++)<br>        &#123;<br>            a[i][j] = (<span class="hljs-keyword">int</span>)fgetc(fp); <span class="hljs-comment">//文件写入</span><br>            *fp++;<br>        &#125;<br>    &#125;<br>    fclose(fp);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>第二步（顺理成章地把数组中的元素进行筛选，比大小，打印出想要的值）</p></blockquote><p>(局部代码)<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-keyword">int</span> m, n;<br><span class="hljs-keyword">int</span> N = <span class="hljs-number">579</span>, M = <span class="hljs-number">768</span>;<br>m = a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br>n = a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; M; j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (m &lt; a[i][j])<br>            m = a[i][j]; <span class="hljs-comment">//求极大值</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &gt; a[i][j])<br>            n = a[i][j] <span class="hljs-comment">//求极小值</span><br>    &#125;<br>&#125;<br><span class="hljs-comment">//遍历a[i][j]中的极值,并打印出来</span><br><span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; M; j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (m = a[i][j])<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;极大值为：%d行是%d,列是%d\n&quot;</span>, m, i, j);<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n = a[i][j])<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;极小值为%d：行是%d，列是：%d\n&quot;</span>, n, i, j);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p><blockquote><p>开心的我（轻轻松松地解决了问题）按下了运行命令<br>结果…..</p></blockquote><p><img src="9.jpg" alt=""><br><img src="10.jpg" alt=""></p><blockquote><p>经过万般无奈后的寻找（同时也请教了17 万学长）</p></blockquote><p><img src="11.jpg" alt=""></p><blockquote><p>文件fgetc（）函数的作用（其读取指针可以自动进行向下读取内容，过不需要*fp++）<br>但当以为符合逻辑的代码可以执行最后的命令时，计算机又在这时</p></blockquote><p><img src="12.jpg" alt=""></p><blockquote><p>与上次一样，只能读取文件16个数值（上图是未去除*fp++时读取个数。个数是是一个）<br>在万学长的帮助下，他进行了算法中的改进</p></blockquote><div class="note note-wrong">            <p>（文件的读取有换行，有“，，\n,\r”等这些在之前都未被考虑过。也正因此，计算机的读取最多是16个数值,到达17，18，…….以后是计算机提示的出错信息）<br>方法：利用if语句进行“，\n,\r”的读取（目的是让计算机明白这些读取的内容是什么）<br>读取文件时，注意读取到的是字符类型的数据。而要把读取数据传输到int 的数组，需要进行类型转化（chars2Num的创建目的也正因此。转换类型的方式有很多种，第一种：网上了解到字符串转成整型可以使用atoi函数。<br>函数原型：int atoi(const char *nptr);第二种：通过ASCII代码对照表进行换算。（具体内容见往下看））</p>          </div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 从字符数组计算数字</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">chars2Num</span><span class="hljs-params">(<span class="hljs-keyword">int</span> temp[], <span class="hljs-keyword">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> result = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> position = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (; n &gt;= <span class="hljs-number">0</span>; n--)<br>    &#123;<br>        result += (temp[n] - <span class="hljs-string">&#x27;0&#x27;</span>) * position;<br>        position *= <span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    FILE *fp;<br>    fp = fopen(<span class="hljs-string">&quot;matrix.csv&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">int</span> m = <span class="hljs-number">0</span>, n, b;<br>    <span class="hljs-keyword">int</span> a[<span class="hljs-number">576</span>][<span class="hljs-number">768</span>];<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, k = <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">int</span> temps[<span class="hljs-number">3</span>], temp;<br>    <span class="hljs-keyword">while</span> (i &lt; <span class="hljs-number">576</span>)<br>    &#123;<br>        j = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (j &lt; <span class="hljs-number">768</span>)<br>        &#123;<br>            temp = fgetc(fp);<br>            <span class="hljs-comment">//如果遇到逗号或者换行则跳过,并计算值</span><br>            <span class="hljs-keyword">if</span> (temp == <span class="hljs-string">&#x27;,&#x27;</span> || temp == <span class="hljs-string">&#x27;\r&#x27;</span> || temp == <span class="hljs-string">&#x27;\n&#x27;</span>)<br>            &#123;<br>                <span class="hljs-comment">//读到中断点</span><br>                <span class="hljs-keyword">if</span> (k &gt;= <span class="hljs-number">0</span>)<br>                &#123;<br>                    a[i][j] = chars2Num(temps, k);<br>                    k = <span class="hljs-number">-1</span>;<br>                    j++;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                k++;<br>                temps[k] = temp;<br>            &#125;<br>        &#125;<br>        i++;<br>    &#125;<br>    fclose(fp);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>然后是我寻找最值的代码</p></blockquote><div class="alert alert-info">（先进性数组的寻找：最大值和最小值，利用条件句if。计算机从a[0][0]a[0][1],........a[576][768]进行对比，如果正确这赋值给m,n。之后是寻找与之数值相同的位置寻找并打印同样是计算机从a[0][0]a[0][1],........a[576][768]进行对比，找到正确的值并输出。）</div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c">m = a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br>n = a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> (i= <span class="hljs-number">0</span>;i &lt; <span class="hljs-number">576</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">768</span>; j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (m &lt; a[i][j])<br>            m = a[i][j]; <span class="hljs-comment">//求极大值</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &gt; a[i][j])<br>            n = a[i][j]; <span class="hljs-comment">//求极小值</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//遍历a[i][j]中的极值,并打印出来</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">576</span>; i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">768</span>; j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (m ==a[i][j])<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;极大值为:行是%d,列是%d\n&quot;</span>, i, j);<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n ==a[i][j])<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;极小值为：行是%d，列是：%d\n&quot;</span>, i, j);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>就这样两者代入，程序就完成了<br>同时计算机运行出了：</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs makefile">MAX：254  MIN：1<br>极小值为：行是576，列是：10<br><span class="hljs-section">极大值为:行是576,列是11</span><br>极小值为：行是576，列是：197<br>极小值为：行是576，列是：203<br>极小值为：行是576，列是：206<br><span class="hljs-section">极大值为:行是578,列是743</span><br><span class="hljs-section">极大值为:行是578,列是744</span><br><span class="hljs-section">极大值为:行是578,列是745</span><br><span class="hljs-section">极大值为:行是578,列是746</span><br><span class="hljs-section">极大值为:行是578,列是747</span><br><span class="hljs-section">极大值为:行是578,列是748</span><br><span class="hljs-section">极大值为:行是578,列是749</span><br><span class="hljs-section">极大值为:行是578,列是750</span><br></code></pre></td></tr></table></figure><blockquote><p>就认为这样就结束了吗？</p></blockquote><p><img src="13.jpg" alt=""></p><h3 id="还未结束"><a href="#还未结束" class="headerlink" title="还未结束"></a>还未结束</h3><blockquote><p>随后万学长拿出了一幅图</p></blockquote><p><img src="14.jpg" alt=""></p><div class='alert alert-wrong'>学长的话：从图来看应该有数千个极值,所以说你的程序有问题</div><blockquote><p>于是接下来就是…..</p></blockquote><p><img src="15.jpg" alt=""></p><blockquote><p>反反复复，用过if—else if，用过switch…结果都是达不到上千个数值。<br>但快要自闭的我准备关闭电脑时，学长又发了一个图</p></blockquote><p><img src="16.jpg" alt=""><br><img src="17.jpg" alt=""></p><blockquote><p>一脸懵逼的我终于知道数据是图片<del>数学矩阵</del>灰度矩阵（上图绿色部分是当前计算到的值，而未计算到的是红色部分）<br>就这样，又开始了</p></blockquote><p><img src="18.jpg" alt=""></p><h3 id="LONG-TIME-LATER…………"><a href="#LONG-TIME-LATER…………" class="headerlink" title="LONG TIME LATER………….."></a>LONG TIME LATER…………..</h3><div class="note note-success">            <p>计算机的显示内容是有限的，大部分数据是被隐藏起来了<br>代码逻辑没问题，是计算机数据提供的只是部分，所以会有上面的事情发生<br>最最重要的是，黑色区域或白色区域的数值并不是特定的一个数字，是一块区域（具体是人眼所看到的是一个数值区域，该区域中大脑会自动认为是与之相关的颜色。）</p>          </div><blockquote><p>当知道真相的我。。。。</p></blockquote><p><img src="19.jpg" alt=""><br><img src="20.jpg" alt=""></p><blockquote><p>但现在的目标只是求最大值，最小值问题吗？</p></blockquote><p><img src="21.jpg" alt=""></p><blockquote><p>于是：进行了一批细节操作</p></blockquote><p><img src="22.jpg" alt=""></p><div class="alert alert-wrong">学长说：取出极小值当然是黄色部分的轨迹，但你的取“黑”空间是否能在精确一些，毕竟你的范围是从0-50。（即只要是50以下的我都认为是黑区间）<br />PS: &nbsp;我似乎没有说过黑区间就是0-50...</div><blockquote><p>沉默中的我。。。。。。。</p></blockquote><p><img src="23.jpg" alt=""></p><blockquote><p>于是再次思考：“极值点可以是导数为0，但导数为0不一定是极值点”。但在上面的图像中，可以发现蓝色箭头最后所指的是极值点，为什么不用这一方法呢？</p></blockquote><p><img src="24.jpg" alt=""></p><blockquote><p>于是在一波猛如虎的操作后。。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">576</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">767</span>;j++)<br>    &#123;<br>         <span class="hljs-keyword">if</span>((a[i][j<span class="hljs-number">-1</span>]-a[i][j]&gt;=<span class="hljs-number">0</span>)&amp;&amp;(<span class="hljs-number">0</span>&lt;=a[i][j]-a[i][j+<span class="hljs-number">1</span>])&amp;&amp;(a[i][j]&lt;<span class="hljs-number">63</span>))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;黑域是：行%d,列%d   &quot;</span>,i,j);   <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>用c语言虽没有求导数的函数，但数学中极值点左边的切线是负的，右边的切线是正的。因此<code>a[i][j-1]-a[i][j]&gt;=0，0&lt;=a[i][j]-a[i][j+1]</code>。同样为确定是黑色区域的极小值，我把<code>a[i][j]&lt;63</code>.</p>          </div><blockquote><p>最后通过再次写代码（创建文件，输出数据）</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">FILE *fp1;<br><span class="hljs-keyword">char</span> c;<br>fp1=fopen(<span class="hljs-string">&quot;data.txt&quot;</span>,<span class="hljs-string">&quot;w+&quot;</span>);<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">576</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">798</span>;j++)<br>    &#123;<br>        c=(<span class="hljs-keyword">char</span>)a[i][j];<br>        <span class="hljs-built_in">fputs</span>(c,fp1);<br>    &#125;<br>&#125;<br>fclose(fp1);<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>先很感谢万学长的帮助，然我认识到，学习到这样的编程内容。在编程中也有出现一定的问题，语法结构的生疏（好久没用C语言了），以及”文件“这一章的知识点内容没有太多的学习，也因此在编程上浪费较多的时间。但任务完成是最最最开心的，同时再次感谢学长的细心帮助啦！</p><h3 id="以下是展示了中间红色部分区域的数据"><a href="#以下是展示了中间红色部分区域的数据" class="headerlink" title="以下是展示了中间红色部分区域的数据"></a>以下是展示了中间红色部分区域的数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><code class="hljs plain">黑域是：行11,列295   黑域是：行14,列287   黑域是：行14,列288   黑域是：行14,列289   黑域是：行14,列291   黑域是：行16,列277   黑域是：行16,列278   黑<br>域是：行16,列284   黑域是：行16,列285   黑域是：行16,列286   黑域是：行16,列287   黑域是：行16,列288   黑域是：行16,列289   黑域是：行16,列290   黑域<br>是：行16,列291   黑域是：行16,列292   黑域是：行17,列285   黑域是：行17,列286   黑域是：行17,列287   黑域是：行17,列288   黑域是：行17,列291   黑域是<br>：行17,列292   黑域是：行17,列295   黑域是：行17,列296   黑域是：行17,列317   黑域是：行17,列318   黑域是：行18,列108   黑域是：行18,列109   黑域是：<br>行18,列110   黑域是：行18,列158   黑域是：行18,列159   黑域是：行18,列171   黑域是：行18,列179   黑域是：行18,列180   黑域是：行18,列181   黑域是：行<br>18,列182   黑域是：行18,列199   黑域是：行18,列200   黑域是：行18,列278   黑域是：行18,列279   黑域是：行18,列280   黑域是：行18,列281   黑域是：行18,列282   黑域是：行18,列283   黑域是：行18,列284   黑域是：行18,列285   黑域是：行18,列286   黑域是：行18,列287   黑域是：行18,列288   黑域是：行18,<br>列289   黑域是：行18,列290   黑域是：行18,列295   黑域是：行18,列296   黑域是：行18,列297   黑域是：行18,列298   黑域是：行18,列299   黑域是：行18,列<br>315   黑域是：行18,列316   黑域是：行18,列317   黑域是：行18,列330   黑域是：行18,列331   黑域是：行19,列119   黑域是：行19,列142   黑域是：行19,列143   黑域是：行19,列159   黑域是：行19,列160   黑域是：行19,列161   黑域是：行19,列164   黑域是：行19,列171   黑域是：行19,列177   黑域是：行19,列178<br>  黑域是：行19,列180   黑域是：行19,列181   黑域是：行19,列188   黑域是：行19,列189   黑域是：行19,列190   黑域是：行19,列193   黑域是：行19,列194<br>黑域是：行19,列195   黑域是：行19,列196   黑域是：行19,列197   黑域是：行19,列200   黑域是：行19,列272   黑域是：行19,列273   黑域是：行19,列280   黑<br>域是：行19,列281   黑域是：行19,列282   黑域是：行19,列284   黑域是：行19,列285   黑域是：行19,列286   黑域是：行19,列287   黑域是：行19,列288   黑域<br>是：行19,列289   黑域是：行19,列290   黑域是：行19,列291   黑域是：行19,列292   黑域是：行19,列293   黑域是：行19,列296   黑域是：行19,列299   黑域是<br>：行19,列307   黑域是：行19,列308   黑域是：行19,列309   黑域是：行19,列330   黑域是：行19,列335   黑域是：行20,列132   黑域是：行20,列138   黑域是：<br>行20,列139   黑域是：行20,列140   黑域是：行20,列141   黑域是：行20,列142   黑域是：行20,列143   黑域是：行20,列144   黑域是：行20,列145   黑域是：行<br>20,列146   黑域是：行20,列147   黑域是：行20,列148   黑域是：行20,列149   黑域是：行20,列150   黑域是：行20,列155   黑域是：行20,列157   黑域是：行20,列158   黑域是：行20,列159   黑域是：行20,列160   黑域是：行20,列164   黑域是：行20,列165   黑域是：行20,列173   黑域是：行20,列174   黑域是：行20,<br>列175   黑域是：行20,列176   黑域是：行20,列178   黑域是：行20,列179   黑域是：行20,列180   黑域是：行20,列181   黑域是：行20,列182   黑域是：行20,列<br>183   黑域是：行20,列185   黑域是：行20,列186   黑域是：行20,列187   黑域是：行20,列190   黑域是：行20,列191   黑域是：行20,列192   黑域是：行20,列193   黑域是：行20,列194   黑域是：行20,列195   黑域是：行20,列198   黑域是：行20,列199   黑域是：行20,列200   黑域是：行20,列203   黑域是：行20,列204<br>  黑域是：行20,列205   黑域是：行20,列206   黑域是：行20,列207   黑域是：行20,列208   黑域是：行20,列209   黑域是：行20,列210   黑域是：行20,列212<br>黑域是：行20,列213   黑域是：行20,列223   黑域是：行20,列268   黑域是：行20,列273   黑域是：行20,列274   黑域是：行20,列275   黑域是：行20,列276   黑<br>域是：行20,列277   黑域是：行20,列278   黑域是：行20,列279   黑域是：行20,列280   黑域是：行20,列281   黑域是：行20,列282   黑域是：行20,列283   黑域<br>是：行20,列284   黑域是：行20,列285   黑域是：行20,列286   黑域是：行20,列287   黑域是：行20,列291   黑域是：行20,列292   黑域是：行20,列293   黑域是<br>：行20,列294   黑域是：行20,列295   黑域是：行20,列296   黑域是：行20,列310   黑域是：行20,列311   黑域是：行20,列312   黑域是：行20,列313   黑域是：<br>行20,列314   黑域是：行20,列315   黑域是：行20,列316   黑域是：行20,列317   黑域是：行20,列318   黑域是：行20,列319   黑域是：行20,列321   黑域是：行<br>20,列325   黑域是：行20,列329   黑域是：行20,列330   黑域是：行20,列331   黑域是：行20,列332   黑域是：行21,列137   黑域是：行21,列138   黑域是：行21,列140   黑域是：行21,列141   黑域是：行21,列142   黑域是：行21,列143   黑域是：行21,列144   黑域是：行21,列145   黑域是：行21,列146   黑域是：行21,<br>列147   黑域是：行21,列148   黑域是：行21,列150   黑域是：行21,列151   黑域是：行21,列156   黑域是：行21,列160   黑域是：行21,列161   黑域是：行21,列<br>164   黑域是：行21,列165   黑域是：行21,列166   黑域是：行21,列167   黑域是：行21,列168   黑域是：行21,列169   黑域是：行21,列170   黑域是：行21,列171   黑域是：行21,列172   黑域是：行21,列173   黑域是：行21,列174   黑域是：行21,列175   黑域是：行21,列176   黑域是：行21,列177   黑域是：行21,列178<br>  黑域是：行21,列179   黑域是：行21,列180   黑域是：行21,列181   黑域是：行21,列182   黑域是：行21,列183   黑域是：行21,列184   黑域是：行21,列185<br>黑域是：行21,列186   黑域是：行21,列187   黑域是：行21,列188   黑域是：行21,列189   黑域是：行21,列190   黑域是：行21,列193   黑域是：行21,列194   黑<br>域是：行21,列195   黑域是：行21,列196   黑域是：行21,列197   黑域是：行21,列199   黑域是：行21,列203   黑域是：行21,列204   黑域是：行21,列205   黑域<br>是：行21,列206   黑域是：行21,列207   黑域是：行21,列208   黑域是：行21,列209   黑域是：行21,列210   黑域是：行21,列211   黑域是：行21,列212   黑域是<br>：行21,列215   黑域是：行21,列216   黑域是：行21,列218   黑域是：行21,列219   黑域是：行21,列220   黑域是：行21,列221   黑域是：行21,列224   黑域是：<br>行21,列228   黑域是：行21,列229   黑域是：行21,列237   黑域是：行21,列238   黑域是：行21,列243   黑域是：行21,列244   黑域是：行21,列252   黑域是：行<br>21,列259   黑域是：行21,列260   黑域是：行21,列261   黑域是：行21,列262   黑域是：行21,列265   黑域是：行21,列266   黑域是：行21,列267   黑域是：行21,列268   黑域是：行21,列269   黑域是：行21,列270   黑域是：行21,列271   黑域是：行21,列272   黑域是：行21,列273   黑域是：行21,列274   黑域是：行21,<br>列275   黑域是：行21,列276   黑域是：行21,列277   黑域是：行21,列278   黑域是：行21,列279   黑域是：行21,列280   黑域是：行21,列281   黑域是：行21,列<br>282   黑域是：行21,列284   黑域是：行21,列285   黑域是：行21,列286   黑域是：行21,列287   黑域是：行21,列288   黑域是：行21,列289   黑域是：行21,列290   黑域是：行21,列291   黑域是：行21,列292   黑域是：行21,列293   黑域是：行21,列294   黑域是：行21,列295   黑域是：行21,列296   黑域是：行21,列297<br>  黑域是：行21,列298   黑域是：行21,列299   黑域是：行21,列300   黑域是：行21,列301   黑域是：行21,列302   黑域是：行21,列303   黑域是：行21,列304<br>黑域是：行21,列305   黑域是：行21,列306   黑域是：行21,列307   黑域是：行21,列308   黑域是：行21,列309   黑域是：行21,列310   黑域是：行21,列311   黑<br>域是：行21,列312   黑域是：行21,列313   黑域是：行21,列314   黑域是：行21,列317   黑域是：行21,列318   黑域是：行21,列319   黑域是：行21,列320   黑域<br>是：行21,列333   黑域是：行21,列334   黑域是：行21,列335   黑域是：行21,列336   黑域是：行21,列337   黑域是：行22,列138   黑域是：行22,列139   黑域是<br>：行22,列140   黑域是：行22,列141   黑域是：行22,列142   黑域是：行22,列143   黑域是：行22,列144   黑域是：行22,列145   黑域是：行22,列146   黑域是：<br>行22,列147   黑域是：行22,列149   黑域是：行22,列150   黑域是：行22,列151   黑域是：行22,列152   黑域是：行22,列153   黑域是：行22,列154   黑域是：行<br>22,列155   黑域是：行22,列156   黑域是：行22,列157   黑域是：行22,列158   黑域是：行22,列159   黑域是：行22,列160   黑域是：行22,列161   黑域是：行22,列162   黑域是：行22,列163   黑域是：行22,列164   黑域是：行22,列165   黑域是：行22,列166   黑域是：行22,列168   黑域是：行22,列169   黑域是：行22,<br>列170   黑域是：行22,列171   黑域是：行22,列172   黑域是：行22,列173   黑域是：行22,列175   黑域是：行22,列176   黑域是：行22,列177   黑域是：行22,列<br>178   黑域是：行22,列179   黑域是：行22,列180   黑域是：行22,列181   黑域是：行22,列182   黑域是：行22,列183   黑域是：行22,列184   黑域是：行22,列185   黑域是：行22,列186   黑域是：行22,列187   黑域是：行22,列188   黑域是：行22,列189   黑域是：行22,列190   黑域是：行22,列191   黑域是：行22,列192<br>  黑域是：行22,列193   黑域是：行22,列194   黑域是：行22,列195   黑域是：行22,列196   黑域是：行22,列197   黑域是：行22,列198   黑域是：行22,列199<br>黑域是：行22,列200   黑域是：行22,列201   黑域是：行22,列202   黑域是：行22,列203   黑域是：行22,列204   黑域是：行22,列205   黑域是：行22,列206   黑<br>域是：行22,列207   黑域是：行22,列208   黑域是：行22,列209   黑域是：行22,列210   黑域是：行22,列211   黑域是：行22,列212   黑域是：行22,列213   黑域<br>是：行22,列214   黑域是：行22,列217   黑域是：行22,列218   黑域是：行22,列219   黑域是：行22,列220   黑域是：行22,列221   黑域是：行22,列225   黑域是<br>：行22,列226   黑域是：行22,列230   黑域是：行22,列231   黑域是：行22,列232   黑域是：行22,列233   黑域是：行22,列236   黑域是：行22,列237   黑域是：<br>行22,列238   黑域是：行22,列241   黑域是：行22,列245   黑域是：行22,列246   黑域是：行22,列247   黑域是：行22,列256   黑域是：行22,列258   黑域是：行<br>22,列259   黑域是：行22,列260   黑域是：行22,列261   黑域是：行22,列262   黑域是：行22,列263   黑域是：行22,列264   黑域是：行22,列265   黑域是：行22,列266   黑域是：行22,列267   黑域是：行22,列268   黑域是：行22,列269   黑域是：行22,列270   黑域是：行22,列271   黑域是：行22,列272   黑域是：行22,<br>列273   黑域是：行22,列274   黑域是：行22,列275   黑域是：行22,列276   黑域是：行22,列277   黑域是：行22,列278   黑域是：行22,列279   黑域是：行22,列<br>280   黑域是：行22,列281   黑域是：行22,列282   黑域是：行22,列283   黑域是：行22,列284   黑域是：行22,列285   黑域是：行22,列286   黑域是：行22,列287   黑域是：行22,列288   黑域是：行22,列289   黑域是：行22,列290   黑域是：行22,列291   黑域是：行22,列292   黑域是：行22,列293   黑域是：行22,列294<br>  黑域是：行22,列295   黑域是：行22,列296   黑域是：行22,列297   黑域是：行22,列298   黑域是：行22,列299   黑域是：行22,列301   黑域是：行22,列302<br>黑域是：行22,列303   黑域是：行22,列304   黑域是：行22,列305   黑域是：行22,列306   黑域是：行22,列307   黑域是：行22,列308   黑域是：行22,列309   黑<br>域是：行22,列310   黑域是：行22,列311   黑域是：行22,列312   黑域是：行22,列313   黑域是：行22,列314   黑域是：行22,列315   黑域是：行22,列316   黑域<br>是：行22,列317   黑域是：行22,列318   黑域是：行22,列321   黑域是：行22,列324   黑域是：行22,列325   黑域是：行22,列326   黑域是：行22,列327   黑域是<br>：行22,列328   黑域是：行22,列330   黑域是：行22,列331   黑域是：行22,列332   黑域是：行22,列333   黑域是：行22,列334   黑域是：行22,列335   黑域是：<br>行22,列336   黑域是：行23,列139   黑域是：行23,列140   黑域是：行23,列141   黑域是：行23,列142   黑域是：行23,列143   黑域是：行23,列144   黑域是：行<br>23,列145   黑域是：行23,列146   黑域是：行23,列147   黑域是：行23,列148   黑域是：行23,列149   黑域是：行23,列150   黑域是：行23,列151   黑域是：行23,列152   黑域是：行23,列153   黑域是：行23,列154   黑域是：行23,列155   黑域是：行23,列156   黑域是：行23,列157   黑域是：行23,列158   黑域是：行23,<br>列161   黑域是：行23,列162   黑域是：行23,列163   黑域是：行23,列164   黑域是：行23,列165   黑域是：行23,列166   黑域是：行23,列168   黑域是：行23,列<br>169   黑域是：行23,列170   黑域是：行23,列171   黑域是：行23,列172   黑域是：行23,列173   黑域是：行23,列174   黑域是：行23,列175   黑域是：行23,列176   黑域是：行23,列177   黑域是：行23,列178   黑域是：行23,列179   黑域是：行23,列180   黑域是：行23,列181   黑域是：行23,列182   黑域是：行23,列183<br>  黑域是：行23,列184   黑域是：行23,列185   黑域是：行23,列186   黑域是：行23,列187   黑域是：行23,列188   黑域是：行23,列189   黑域是：行23,列190<br>黑域是：行23,列191   黑域是：行23,列192   黑域是：行23,列193   黑域是：行23,列194   黑域是：行23,列195   黑域是：行23,列196   黑域是：行23,列197   黑<br>域是：行23,列198   黑域是：行23,列199   黑域是：行23,列200   黑域是：行23,列201   黑域是：行23,列202   黑域是：行23,列203   黑域是：行23,列204   黑域<br>是：行23,列205   黑域是：行23,列206   黑域是：行23,列207   黑域是：行23,列208   黑域是：行23,列209   黑域是：行23,列210   黑域是：行23,列211   黑域是<br>：行23,列212   黑域是：行23,列213   黑域是：行23,列214   黑域是：行23,列215   黑域是：行23,列216   黑域是：行23,列217   黑域是：行23,列218   黑域是：<br>行23,列219   黑域是：行23,列220   黑域是：行23,列221   黑域是：行23,列224   黑域是：行23,列225   黑域是：行23,列226   黑域是：行23,列227   黑域是：行<br>23,列228   黑域是：行23,列229   黑域是：行23,列232   黑域是：行23,列237   黑域是：行23,列238   黑域是：行23,列241   黑域是：行23,列242   黑域是：行23,列243   黑域是：行23,列244   黑域是：行23,列245   黑域是：行23,列247   黑域是：行23,列248   黑域是：行23,列249   黑域是：行23,列250   黑域是：行23,<br>列251   黑域是：行23,列253   黑域是：行23,列254   黑域是：行23,列256   黑域是：行23,列257   黑域是：行23,列258   黑域是：行23,列259   黑域是：行23,列<br>260   黑域是：行23,列261   黑域是：行23,列262   黑域是：行23,列264   黑域是：行23,列265   黑域是：行23,列266   黑域是：行23,列267   黑域是：行23,列268   黑域是：行23,列269   黑域是：行23,列272   黑域是：行23,列273   黑域是：行23,列274   黑域是：行23,列275   黑域是：行23,列276   黑域是：行23,列277<br>  黑域是：行23,列278   黑域是：行23,列279   黑域是：行23,列280   黑域是：行23,列281   黑域是：行23,列282   黑域是：行23,列283   黑域是：行23,列284<br>黑域是：行23,列285   黑域是：行23,列286   黑域是：行23,列287   黑域是：行23,列288   黑域是：行23,列289   黑域是：行23,列290   黑域是：行23,列291   黑<br>域是：行23,列292   黑域是：行23,列293   黑域是：行23,列294   黑域是：行23,列295   黑域是：行23,列296   黑域是：行23,列297   黑域是：行23,列301   黑域<br>是：行23,列302   黑域是：行23,列303   黑域是：行23,列304   黑域是：行23,列305   黑域是：行23,列306   黑域是：行23,列307   黑域是：行23,列308   黑域是<br>：行23,列309   黑域是：行23,列312   黑域是：行23,列313   黑域是：行23,列314   黑域是：行23,列315   黑域是：行23,列316   黑域是：行23,列317   黑域是：<br>行23,列318   黑域是：行23,列319   黑域是：行23,列321   黑域是：行23,列322   黑域是：行23,列323   黑域是：行23,列324   黑域是：行23,列325   黑域是：行<br>23,列326   黑域是：行23,列327   黑域是：行23,列328   黑域是：行23,列329   黑域是：行23,列330   黑域是：行23,列335   黑域是：行23,列336   黑域是：行24,列140   黑域是：行24,列141   黑域是：行24,列144   黑域是：行24,列145   黑域是：行24,列146   黑域是：行24,列147   黑域是：行24,列148   黑域是：行24,<br>列149   黑域是：行24,列150   黑域是：行24,列151   黑域是：行24,列152   黑域是：行24,列153   黑域是：行24,列154   黑域是：行24,列155   黑域是：行24,列<br>156   黑域是：行24,列157   黑域是：行24,列158   黑域是：行24,列160   黑域是：行24,列161   黑域是：行24,列162   黑域是：行24,列163   黑域是：行24,列164   黑域是：行24,列165   黑域是：行24,列166   黑域是：行24,列167   黑域是：行24,列168   黑域是：行24,列169   黑域是：行24,列170   黑域是：行24,列171<br>  黑域是：行24,列172   黑域是：行24,列173   黑域是：行24,列174   黑域是：行24,列175   黑域是：行24,列176   黑域是：行24,列177   黑域是：行24,列178<br>黑域是：行24,列179   黑域是：行24,列180   黑域是：行24,列181   黑域是：行24,列182   黑域是：行24,列183   黑域是：行24,列184   黑域是：行24,列185   黑<br>域是：行24,列186   黑域是：行24,列187   黑域是：行24,列188   黑域是：行24,列189   黑域是：行24,列190   黑域是：行24,列191   黑域是：行24,列192   黑域<br>是：行24,列193   黑域是：行24,列194   黑域是：行24,列195   黑域是：行24,列196   黑域是：行24,列197   黑域是：行24,列198   黑域是：行24,列199   黑域是<br>：行24,列200   黑域是：行24,列201   黑域是：行24,列202   黑域是：行24,列203   黑域是：行24,列204   黑域是：行24,列205   黑域是：行24,列206   黑域是：<br>行24,列207   黑域是：行24,列208   黑域是：行24,列209   黑域是：行24,列210   黑域是：行24,列211   黑域是：行24,列212   黑域是：行24,列213   黑域是：行<br>24,列214   黑域是：行24,列215   黑域是：行24,列216   黑域是：行24,列217   黑域是：行24,列218   黑域是：行24,列219   黑域是：行24,列220   黑域是：行24,列221   黑域是：行24,列222   黑域是：行24,列223   黑域是：行24,列224   黑域是：行24,列225   黑域是：行24,列226   黑域是：行24,列227   黑域是：行24,<br>列228   黑域是：行24,列229   黑域是：行24,列230   黑域是：行24,列231   黑域是：行24,列232   黑域是：行24,列233   黑域是：行24,列234   黑域是：行24,列<br>235   黑域是：行24,列236   黑域是：行24,列237   黑域是：行24,列238   黑域是：行24,列239   黑域是：行24,列240   黑域是：行24,列242   黑域是：行24,列243   黑域是：行24,列244   黑域是：行24,列245   黑域是：行24,列246   黑域是：行24,列247   黑域是：行24,列248   黑域是：行24,列249   黑域是：行24,列250<br>  黑域是：行24,列251   黑域是：行24,列252   黑域是：行24,列253   黑域是：行24,列254   黑域是：行24,列255   黑域是：行24,列256   黑域是：行24,列257<br>黑域是：行24,列258   黑域是：行24,列259   黑域是：行24,列260   黑域是：行24,列261   黑域是：行24,列262   黑域是：行24,列263   黑域是：行24,列264   黑<br>域是：行24,列265   黑域是：行24,列267   黑域是：行24,列268   黑域是：行24,列269   黑域是：行24,列270   黑域是：行24,列271   黑域是：行24,列272   黑域<br>是：行24,列273   黑域是：行24,列274   黑域是：行24,列275   黑域是：行24,列276   黑域是：行24,列277   黑域是：行24,列278   黑域是：行24,列279   黑域是<br>：行24,列280   黑域是：行24,列281   黑域是：行24,列282   黑域是：行24,列283   黑域是：行24,列284   黑域是：行24,列285   黑域是：行24,列286   黑域是：<br>行24,列287   黑域是：行24,列288   黑域是：行24,列289   黑域是：行24,列290   黑域是：行24,列291   黑域是：行24,列292   黑域是：行24,列293   黑域是：行<br>24,列294   黑域是：行24,列295   黑域是：行24,列296   黑域是：行24,列297   黑域是：行24,列298   黑域是：行24,列299   黑域是：行24,列300   黑域是：行24,列301   黑域是：行24,列302   黑域是：行24,列303   黑域是：行24,列304   黑域是：行24,列305   黑域是：行24,列306   黑域是：行24,列307   黑域是：行24,<br>列308   黑域是：行24,列309   黑域是：行24,列310   黑域是：行24,列311   黑域是：行24,列312   黑域是：行24,列313   黑域是：行24,列314   黑域是：行24,列<br>315   黑域是：行24,列316   黑域是：行24,列317   黑域是：行24,列318   黑域是：行24,列319   黑域是：行24,列320   黑域是：行24,列321   黑域是：行24,列322   黑域是：行24,列323   黑域是：行24,列324   黑域是：行24,列325   黑域是：行24,列326   黑域是：行24,列327   黑域是：行24,列328   黑域是：行25,列140<br>  黑域是：行25,列141   黑域是：行25,列144   黑域是：行25,列145   黑域是：行25,列146   黑域是：行25,列147   黑域是：行25,列148   黑域是：行25,列149<br>黑域是：行25,列150   黑域是：行25,列151   黑域是：行25,列152   黑域是：行25,列153   黑域是：行25,列154   黑域是：行25,列155   黑域是：行25,列156   黑<br>域是：行25,列157   黑域是：行25,列158   黑域是：行25,列159   黑域是：行25,列160   黑域是：行25,列161   黑域是：行25,列162   黑域是：行25,列163   黑域<br>是：行25,列164   黑域是：行25,列165   黑域是：行25,列166   黑域是：行25,列167   黑域是：行25,列168   黑域是：行25,列169   黑域是：行25,列170   黑域是<br>：行25,列171   黑域是：行25,列172   黑域是：行25,列173   黑域是：行25,列174   黑域是：行25,列175   黑域是：行25,列176   黑域是：行25,列177   黑域是：<br>行25,列178   黑域是：行25,列179   黑域是：行25,列180   黑域是：行25,列181   黑域是：行25,列182   黑域是：行25,列183   黑域是：行25,列184   黑域是：行<br>25,列185   黑域是：行25,列186   黑域是：行25,列187   黑域是：行25,列188   黑域是：行25,列189   黑域是：行25,列190   黑域是：行25,列191   黑域是：行25,列192   黑域是：行25,列193   黑域是：行25,列194   黑域是：行25,列195   黑域是：行25,列196   黑域是：行25,列197   黑域是：行25,列198   黑域是：行25,<br>列199   黑域是：行25,列200   黑域是：行25,列201   黑域是：行25,列202   黑域是：行25,列203   黑域是：行25,列204   黑域是：行25,列205   黑域是：行25,列<br>206   黑域是：行25,列207   黑域是：行25,列208   黑域是：行25,列209   黑域是：行25,列210   黑域是：行25,列211   黑域是：行25,列212   黑域是：行25,列213   黑域是：行25,列214   黑域是：行25,列215   黑域是：行25,列216   黑域是：行25,列217   黑域是：行25,列218   黑域是：行25,列219   黑域是：行25,列220<br>  黑域是：行25,列221   黑域是：行25,列222   黑域是：行25,列223   黑域是：行25,列224   黑域是：行25,列225   黑域是：行25,列226   黑域是：行25,列227<br>黑域是：行25,列228   黑域是：行25,列229   黑域是：行25,列230   黑域是：行25,列231   黑域是：行25,列232   黑域是：行25,列233   黑域是：行25,列234   黑<br>域是：行25,列235   黑域是：行25,列236   黑域是：行25,列237   黑域是：行25,列238   黑域是：行25,列239   黑域是：行25,列240   黑域是：行25,列241   黑域<br>是：行25,列242   黑域是：行25,列243   黑域是：行25,列244   黑域是：行25,列245   黑域是：行25,列246   黑域是：行25,列247   黑域是：行25,列248   黑域是<br>：行25,列249   黑域是：行25,列250   黑域是：行25,列251   黑域是：行25,列252   黑域是：行25,列253   黑域是：行25,列254   黑域是：行25,列255   黑域是：<br>行25,列256   黑域是：行25,列257   黑域是：行25,列258   黑域是：行25,列259   黑域是：行25,列260   黑域是：行25,列261   黑域是：行25,列262   黑域是：行<br>25,列263   黑域是：行25,列264   黑域是：行25,列265   黑域是：行25,列266   黑域是：行25,列267   黑域是：行25,列268   黑域是：行25,列269   黑域是：行25,列270   黑域是：行25,列271   黑域是：行25,列272   黑域是：行25,列273   黑域是：行25,列274   黑域是：行25,列275   黑域是：行25,列276   黑域是：行25,<br>列277   黑域是：行25,列278   黑域是：行25,列279   黑域是：行25,列280   黑域是：行25,列281   黑域是：行25,列282   黑域是：行25,列283   黑域是：行25,列<br>284   黑域是：行25,列285   黑域是：行25,列286   黑域是：行25,列287   黑域是：行25,列288   黑域是：行25,列289   黑域是：行25,列290   黑域是：行25,列291   黑域是：行25,列292   黑域是：行25,列293   黑域是：行25,列294   黑域是：行25,列295   黑域是：行25,列296   黑域是：行25,列297   黑域是：行25,列298<br>  黑域是：行25,列299   黑域是：行25,列300   黑域是：行25,列301   黑域是：行25,列302   黑域是：行25,列303   黑域是：行25,列304   黑域是：行25,列305<br>黑域是：行25,列306   黑域是：行25,列307   黑域是：行25,列308   黑域是：行25,列309   黑域是：行25,列310   黑域是：行25,列311   黑域是：行25,列312   黑<br>域是：行25,列315   黑域是：行25,列316   黑域是：行25,列317   黑域是：行25,列318   黑域是：行25,列319   黑域是：行25,列320   黑域是：行25,列324   黑域<br>是：行25,列325   黑域是：行25,列326   黑域是：行26,列142   黑域是：行26,列143   黑域是：行26,列144   黑域是：行26,列145   黑域是：行26,列146   黑域是<br>：行26,列147   黑域是：行26,列148   黑域是：行26,列149   黑域是：行26,列150   黑域是：行26,列151   黑域是：行26,列152   黑域是：行26,列153   黑域是：<br>行26,列154   黑域是：行26,列155   黑域是：行26,列156   黑域是：行26,列157   黑域是：行26,列158   黑域是：行26,列159   黑域是：行26,列160   黑域是：行<br>26,列161   黑域是：行26,列162   黑域是：行26,列163   黑域是：行26,列164   黑域是：行26,列165   黑域是：行26,列166   黑域是：行26,列167   黑域是：行26,列168   黑域是：行26,列169   黑域是：行26,列170   黑域是：行26,列171   黑域是：行26,列172   黑域是：行26,列173   黑域是：行26,列174   黑域是：行26,<br>列175   黑域是：行26,列176   黑域是：行26,列177   黑域是：行26,列178   黑域是：行26,列179   黑域是：行26,列180   黑域是：行26,列181   黑域是：行26,列<br>182   黑域是：行26,列183   黑域是：行26,列184   黑域是：行26,列185   黑域是：行26,列186   黑域是：行26,列187   黑域是：行26,列188   黑域是：行26,列189   黑域是：行26,列190   黑域是：行26,列191   黑域是：行26,列192   黑域是：行26,列193   黑域是：行26,列194   黑域是：行26,列195   黑域是：行26,列196<br>  黑域是：行26,列197   黑域是：行26,列198   黑域是：行26,列199   黑域是：行26,列200   黑域是：行26,列201   黑域是：行26,列202   黑域是：行26,列203<br>黑域是：行26,列204   黑域是：行26,列205   黑域是：行26,列206   黑域是：行26,列207   黑域是：行26,列208   黑域是：行26,列209   黑域是：行26,列210   黑<br>域是：行26,列211   黑域是：行26,列212   黑域是：行26,列213   黑域是：行26,列214   黑域是：行26,列215   黑域是：行26,列216   黑域是：行26,列217   黑域<br>是：行26,列218   黑域是：行26,列219   黑域是：行26,列220   黑域是：行26,列222   黑域是：行26,列223   黑域是：行26,列224   黑域是：行26,列225   黑域是<br>：行26,列226   黑域是：行26,列227   黑域是：行26,列228   黑域是：行26,列229   黑域是：行26,列230   黑域是：行26,列231   黑域是：行26,列232   黑域是：<br>行26,列233   黑域是：行26,列234   黑域是：行26,列235   黑域是：行26,列236   黑域是：行26,列237   黑域是：行26,列238   黑域是：行26,列239   黑域是：行<br>26,列240   黑域是：行26,列241   黑域是：行26,列242   黑域是：行26,列243   黑域是：行26,列244   黑域是：行26,列245   黑域是：行26,列246   黑域是：行26,列247   黑域是：行26,列248   黑域是：行26,列249   黑域是：行26,列250   黑域是：行26,列251   黑域是：行26,列252   黑域是：行26,列253   黑域是：行26,<br>列254   黑域是：行26,列255   黑域是：行26,列256   黑域是：行26,列257   黑域是：行26,列258   黑域是：行26,列259   黑域是：行26,列260   黑域是：行26,列<br>261   黑域是：行26,列262   黑域是：行26,列263   黑域是：行26,列264   黑域是：行26,列265   黑域是：行26,列266   黑域是：行26,列267   黑域是：行26,列268   黑域是：行26,列269   黑域是：行26,列270   黑域是：行26,列271   黑域是：行26,列272   黑域是：行26,列273   黑域是：行26,列274   黑域是：行26,列275<br>  黑域是：行26,列276   黑域是：行26,列277   黑域是：行26,列278   黑域是：行26,列279   黑域是：行26,列280   黑域是：行26,列281   黑域是：行26,列282<br>黑域是：行26,列283   黑域是：行26,列284   黑域是：行26,列285   黑域是：行26,列286   黑域是：行26,列287   黑域是：行26,列288   黑域是：行26,列289   黑<br>域是：行26,列290   黑域是：行26,列291   黑域是：行26,列292   黑域是：行26,列293   黑域是：行26,列295   黑域是：行26,列296   黑域是：行26,列297   黑域<br>是：行26,列298   黑域是：行26,列299   黑域是：行26,列300   黑域是：行26,列301   黑域是：行26,列302   黑域是：行26,列303   黑域是：行26,列304   黑域是<br>：行26,列305   黑域是：行26,列306   黑域是：行26,列307   黑域是：行26,列308   黑域是：行26,列309   黑域是：行26,列310   黑域是：行26,列311   黑域是：<br>行26,列312   黑域是：行26,列313   黑域是：行26,列314   黑域是：行26,列316   黑域是：行27,列141   黑域是：行27,列142   黑域是：行27,列143   黑域是：行<br>27,列144   黑域是：行27,列145   黑域是：行27,列146   黑域是：行27,列147   黑域是：行27,列148   黑域是：行27,列149   黑域是：行27,列150   黑域是：行27,列151   黑域是：行27,列152   黑域是：行27,列153   黑域是：行27,列154   黑域是：行27,列156   黑域是：行27,列157   黑域是：行27,列158   黑域是：行27,<br>列159   黑域是：行27,列160   黑域是：行27,列161   黑域是：行27,列162   黑域是：行27,列163   黑域是：行27,列164   黑域是：行27,列165   黑域是：行27,列<br>166   黑域是：行27,列167   黑域是：行27,列168   黑域是：行27,列169   黑域是：行27,列170   黑域是：行27,列171   黑域是：行27,列172   黑域是：行27,列173   黑域是：行27,列174   黑域是：行27,列175   黑域是：行27,列176   黑域是：行27,列177   黑域是：行27,列178   黑域是：行27,列179   黑域是：行27,列180<br>  黑域是：行27,列181   黑域是：行27,列182   黑域是：行27,列183   黑域是：行27,列184   黑域是：行27,列185   黑域是：行27,列186   黑域是：行27,列187<br>黑域是：行27,列188   黑域是：行27,列189   黑域是：行27,列190   黑域是：行27,列191   黑域是：行27,列192   黑域是：行27,列193   黑域是：行27,列194   黑<br>域是：行27,列195   黑域是：行27,列196   黑域是：行27,列197   黑域是：行27,列198   黑域是：行27,列199   黑域是：行27,列200   黑域是：行27,列201   黑域<br>是：行27,列202   黑域是：行27,列203   黑域是：行27,列204   黑域是：行27,列205   黑域是：行27,列206   黑域是：行27,列207   黑域是：行27,列208   黑域是<br>：行27,列209   黑域是：行27,列210   黑域是：行27,列211   黑域是：行27,列212   黑域是：行27,列213   黑域是：行27,列214   黑域是：行27,列215   黑域是：<br>行27,列216   黑域是：行27,列217   黑域是：行27,列218   黑域是：行27,列219   黑域是：行27,列220   黑域是：行27,列221   黑域是：行27,列222   黑域是：行<br>27,列223   黑域是：行27,列224   黑域是：行27,列225   黑域是：行27,列226   黑域是：行27,列227   黑域是：行27,列228   黑域是：行27,列229   黑域是：行27,列230   黑域是：行27,列231   黑域是：行27,列232   黑域是：行27,列233   黑域是：行27,列234   黑域是：行27,列235   黑域是：行27,列236   黑域是：行27,<br>列237   黑域是：行27,列238   黑域是：行27,列239   黑域是：行27,列240   黑域是：行27,列241   黑域是：行27,列242   黑域是：行27,列243   黑域是：行27,列<br>244   黑域是：行27,列245   黑域是：行27,列246   黑域是：行27,列247   黑域是：行27,列248   黑域是：行27,列251   黑域是：行27,列252   黑域是：行27,列253   黑域是：行27,列254   黑域是：行27,列255   黑域是：行27,列256   黑域是：行27,列257   黑域是：行27,列258   黑域是：行27,列259   黑域是：行27,列260<br>  黑域是：行27,列261   黑域是：行27,列262   黑域是：行27,列263   黑域是：行27,列264   黑域是：行27,列265   黑域是：行27,列266   黑域是：行27,列267<br>黑域是：行27,列269   黑域是：行27,列270   黑域是：行27,列271   黑域是：行27,列272   黑域是：行27,列273   黑域是：行27,列274   黑域是：行27,列275   黑<br>域是：行27,列276   黑域是：行27,列277   黑域是：行27,列278   黑域是：行27,列279   黑域是：行27,列280   黑域是：行27,列288   黑域是：行27,列289   黑域<br>是：行27,列290   黑域是：行27,列292   黑域是：行27,列293   黑域是：行27,列294   黑域是：行27,列295   黑域是：行27,列296   黑域是：行27,列297   黑域是<br>：行27,列298   黑域是：行27,列299   黑域是：行27,列300   黑域是：行27,列301   黑域是：行27,列302   黑域是：行27,列303   黑域是：行28,列140   黑域是：<br>行28,列141   黑域是：行28,列142   黑域是：行28,列143   黑域是：行28,列144   黑域是：行28,列145   黑域是：行28,列146   黑域是：行28,列148   黑域是：行<br>28,列149   黑域是：行28,列150   黑域是：行28,列151   黑域是：行28,列152   黑域是：行28,列153   黑域是：行28,列154   黑域是：行28,列157   黑域是：行28,列158   黑域是：行28,列159   黑域是：行28,列160   黑域是：行28,列162   黑域是：行28,列163   黑域是：行28,列164   黑域是：行28,列165   黑域是：行28,<br>列166   黑域是：行28,列167   黑域是：行28,列168   黑域是：行28,列169   黑域是：行28,列170   黑域是：行28,列171   黑域是：行28,列172   黑域是：行28,列<br>173   黑域是：行28,列174   黑域是：行28,列175   黑域是：行28,列176   黑域是：行28,列177   黑域是：行28,列178   黑域是：行28,列179   黑域是：行28,列180   黑域是：行28,列181   黑域是：行28,列182   黑域是：行28,列183   黑域是：行28,列184   黑域是：行28,列185   黑域是：行28,列186   黑域是：行28,列187<br>  黑域是：行28,列190   黑域是：行28,列191   黑域是：行28,列192   黑域是：行28,列193   黑域是：行28,列194   黑域是：行28,列195   黑域是：行28,列196<br>黑域是：行28,列197   黑域是：行28,列198   黑域是：行28,列199   黑域是：行28,列202   黑域是：行28,列203   黑域是：行28,列204   黑域是：行28,列206   黑<br>域是：行28,列207   黑域是：行28,列208   黑域是：行28,列209   黑域是：行28,列212   黑域是：行28,列213   黑域是：行28,列214   黑域是：行28,列215   黑域<br>是：行28,列216   黑域是：行28,列217   黑域是：行28,列221   黑域是：行28,列222   黑域是：行28,列225   黑域是：行28,列226   黑域是：行28,列228   黑域是<br>：行28,列229   黑域是：行28,列230   黑域是：行28,列231   黑域是：行28,列232   黑域是：行28,列233   黑域是：行28,列234   黑域是：行28,列238   黑域是：<br>行28,列243   黑域是：行28,列244   黑域是：行28,列245   黑域是：行28,列252   黑域是：行28,列253   黑域是：行28,列254   黑域是：行28,列255   黑域是：行<br>28,列256   黑域是：行28,列260   黑域是：行28,列263   黑域是：行28,列264   黑域是：行28,列275   黑域是：行28,列276   黑域是：行29,列149   黑域是：行29,列161   黑域是：行29,列162   黑域是：行29,列163   黑域是：行29,列164   黑域是：行29,列166   黑域是：行29,列167   黑域是：行29,列168   黑域是：行29,<br>列169   黑域是：行29,列170   黑域是：行29,列173   黑域是：行29,列174   黑域是：行29,列181   黑域是：行29,列182   黑域是：行29,列183   黑域是：行29,列<br>184   黑域是：行78,列355   黑域是：行78,列356   黑域是：行78,列357   黑域是：行78,列358   黑域是：行218,列194   黑域是：行218,列195   黑域是：行219,<br>列193   黑域是：行219,列194   黑域是：行219,列195   黑域是：行219,列196   黑域是：行219,列359   黑域是：行219,列360   黑域是：行220,列193   黑域是：<br>行220,列194   黑域是：行220,列195   黑域是：行220,列196   黑域是：行220,列198   黑域是：行220,列358   黑域是：行220,列359   黑域是：行221,列194   黑<br>域是：行221,列195   黑域是：行221,列196   黑域是：行221,列197   黑域是：行222,列195   黑域是：行272,列160   黑域是：行272,列161   黑域是：行275,列157   黑域是：行276,列156   黑域是：行276,列157   黑域是：行276,列158   黑域是：行277,列158   黑域是：行277,列159   黑域是：行277,列160   黑域是：行295,列474   黑域是：行295,列475   黑域是：行295,列476   黑域是：行296,列474   黑域是：行296,列475   黑域是：行296,列476   黑域是：行297,列473   黑域是：<br>行297,列474   黑域是：行297,列475   黑域是：行298,列225   黑域是：行298,列472   黑域是：行298,列526   黑域是：行299,列472   黑域是：行299,列473   黑<br>域是：行300,列472   黑域是：行319,列164   黑域是：行319,列165   黑域是：行320,列163   黑域是：行320,列164   黑域是：行320,列165   黑域是：行320,列321   黑域是：行320,列322   黑域是：行321,列318   黑域是：行321,列319   黑域是：行321,列320   黑域是：行321,列321   黑域是：行321,列322   黑域是：行322,列319   黑域是：行322,列320   黑域是：行346,列477   黑域是：行346,列478   黑域是：行379,列176   黑域是：行379,列177   黑域是：行380,列176   黑域是：<br>行381,列177   黑域是：行381,列178   黑域是：行381,列179   黑域是：行382,列178   黑域是：行382,列181   黑域是：行382,列182   黑域是：行384,列221   黑<br>域是：行387,列221   黑域是：行387,列222   黑域是：行387,列223   黑域是：行387,列224   黑域是：行387,列225   黑域是：行387,列226   黑域是：行388,列222   黑域是：行388,列223   黑域是：行388,列224   黑域是：行388,列225   黑域是：行389,列222   黑域是：行389,列223   黑域是：行389,列224   黑域是：行389,列225   黑域是：行390,列222   黑域是：行390,列223   黑域是：行390,列224   黑域是：行393,列165   黑域是：行394,列299   黑域是：行394,列300   黑域是：<br>行394,列301   黑域是：行395,列300   黑域是：行395,列301   黑域是：行395,列302   黑域是：行396,列299   黑域是：行396,列300   黑域是：行396,列301   黑<br>域是：行396,列302   黑域是：行396,列303   黑域是：行397,列298   黑域是：行397,列299   黑域是：行398,列296   黑域是：行398,列297   黑域是：行398,列300   黑域是：行398,列301   黑域是：行398,列302   黑域是：行464,列303   黑域是：行465,列303   黑域是：行465,列304   黑域是：行465,列305   黑域是：行465,列306   黑域是：行466,列300   黑域是：行466,列301   黑域是：行466,列302   黑域是：行466,列303   黑域是：行466,列304   黑域是：行466,列305   黑域是：<br>行466,列306   黑域是：行466,列307   黑域是：行467,列301   黑域是：行467,列302   黑域是：行467,列303   黑域是：行467,列304   黑域是：行467,列305   黑<br>域是：行467,列306   黑域是：行468,列301   黑域是：行468,列302   黑域是：行468,列303   黑域是：行468,列304   黑域是：行468,列305   黑域是：行468,列306   黑域是：行468,列307   黑域是：行469,列300   黑域是：行469,列301   黑域是：行469,列302   黑域是：行469,列303   黑域是：行469,列304   黑域是：行469,列305   黑域是：行469,列306   黑域是：行469,列307   黑域是：行470,列300   黑域是：行470,列301   黑域是：行470,列302   黑域是：行470,列303   黑域是：<br>行470,列304   黑域是：行470,列305   黑域是：行471,列215   黑域是：行471,列301   黑域是：行471,列302<br></code></pre></td></tr></table></figure><p><img src="25.jpg" alt=""></p><blockquote><p>经过计算机的绘画</p></blockquote><p><img src="26.jpg" alt=""></p><p>结束，谢谢观看。</p><h2 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h2><p>这篇感想所表达的内容的效果特别有趣，而且显然可以看出学弟的表情相当丰富，这个在概要中也能体现。然后有一些不足，主要是说的比做的多，结果可用性较差，然后在控制台输出信息时要注意换行。。。</p><p>多加练习，还有提高空间。</p><p><img src="27.jpg" alt=""></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>孟郊《登科后》<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>陶渊明《杂诗》<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>白居易《长恨歌》<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>日常</tag>
      
      <tag>坑!</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>社畜工厂——草民的失败</title>
    <link href="/post/%E7%A4%BE%E7%95%9C%E5%B7%A5%E5%8E%82-%E8%8D%89%E6%B0%91%E7%9A%84%E5%A4%B1%E8%B4%A5/"/>
    <url>/post/%E7%A4%BE%E7%95%9C%E5%B7%A5%E5%8E%82-%E8%8D%89%E6%B0%91%E7%9A%84%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><img src="1.png" alt=""></p><p>今早看见一个关于日本男人表现社畜生活的宣传片，不禁想法一现，发现焦虑很可能来源于自我的懦弱和对无能为力之事的隐藏深处的恐惧。小时候看过不少的小说影视剧，深受金庸先生的江湖观念影响，善于恶，是与非。就像现在还会自己定义一些好的坏的，对的错的。一些观念成为行事准则之后就会发现自己想成为什么样的人，不想成为什么样的人。在我看来，社畜是典型的两面人的代表，因此我正逐渐走向社畜之路，渐渐离我想成为的人渐行渐远。</p><p><img src="2.jpg" alt=""></p><h2 id="快餐社交的陷阱"><a href="#快餐社交的陷阱" class="headerlink" title="快餐社交的陷阱"></a>快餐社交的陷阱</h2><p>时间上的自由往往直接让我们觉得我们在相同的时间内，能够做的事情比以前更多。因此就像我平时上课期间不求甚解一样，总觉得老师把我们圈在这里是一件浪费时间的事情。事实上，后来发现不只是我一个人有这样的想法。不知从哪个时刻开始，人与人的社交关系变成了浅尝辄止，一旦相处过程中遇到观点相冲突的地方往往就预示着交流的结束。前几年流行大批判“快餐式”阅读——只愿意看简短的内容，看到长篇大论的内容就头痛。在某些层面上，快餐式社交与阅读有相当的雷同之处。生活节奏的加快，在大多数情况下已经让深入细致的去了解成了一种特别稀缺的交互过程。</p><p>导致的结果就是，人与人之间的交往逐渐变得不再真实，人与人总是会对两人之间的距离错误估计。也不知道从什么时候开始，就被说：“如果你认真就输了”。然后各种社交软件上甚至见面交流，每个人都会下意识地放着真真假假虚虚实实的大炮，商业互夸，互吹互垒，若是某天我们再也不会说实话了，我们是不是在背离真实存在的感情？王力宏有一张专辑叫做《盖世英雄》，里面有一首歌叫做《在梅边》，里面讲到我们逐渐陷入了像《三体》里面描述的威慑纪元之后的情绪化社会，一切事情的结果都被简单地被情绪所左右，掉入了一个一切都简单化的快餐陷阱。</p><p><img src="3.png" alt=""></p><h2 id="优势地位的霸权"><a href="#优势地位的霸权" class="headerlink" title="优势地位的霸权"></a>优势地位的霸权</h2><p>最近人民日报几乎天天发表有关美国的各种事务，然后给我们一种对美国的刻板印象：“美国就是一个仗着自身强大，然后就可以在国际上胡作非为的典型代表。”我们把这种行径称为优势地位的霸权。这种优势地位的霸权不仅发生在国际社会上，在我们的日常生活中也随处可见。经常有一些时候聚在一起讨论一些事情，然后每个人都表达出了自己的看法，然后总是被某一个处于优势地位的人的一句话而否决或者下定义。优势地位需要获得非优势地位的支持，就会刻意表现接地气。因此这种霸权的常见伴生物是伪民主，就像美国一样，他们总统大选全民参与，然后美国7大政治家族的幕后老板都是华尔街的犹太财团。放在我们身边来看这种优势地位的霸权，优势地位者总是会根据自己的想法，去选择性地抽取民意，而这种民意不一定都能代表整体的利益。</p><p>我身边不管在哪个场合都能遇到优势地位的人，或者我自己在某些地方也属于优势地位。也就是说，在不知不觉当中，没有任何预兆和提醒，优势霸权就这样顺其自然地发生。当我发现的时候，我在向我所讨厌的人的方向越走越远，然后衍生出了对自己判断能力缺失的厌恶，和沉迷于温室环境的紧张与恐惧。我尝试在某些方面减少活动，以降低自己在这个方面的地位，以达到破除优势地位的目的，但结果自己怎么做都会被自己和别人所诟病，于是处在自我反思和嫌弃的怪圈之中难以跳出。</p><p><img src="4.png" alt=""></p><h2 id="和平演变的沉沦"><a href="#和平演变的沉沦" class="headerlink" title="和平演变的沉沦"></a>和平演变的沉沦</h2><p>每个人应该都曾经在初入大学时，规划自己几年后的模样。当初从高中出来的青涩少年，在社会主义核心价值观培养出来的不成熟的思想之下，总是把自己想象成自己是个正义的使者，就像煎饼侠一样。同时我把我不成熟的思想一直沿用至今，就是为了不想变成所见到的圆滑、嘴巴甜蜜蜜、世俗和社会的状态。长久以来接受的儒家文化熏陶让我下意识会去抵制说谎，然后嫌弃变得越来越虚伪的自己。但现实是长期处在这样的一种环境之下，以前的再不适应，也会变的慢慢适应。如果当某个时刻的我发现我与这样的人能够融洽相处，还能相互调侃之后，我应该已经渐渐变成了这样的人。</p><p>和平演变不是最令人痛苦的事情，一直保持初心虽然会造成离群，但内心不会嫌弃自己。当和平演变之后，又突然发现了自己离自己想成为的人越来越远之后，最是让人痛苦。一边你在大群体中表现得若即若离，一边你在怀疑自己的内疚中内心翻江倒海。</p><hr><p>以前我总觉得所有的事情都是想做并认真做都是能够做到的事情。现在看来，学校就是一台巨大的社畜工厂，源源不断地为社会改造刚从中学出来的青涩小伙。最可怕的事情是这种改造没有预兆和表现，就这样顺其自然的发生。这似乎是一个永远也无法跳出的怪圈，紧紧地束缚着想要逃离和远走高飞的人们。“没有一点点防备，也没有一丝丝顾虑，就这样出现”。当自己眼睁睁看着自己变成自己当初所讨厌的模样，却无能为力做任何改变，我想人世间最大的痛苦也莫过于此。</p>]]></content>
    
    
    <categories>
      
      <category>聊自己</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自述</tag>
      
      <tag>白话</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>材料力学-压杆稳定</title>
    <link href="/post/%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6-%E5%8E%8B%E6%9D%86%E7%A8%B3%E5%AE%9A/"/>
    <url>/post/%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6-%E5%8E%8B%E6%9D%86%E7%A8%B3%E5%AE%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>大学本科土木工程的材料力学和结构力学课程中提到了两类结构失稳问题。材料力学中探究长细杆在轴向压力和可能的垂直轴向压力的共同作用下，构件沿其长度方向发生侧向挠度的情况，该侧向挠度的发生是由于杆件柔度较大，当发生挠度时杆件中主应力尚未达到破坏极限，杆件产生的内力和外部荷载在杆件任意位置处于静力学平衡状态。结构力学中引入了非完善体系的失稳状态，根据大小挠度理论，体系在外荷载小于一定范围时，其发生的形变与荷载成正相关，且体系的静力学特征处于平衡状态；当荷载超过某一极限时，荷载与形变的关系发生显著变化，此时发生体系失稳。由于两类失稳状态分类在两门不同的学科中，使用过程中，对两种原理的比较和应用存在不便。笔者将两类失稳的原理推导和静力学分析进行整合，导出两种失稳状态下的力学特点，并将归纳整理得到的性质用于解决实际问题，并给出实际问题的解决过程。</p><h3 id="1细长杆件的失稳：分支失稳"><a href="#1细长杆件的失稳：分支失稳" class="headerlink" title="1细长杆件的失稳：分支失稳"></a>1细长杆件的失稳：分支失稳</h3><hr><p>由平时的生活经验：假设我们有一根长的杆件，如图1。若在杆的两端施加轴向压力，若压力足够大可能发生两种情况：</p><p><img src="1.png" alt=""></p><p><strong>受压破坏：</strong>杆中截面应力超过材料的最大许用应力$ [\sigma ] $，材料发生破坏。</p><p><strong>失稳破坏：</strong>杆件的长细比过大使得杆件在两端压力作用下发生弯曲失稳，如图2。此时发生侧向挠度，可认为杆件失效。</p><p><img src="2.png" alt=""></p><p>根据材料力学的正截面材料破坏条件：$ [\sigma ] < {\sigma _{}} = \frac{F}{A} $</p><p>其中：$F$为施加在杆件正截面的轴力；</p>$ A $为构件的横截面积（假定该杆件横截面处处相等）设当$ F = {F_{\max }}$时，$\frac{F}{A} = [\sigma ] $。再对失稳条件进行分析：由正截面的微元曲率分析可得挠度与弯矩的关系公式：$  - \frac{{M(x)}}{{EI}} = \frac{{{d^2}w(x)}}{{d{x^2}}} $<p>其中$ M(x)$为弯矩函数，$EI$为材料刚度，$w(x) $为挠度函数。</p><p>由图3</p><p><img src="3.png" alt=""></p><p>得出该杆件的力矩平衡方程：（不考虑水平力）$ \frac{{{d^2}w}}{{d{x^2}}} + \frac{F}{{EI}}w = 0 \text{    ①} $</p><p><img src="4.png" alt=""></p><p>若杆端存在水平力时，平衡方程变为： $\frac{{{d^2}w}}{{d{x^2}}} + \frac{F}{{EI}}w = \frac{{{F_R}(l - x)}}{{EI}}\text{②} $</p><p>该方程有通解：$ w*(x) = A\sin \omega x + B\cos \omega x $</p><p>对于式②</p>$ w(x) = \frac{{{F_R}}}{F}(l - x) + w*(x) $<p>令$ k = \sqrt {\frac{F}{{EI}}}  $代入原方程得：</p>$ w*(x) = A\sin kx + B\cos kx $$ w'(x) = Ak\cos kx - Bk\sin kx - \frac{{{F_R}}}{F} $$ {w^{(2)}}(x) =  - A{k^2}\sin kx - B{k^2}\cos kx $<p>此时的通解为自由条件下杆的挠曲平衡方程，而实际情况，往往会有支座进行固定，主要的支座类型有铰支座和固定支座。固定支座和铰支座在计算时得主要区别在于：固定支座处的挠度和转角均等于零；铰支座处挠度为零，转角不一定为零。因此此处将固定支座和铰支座相互搭配形成四种情况分别就其不同的边界条件进行讨论：</p><h4 id="1-1失稳状态公式导出"><a href="#1-1失稳状态公式导出" class="headerlink" title="1.1失稳状态公式导出"></a>1.1失稳状态公式导出</h4><p><strong>两端铰支：</strong>示意见图4，该支座类型没有非轴向力。</p><p><img src="4.png" alt=""></p><p>支座处不提供弯矩，且支座两端均无竖直方向的支座反力，即杆中不存在竖直方向的力产生弯矩。</p><p>因此只需要将边界条件$ {w^{(2)}}(0) = 0 $带入原方程中得：</p>$ {w^{(2)}}(0) =  - A{k^2}\sin k*0 + B{k^2}\cos k*0 = 0 $<p>=&gt; $ B = 0 $</p><p>同理 $ {w^{(2)}}(l) = 0 $</p><p>得：$ A\sin kl \to 0$ => $kl = n\pi  $ 由</p><div class='full-math-div'> $$  k = \sqrt {\frac{F}{{EI}}}  =  > \frac{F}{{EI}} = \frac{{{n^2}{\pi ^2}}}{{{l^2}}} =  > {F_{cr}} = \frac{{{n^2}{\pi ^2}EI}}{{{l^2}}}  $$ </div><p>得到杆件失稳的极限平衡条件。</p><p>平衡方程中存在整数数列n，n在这里指的是挠度形式，如图5</p><p><img src="5.png" alt=""></p><p>图5展示了$ n = 2 $当时的极限状态。</p><p><strong>一端固定：</strong>示意见图6，该支座类型没有非轴向力。</p><p><img src="6.png" alt=""></p><p>因为发生弯曲变形后固定端会存在弯矩$ {w^{(2)}}(0) \ne 0$，但是固定端处的转角为零，即$w'(0) = 0$。即：$w'(0) = Ak\cos k*0 - Bk\sin k*0 = Ak = 0 $</p><p>又$ {w^{(2)}}(l) = 0$ => $kl = \frac{{(2n + 1)\pi }}{2} $</p><p>n为整数数列</p><p>令$ m = \frac{{2n + 1}}{2}$，$kl = m\pi  =  > {F_{cr}} = \frac{{{m^2}{\pi ^2}EI}}{{{l^2}}} $</p><p>一阶失稳时，此时$ m = \frac{1}{2}$，${F_{cr}} = \frac{{{\pi ^2}EI}}{{{{({\rm{2}}l)}^2}}} $</p><p><strong>两端固定：</strong>该支座类型没有非轴向力。</p><p>同上$ w'(0) = 0$ => $A = 0 $</p><p>又因为两端固定对称，且有：$ w(0) = w(l) $</p><p>即：$ B\cos k*0 = B\cos k*l $</p><div class='full-math-div'> $$  kl = 2n\pi  =  > {F_{cr}} = \frac{{4{n^2}{\pi ^2}EI}}{{{l^2}}} = \frac{{{n^2}{\pi ^2}EI}}{{{{(\frac{1}{2}l)}^2}}}  $$ </div><p>一端固定一端铰接：见图7</p><p><img src="7.png" alt=""></p><p>边界条件$ w(0) = 0$，支座提供得水平力不一定为零，代入式②，得：$B + \frac{{{F_R}}}{F}l = 0 $</p><p>又$ w'(0) = 0$ => $Ak = \frac{{{F_R}}}{F}$，且$w(l) = 0$ => $A\sin kl + B\cos kl = 0 $</p><p>有：$ B + Akl = 0$，因为不全为零，即$A \ne 0,B \ne 0 $</p><p>联立两式得：$ \tan kl = kl $</p><p>解得：$ kl = 4.49 $</p><p>因为</p><div class='full-math-div'> $$  kl = 4.49 = \frac{{10}}{7}\pi  =  > {F_{cr}} = \frac{{{\pi ^2}EI}}{{{{(0.7l)}^2}}}  $$ </div><h4 id="1-2四种失稳破坏条件的通用公式"><a href="#1-2四种失稳破坏条件的通用公式" class="headerlink" title="1.2四种失稳破坏条件的通用公式"></a>1.2四种失稳破坏条件的通用公式</h4><p>总结以上四个失稳极限条件得到，在不同情况下杆件极限承载力计算时采用的实际计算长度只与两端的支座形式有关。引入系数描述不同支座特征的计算长度折算系数。得出一般公式：</p>$ {F_{cr}} = \frac{{{\pi ^2}EI}}{{{{(\mu l)}^2}}} $不同支座类型对应的折算系数如下表：| | | | | || :---: | :---: |  :---: |  :---: |  :---: | | 支座类型 | 两端铰支 | 一端固定 | 两端铰支 | 一端较支一端固定 || μ |　1 | 2 | 0.5 | 0.7 |### 1.3受压破坏和失稳破坏的极限条件由材料力学的初步分析结果得：杆件有两种破坏形式，一是受压破坏，二为失稳破坏。这两种破坏形式在所需得极限作用计算方法不同，所以对于同一根杆件其受压破坏极限和失稳极限也不同，我们需要找一种方法以衡量在实际工程中，该杆件在受到足够大得轴向作用时是先发生失稳还是正截面直接达到正截面承载极限破坏。根据$\left\{ {\begin{array}{*{20}{c}}{{F_{\max }} = [\sigma ]A}\\{{F_{cr}} = \frac{{{\pi ^2}EI}}{{{{(\mu l)}^2}}}}\end{array}} \right.$当两个极限相等时得出： $ \frac{{{{(\mu l)}^2}}}{{\frac{I}{A}}} = \frac{{{\pi ^2}E}}{{[\sigma ]}} \text{③} $<p>其中，$ [\sigma ] $与所计算的材料有关；</p>$ I$和$A$与截面的形式有关，可以用来描述截面在某一方向上的力学特性。令，$i = \sqrt {\frac{I}{A}} $,③式变为${(\frac{{\mu l}}{i})^2} = \frac{{{\pi ^2}E}}{{[\sigma ]}} $<p>该式的意义为当杆件的计算长度与截面的力学特性比值等于右边时，杆件在受到轴向荷载时正截面破坏和失稳破坏会同时发生。当增大杆件的计算长度时，其截面保持不变，由$ {F_{cr}}$计算公式，{F_{cr}},${F_{cr}} $减小，此时失稳先发生。即当截面一定时，失稳与正截面破坏的先发生与否与杆件的计算长度有关。</p><p>定义$ \lambda  = \frac{{\mu l}}{i}$作为杆件失稳发生条件的判断系数，当${\lambda ^2} > \frac{{{\pi ^2}E}}{{[\sigma ]}} $<br>截面先发生失稳破坏；相等时两种破坏理论上同时发生。</p><h3 id="2019周培源力学竞赛失稳条件题解"><a href="#2019周培源力学竞赛失稳条件题解" class="headerlink" title="2019周培源力学竞赛失稳条件题解"></a>2019周培源力学竞赛失稳条件题解</h3><p>如题：弹性软基体中有一细长等截面 梁，弯曲刚度EI，梁受轴向压缩。</p><p>(1) 若将弹性基体等效为分布弹簧，其刚度为K<br>(弹性基体对梁单位长度上产生单位挠度时的反力)，<br>试根据图建立分析该长梁失稳的平衡微分方程；</p><p>(2) 假设失稳模式为$ w = Asin\frac{{2\pi }}{\lambda }x$，试求梁发生失稳时的临界载荷和临界失稳波长。${\lambda _{cr}} $</p><p><strong>解：</strong>式①的平衡方程实质上是对杆件的力矩平衡方程，题设中所给的弹簧刚度K可求解竖向力，由于杆件受压发生挠度后在杆件任意截面会对应有相应转角，同上面压杆稳定公式推导类似，对杆件进行弯矩平衡。</p><p>杆长为$ l$，设从左至右的距离为$x $，则：</p><p>杆件本身产生挠度在$ x$处引起的弯矩：$ - EI\frac{{{d^2}w}}{{d{x^2}}}$,外力在$x$截面处产生的弯矩：$Fw(x)$，弹簧弹力在处引起的截面弯矩：$\int\limits_0^l {2Kw(x)(l - x)dx}  $。</p><p>得出平衡方程：</p><div class='full-math-div'> $$   - EI\frac{{{d^2}w}}{{d{x^2}}} = Fw(x) + \int\limits_0^l {2Kw(x)(l - x)dx}   $$ <br />=><br /> $$  EI\frac{{{d^3}w}}{{d{x^3}}} + F\sin \frac{{dw}}{{dx}} + 2Kw(x)dx = 0  $$ </div><p>由挠度是无穷小量，且等式两边消去，得：</p>$ EI\frac{{{d^4}w}}{{d{x^4}}} + F\frac{{{d^2}w}}{{d{x^2}}} + 2Kw(x) = 0 $<p>设方程通解：$ w*(x) = A\sin kx + B\cos kx $</p><p>原式：</p><div class='full-math-div'>$$\begin{array}{l}(EIA{k^4} + 2KA - FA{k^2})\sin kx + \\(EIB{k^4} + 2KB - FB{k^2})\cos kx = 0\end{array}$$</div><p>由题可得：$ A,B $不同时为0</p><p>所以：$ EI{k^4} - F{k^2} + 2K = 0 $</p><p><strong>解得：$ {k^2} = \frac{{F \pm \sqrt {{F^2} - 8KEI} }}{{2EI}} $，</strong>分析得：当：</p><p>$ {F^2} &gt; 8KEI $杆件发生失稳，且有4钟振型</p><p>$ {F^2} = 8KEI $杆件处于失稳极限状态</p><p>$ {F^2} &lt; 8KEI $无实数解，杆件不失稳</p><p>根据极限条件得：$ {F_{cr}} = \sqrt {8EIK}  $，此时</p><div class='full-math-div'> $$  k = {(\frac{{{F_{cr}}}}{{2EI}})^{\frac{1}{2}}} = {(\frac{{2K}}{{EI}})^{\frac{1}{4}}}  $$ </div><p>波长：</p><div class='full-math-div'> $$  \lambda  = \frac{{2\pi }}{k} = 2\pi {(\frac{{EI}}{{2K}})^{\frac{1}{4}}}  $$ </div><h3 id="2非完善体系中的失稳"><a href="#2非完善体系中的失稳" class="headerlink" title="2非完善体系中的失稳"></a>2非完善体系中的失稳</h3><hr><p>相比于材料力学的关于材料本身的力矩平衡方程，作为一个体系，其约束不完整或构件在加载一开始就呈现出变形状态，该类体系称为非完善体系。非完善压杆在加载一开始就处于变形平衡状态。按照最小挠度理论，当荷载增加到一定程度时，体系得位移会趋于无穷大；按照大挠度理论，体系受到的荷载达到一定程度后会发生荷载不变甚至减小，位移仍在增加的情况。该极限点则为极限失稳点。该失稳形态称为极值点失稳，极值点对于的荷载最大值称为临界荷载。简单示例如图8</p><p><img src="8.png" alt=""></p><p>用静力学方法解决这类题型的关键是分析体系的自由度——按照节点特性找到所有对指定节点的作用效果——根据作用效果列出力矩平衡方程。</p><p>应用静力学方法的基本原理是将体系的位移看作线性变形。即认为变形和荷载呈线性关系。在进行相关参数计算时忽略体系中已经存在的位移，仍按照其变形之前的体系参数进行计算。该计算结果由于体系变形后相关参数较其变形前会发生改变，因此计算出的结果为近似精确解。该计算方法在结构力学中称为线性分析。同时该方法适用荷载叠加原理。</p><p>该问题中解决的核心思想为将体系看作通过约束单个结构得到的约束体系，约束体系发生小位移，此时作用在体系上的外荷载和体系中由于位移而产生的约束力在发生位移的条件下处于静力学平衡状态。即体系中所有的静力特征对该体系的所有作用的总和平衡。</p><p>本文通过对单自由度体系，有限自由度体系，和无限自由度体系分别进行分析，并进行计算，以得到相关问题的一般解法。</p><h3 id="2-1单自由度体系分析"><a href="#2-1单自由度体系分析" class="headerlink" title="2.1单自由度体系分析"></a>2.1单自由度体系分析</h3><p>如图9，各杆$ EI = \infty $，在体系的最上端作用一个力$F$，弹簧弹性系数为$k$，求解当体系失稳时的极限荷载$F_{cr} $。</p><p><img src="9.png" alt=""></p><p>解：</p><p>由题意可得：该体系的自由度为1。该体系中有两个力未知，其一是带求的极限荷载F，第二是下部的铰支座提供的向上的支撑力Q。</p><p><img src="10.png" alt=""></p><p>绘制虚位移示意图：如图10。假设A点侧移距离为y。由于体系中含有两个未知数F、Q，所以对A，B点分别取矩：</p><div class='full-math-div'>$$\begin{array}{l}\sum {{M_A}}  = 0\\ - 2Fy + 2kyb + Qb = 0\\\sum {{M_B}}  = 0\\ - Fy + ky(a + 2b) + Q(a + b) = 0\end{array}$$</div><p>最后解得：$ {F_{cr}} = \frac{{(3a + 4b)kb}}{{2a + 3b}} $</p><h3 id="2-2多自由度体系分析"><a href="#2-2多自由度体系分析" class="headerlink" title="2.2多自由度体系分析"></a>2.2多自由度体系分析</h3><p>由2.1中的静力特征分析不难得出此类稳定问题的解法主要时探究体系从原始平衡形式受到外部作用后变化为新的平衡形式平衡性推导问题。由此引入多自由度体系的静力平衡问题。</p><p><img src="media/53c42f4e76271a3afb2599bab3349772.png" alt=""></p><p>如图11，在该体系右端作用一个力$ F$，每根杆件的长度为$l$，$EI = \infty $，弹簧的位移刚度为$k $，求该体系极限荷载。</p><p><img src="11.png" alt=""></p><p>解：</p><p>分析其变形平衡状态，绘制静力平衡图，如图12：</p><p><img src="12.png" alt=""></p><p>设从左至右第一根弹簧的反力为：$ {F_{r1}} = {k_1}{y_1}$，第二根为：${F_{r2}} = {k_2}{y_2} $，</p><p>A点和D点的支座反力分别为：</p><div class='full-math-div'> $$  {F_{Ax}} = F( \to ),{F_{Ay}} = \frac{{F{y_1}}}{l}( \downarrow ),{F_{Dy}} = \frac{{F{y_2}}}{l}( \downarrow )  $$ </div><p>静力平衡条件为：</p><div class='full-math-div'>$$\left\{ {\begin{array}{*{20}{c}}{\sum {{M_C} = 0,{k_1}{y_1}l - (\frac{{F{y_1}}}{l})} 2l + F{y_2} = 0}\\{\sum {{M_B} = 0,{k_2}{y_2}l - (\frac{{F{y_2}}}{l})} 2l + F{y_1} = 0}\end{array}} \right.$$</div><p>即：</p><div class='full-math-div'>$$\left. {\begin{array}{*{20}{c}}{({k_1}l - 2F){y_1} + F{y_2} = 0}\\{F{y_1} + ({k_2}l - 2F){y_2} = 0}\end{array}} \right\}$$</div><p>提取系数矩阵：</p>$$[\delta ] = \left[ {\begin{array}{*{20}{c}}{{k_1}l - 2F}&F\\F&{{k_2}l - 2F}\end{array}} \right]$$<p>该齐次线性方程组的解与系数矩阵的行列式值有关，当：</p>$ |\delta | \ne 0 $时，方程有唯一的实数解$ |\delta | \ne 0 $时，除零解外，只能解出和的关系，意味着原结构有不止一种的平衡形式，此时为临界平衡状态的静力特征。展开$ |\delta | = 0 $$ ({k_1}l - 2F)({k_2}l - 2F) - {F^2} = 0 $<p>可解得$ F$的两个特征值，其中最小的为临界荷载。此时将$F$带入原平衡方程，可求得$y_1$和$y_2 $的比值。进而得出临界荷载的失稳变形形式。</p><p><img src="13.png" alt=""></p><p>同理，对于多自由度体系，如图13：</p><p>题目大意：A,B,C三处节点的均可发生位移，属于三自由度体系，每根杆件刚度为$ EI$  ，长度为$l$。作用在最右端有荷载$F$，近似求解临界极限荷载$F_{cr} $。</p><p><strong>解析：</strong>该题可应用矩阵位移法计算节点处发生单位位移引起的弯矩。A,B,C处的节点形式均为刚节点，发生失稳时节点处即发生侧挠，也发生转角。将整个杆件分为四个杆件单元OA为①，AB为②，BC为③，CD为④。写出每个杆件单元的单元刚度矩阵，组合成总刚。如①单元处的单刚为：</p>$$[{k^①}] = \left[ {\begin{array}{*{20}{c}}{\frac{{12i}}{{{l^2}}}}&{\frac{{6i}}{l}}&{ - \frac{{12i}}{{{l^2}}}}&{\frac{{6i}}{l}}\\{\frac{{6i}}{l}}&{4i}&{ - \frac{{6i}}{l}}&{2i}\\{ - \frac{{12i}}{{{l^2}}}}&{ - \frac{{6i}}{l}}&{\frac{{12i}}{{{l^2}}}}&{ - \frac{{6i}}{l}}\\{\frac{{6i}}{l}}&{2i}&{ - \frac{{6i}}{l}}&{4i}\end{array}} \right]$$<p>假设A,B,C节点处的位移分别为${y_1},{y_2},{y_3},{\theta _1},{\theta _2},{\theta _3}$，可得到各节点处的剪力和弯矩，最后对节点进行弯矩剪力静力学平衡，求解当刚度矩阵行列式等于零时F的最小特征值，即为临界力的近似解。</p><h3 id="2-3无限自由度体系分析"><a href="#2-3无限自由度体系分析" class="headerlink" title="2.3无限自由度体系分析"></a>2.3无限自由度体系分析</h3><p><img src="14.png" alt=""></p><p>如图14，一等截面压杆,下端固定,上端有水平支杆。杆长l，刚度为EI，用静力法求其反力。</p><p><strong>解析：</strong>分析题面可得，在轴向压力超过临界值时，该杆的所有位置都可能发生侧挠。即对于该杆的每个dx长度都是一个发生挠度的微元体，当dx足够小时该杆件即是无限自由度的结构体系。</p><p>仔细分析不难发现该杆与1.1导出的一端固定一端铰支的杆件失稳形式如出一辙。故可用1.1中导出的失稳公式进行计算。</p><h2 id="3总结"><a href="#3总结" class="headerlink" title="3总结"></a>3总结</h2><hr><ol><li><p>从细长杆件的失稳状态可以得出：把杆件作为一个连续体，则其上的挠度变形在杆的长度方向也连续。要求解该类问题，需找到杆件上每一段微元段上的弯矩平衡方程，带入边界条件对该方程求解即可求得杆件的变形状态。</p></li><li><p>非完善体系的失稳分析时，若体系的自由度有限，体系中一定有一部分为刚体。相比于对细长杆件的失稳状态求解，体系失稳中部分问题需要对外力进行假设，且体系失稳实质上属于变形状态的稳定，杆件失稳更多属于静止状态的稳定。</p></li><li><p>对无限自由度体系分析，即杆件可被划分为会发生变形的无数个变形单元，其原理与细长杆件的失稳原理相似，故其解法可以有相通之处。</p></li><li><p>非完善体系的稳定性计算，其形变和荷载假定为线性关系。与细长杆件失稳相比，其的变形状态和原理在一定程度上与细长杆件的失稳相似，换言之，在一定程度上，细长杆件的失稳属于非完善体系失稳的一种特殊状态。</p></li></ol><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><p>[1]周海龙,安珍,李平,李昊.平面体系的自由度计算及分析步骤刍议[J].科技创新与应用,2019(31):32-34.</p><p>[1] Zhou Hailong, an Zhen, Li Ping, Li Hao. Discussion on the calculation and<br>Analysis of degree of Freedom of Planar system [J]. Innovation and Application<br>of Science and Technology, 2019 (31): 32-34.</p><p>[2]牛峰.显控台气弹簧支撑结构的力学分析[J/OL].中国舰船研究:1-6[2019-11-14].<a href="https://doi.org/10.19693/j.issn.1673-3185.01356">https://doi.org/10.19693/j.issn.1673-3185.01356</a>.</p><p>[2]Niu Feng. Mechanical analysis of air spring supporting structure of display<br>and control platform [J/OL]. Chinese warship Research: 1-6 [2019-11-14].<br>Https://doi.org/10.19693/j.issn.1673-3185.01356.</p><p>[3]乔朋,李悦,马乾瑛.大学生结构设计竞赛对结构力学课程教学的启示[J].高等建筑教育,2019,28(05):74-79.</p><p>[3]Qiao Peng, Li Yue, Ma Qianying. The Enlightenment of College students’<br>structural Design Competition to the Teaching of structural Mechanics [J].<br>Higher Architectural Education, 2019, 28 (05): 74-79.</p><p>[4]唐少强.知与用：理科力学的微积分教学再议[J].力学与实践,2019,41(04):442-444.</p><p>[4] Tang Shaoqiang.Knowledge and use: further discussion on Calculus Teaching of<br>Science Mechanics [J].Mechanics and practice, 2019, 41 (04): 442-444.</p><p>[5].第十二届全国周培源大学生力学竞赛(个人赛)试题及解答[J].力学与实践,2019,41(04):505-507.</p><p>[5]The 12th National Zhou Peiyuan College students Mechanics Competition<br>(individual Competition) questions and solutions [J]. Mechanics and practice,<br>2019, 41 (04): 505-507.</p><p>[6]高雅巍.力学在土木工程中的应用[J].居舍,2019(22):166.</p><p>[6]Gao Yawei. Application of mechanics in civil engineering [J]. Housing, 2019<br>(22): 166.</p><p>[7]杨甜.《建筑力学与结构》中增设实践形式课程设计的探索和实践[J].江西建材,2019(07):242-243.</p><p>[7]Yang Tian. Exploration and practice of adding practical form course Design in<br>Architectural Mechanics and structure [J]. Jiangxi Building Materials, 2019<br>(07): 242-243.</p><p>[8]胡国辉,楚海建,卢志明,郭兴明.从大学的理念谈力学本科人才培养[J].力学与实践,2019,41(03):323-329.</p><p>[8]Hu Guohui, Chu Haijian, Lu Zhiming, Guo Xingming.</p><p>On the cultivation of undergraduate talents in Mechanics from the concept of<br>University [J]. Mechanics and practice, 2019, 41 (03): 323-329</p><p>[9]贾若迪,赵丽滨,张会利.基于力学思想的字体结构评价方[J].力学与实践,2019,41(03):337-340+319.</p><p>[9]Jia Ruodi, Zhao Libin, Zhang Huili. Evaluation method of font structure based<br>on mechanics [J]. Mechanics and practice, 2019, 41 (03): 337-340: 319.</p><p>[10]王少伟,赵茉莉,冯维明.力学和数学中的“调和”释义[J].力学与实践,2018,40(05):560-562.</p><p>[10]Wang Shaowei, Zhao Moli, Feng Weiming.</p><p>Interpretation of “Harmony” in Mechanics and Mathematics [J]. Mechanics and<br>practice, 2018,40 (05): 560-562.</p>]]></content>
    
    
    <categories>
      
      <category>结材料力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git简明实用教程</title>
    <link href="/post/Git%E7%AE%80%E6%98%8E%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <url>/post/Git%E7%AE%80%E6%98%8E%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Git-是什么"><a href="#Git-是什么" class="headerlink" title="Git 是什么"></a>Git 是什么</h2><p><code>Git</code>（读音为/gɪt/）是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。（管理文件内容的版本，追踪内容的变化）</p><p>git是用于Linux内核开发的版本控制工具。与CVS、Subversion一类的集中式版本控制工具不同，它采用了分布式版本库的作法，不需要服务器端软件，就可以运作版本控制，使得源代码的发布和交流极其方便。git的速度很快，这对于诸如Linux内核这样的大项目来说自然很重要。git最为出色的是它的合并追踪（merge tracing）能力。</p><p>其组成的库目录包括：</p><ul><li><code>hooks</code>：存储钩子的文件夹</li><li><code>logs</code>：存储日志的文件夹</li><li><code>refs</code>：存储指向各个分支的指针（SHA-1标识）文件</li><li><code>objects</code>：存放git对象</li><li><code>config</code>：存放各种设置文档</li><li><code>HEAD</code>：指向当前所在分支的指针文件路径，一般指向refs下的某文件</li></ul><p>Git还包括一些常用的对象形式：</p><ul><li><p><code>tree</code>: 对象对应于文件目录。包含文件名列表以及文件的类型比特（包含许可权）、到blob（对应于文件）或tree对象的引用。</p></li><li><p><code>commit</code>: 对象链接tree对象在一起而成为history，包含顶层源目录的tree对象名字、一个时间戳、log信息、0个或多个父commit对象的名字。用于保存特定版本的树型文件夹结构以及提交作者，电子邮件地址，日期和描述性提交消息。</p></li><li><p><code>tag</code>: 对象是一个容器，包含了到另一个对象的引用，也可以增加关于另外对象的元数据。通常它保存需要追溯的特定版本数据的一个commit对象的数字签名。</p></li></ul><p>Git还有一些常用的引用类型：</p><ul><li><p><code>heads</code>: 引用一个本地对象，是commit的指针。每个head可以指任意一个这样的指针。可以包含任意数量的heads。而”HEAD”（全部大写），仅仅指的是当前有效的head。默认情况下，在每个仓库下都有一个head，叫做master。</p></li><li><p><code>remotes</code>: 引用远程repository中的一个对象</p></li><li><p><code>meta</code>: 例如一个bare repository中的一个配置, 用户权限; refs/meta/config名字空间等</p></li></ul><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p><code>Git</code> 是一个版本控制工具，因此要使用其进行版本控制首先需要建立一个<strong>版本库</strong>。</p><h3 id="版本库"><a href="#版本库" class="headerlink" title="版本库"></a>版本库</h3><p>初始化版本库：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ git init <span class="hljs-comment">--bare</span><br></code></pre></td></tr></table></figure><p><code>git</code> 会作出以下回应：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">Initialized empty Git repository in </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">yourpath</span>&#125;&#125;</span><span class="xml">.git</span><br></code></pre></td></tr></table></figure><p>该操作创建一个空的版本库，文件夹内目录结构如下：</p><p><img src="1.png" alt=""></p><p>其中包含了 <code>config</code> 和 <code>head</code> 两个对象。</p><p><code>HEAD</code> 文件的内容如下：</p><p><code>ref: refs/heads/master</code> 可以看到 <code>HEAD</code> 文件是一个索引文件，后面的地址指向了该索引的映射。目前该映射体现的是该版本仓库默认的分支，即 <code>matser</code>。</p><h3 id="向版本库中追加文件"><a href="#向版本库中追加文件" class="headerlink" title="向版本库中追加文件"></a>向版本库中追加文件</h3><p>假设项目管理文件夹包括以下部分：<code>Program</code> 和 <code>Partial</code> </p><p>依据这两个文件夹及其内容建立版本内容，使用如下命令：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs fortran">$ git add <span class="hljs-number">.</span>/<span class="hljs-function"><span class="hljs-keyword">Program</span></span> <span class="hljs-number">.</span>/Partial<br>或<br>$ git update-<span class="hljs-built_in">index</span> --add <span class="hljs-number">.</span>/<span class="hljs-function"><span class="hljs-keyword">Program</span></span> <span class="hljs-number">.</span>/Partial<br></code></pre></td></tr></table></figure><p>这样就向当前的版本分支中添加了两个文件夹：<code>Program</code> 和 <code>Partial</code> </p><p>如果错误添加了某个文件夹或文件需要剔除出去可以使用如下命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ git <span class="hljs-built_in">remove</span> ./<span class="hljs-keyword">files</span><br>或<br>$ git <span class="hljs-keyword">update</span>-<span class="hljs-built_in">index</span> --force-<span class="hljs-built_in">remove</span> ./<span class="hljs-keyword">files</span><br></code></pre></td></tr></table></figure><p>git 会对5添加的文件或文件夹进行更改的跟踪。</p><p>可以使用纯文本文件 <code>gitignore</code> 来使得在向版本库添加文件时自动忽略这些文件。该文件放置在git的工作目录下，与文件夹 <code>.git/</code> 同级。</p><p>该文件内容直接写入要忽略添加的规则，每行一个，支持文件名，文件夹，通配符和正则表达式。</p><h3 id="将添加的文件提交到版本库"><a href="#将添加的文件提交到版本库" class="headerlink" title="将添加的文件提交到版本库"></a>将添加的文件提交到版本库</h3><p>使用以下命令将添加的文件提交到版本库</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git commit <span class="hljs-comment"># 提交到版本库</span><br><br><span class="hljs-variable">$ </span>git status <span class="hljs-comment"># 查看版本库的状态</span><br><br><span class="hljs-variable">$ </span>git commit -m <span class="hljs-string">&#x27;description&#x27;</span> <span class="hljs-comment"># 该版本的描述</span><br></code></pre></td></tr></table></figure><p>使用以下命令可以比较当前工作目录与版本库的差别：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>gitdiff<br></code></pre></td></tr></table></figure><h3 id="管理分支"><a href="#管理分支" class="headerlink" title="管理分支"></a>管理分支</h3><p>如果项目存在多个分支就需要进行分支管理：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git branch<br></code></pre></td></tr></table></figure><p>使用以下命令创建分支并将创建的分支设置为当前工作分支：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs haxe">$ git branch <span class="hljs-keyword">new</span><span class="hljs-type">B</span><br><span class="hljs-type"></span>$ $ git checkout <span class="hljs-keyword">new</span><span class="hljs-type">B</span><br><span class="hljs-type"></span>等价于<br>$ git checkout -b <span class="hljs-keyword">new</span><span class="hljs-type">B</span> [start_point]<br></code></pre></td></tr></table></figure><p>删除分支：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haxe">$ git branch -d <span class="hljs-keyword">new</span><span class="hljs-type">B</span> <span class="hljs-meta"># 该删除操作会先检查分支是否合并到其他分支上，若没有合并则无法删除</span><br><br>$ git branch -D <span class="hljs-keyword">new</span><span class="hljs-type">B</span> <span class="hljs-meta"># 该操作会直接删除分支，不会检查分支状态</span><br></code></pre></td></tr></table></figure><p>查看分支列表：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git branch <br></code></pre></td></tr></table></figure><p>查看版本库的发展记录</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">$ git show-branch</span><br><span class="xml">或</span><br><span class="xml">$ git whatchangeddiff-tree </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">分支号</span>&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>查看两个版本的差异情况：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">$ git <span class="hljs-keyword">diff </span><span class="hljs-keyword">B1 </span><span class="hljs-keyword">B2</span><br></code></pre></td></tr></table></figure><p>合并其他分支到主分支上：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs smali">$ git<span class="hljs-built_in"> check </span>master<br>$ git merge -m <span class="hljs-string">&quot;merge from NewB&quot;</span> newB<br>或<br>$ git pull . newB<br></code></pre></td></tr></table></figure><p>如果在合并分支的过程中，有些相同的行内容不一样，会出现报错，此时就需要参照报错信息手动去解决这些问题。</p><h3 id="逆转和恢复"><a href="#逆转和恢复" class="headerlink" title="逆转和恢复"></a>逆转和恢复</h3><p>项目跟踪工具的一个重要任务之一，就是使我们能够随时逆转（Undo）和恢复（Redo）某一阶段的工作。</p><p>命令形式：</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fsharp">git reset [--mixed | --soft | --hard] <span class="hljs-meta">[&lt;commit-ish&gt;]</span><br></code></pre></td></tr></table></figure><p>其中：</p><p><code>--mixed</code> 仅是重置索引的位置，而不改变你的工作树中的任何东西（即，文件中的所有变化都会被保留，也不标记他们为待提交状态），并且提示什么内容还没有被更新了。这个是默认的选项。<br><code>--soft</code> 既不触动索引的位置，也不改变工作树中的任何内容，我们只是要求这些内容成为一份好的内容（之后才成为真正的提交内容）。这个选项使你可以将已经提交的东西重新逆转至“已更新但未提交（Updated but not Check in）”的状态。就像已经执行过 git update-index 命令，但是还没有执行 git commit 命令一样。<br><code>--hard</code> 将工作树中的内容和头索引都切换至指定的版本位置中，也就是说自 <commit-ish> 之后的所有的跟踪内容和工作树中的内容都会全部丢失。因此，这个选项要慎用，除非你已经非常确定你的确不想再看到那些东西了。</p><p>提取之前的某个文件的提交覆盖当前工作空间：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">$ git checkout -f </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">fileName</span>&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="署名标签"><a href="#署名标签" class="headerlink" title="署名标签"></a>署名标签</h3><p>在 git 中，有两种类型的标签，“轻标签”和“署名标签”。</p><p>技术上说，一个“轻标签”和一个分支没有任何区别，只不过我们将它放在了 .git/refs/tags/ 目录，而不是 heads 目录。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">my-first-tag</span> <span class="hljs-comment"># 新建标签</span><br></code></pre></td></tr></table></figure><p>“署名标签”是一个真正的 git 对象，它不但包含指向你想标记的状态的指针，还有一个标记名和信息，可选的 PGP 签名。你可以通过 -a 或者是 -s 选项来创建“署名标签”。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">-s</span> <span class="hljs-tag">&lt;tag-name&gt;</span><br></code></pre></td></tr></table></figure><h3 id="远程仓库的建立与合并"><a href="#远程仓库的建立与合并" class="headerlink" title="远程仓库的建立与合并"></a>远程仓库的建立与合并</h3><p>在服务器上建立一个git远程仓库，以使其他人可以一起对该项目做 contribution：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ cd <span class="hljs-regexp">/var/</span>repo<span class="hljs-regexp">/mygit/</span> <span class="hljs-comment"># 进入你的仓库目录</span><br>$ git --bare init mygit.git <span class="hljs-comment"># 初始化git版本库</span><br><span class="hljs-comment"># chmod 777 * #修改目录权限</span><br></code></pre></td></tr></table></figure><p>这样远程版本库就建立好了。</p><p>通常的情况下，合并其他的人的工作的情况会比合并自己的分支的情况要多，这在 git 中是非常容易的事情，和你运行 git-merge 命令没有什么区别。事实上，远程合并的无非就是“抓取（fetch）一个远程的版本库中的工作到一个临时的标签中”，然后再使用 git-merge 命令。</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">$ git fetch <span class="hljs-tag">&lt;<span class="hljs-name">remote-repository</span>&gt;</span></span><br><span class="xml">$ git rebase </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">branchName</span>&#125;&#125;</span><span class="xml"> # 将当前工作分支的提交迁移到指定分支上基础上</span><br></code></pre></td></tr></table></figure><h3 id="远程仓库与本地的交互"><a href="#远程仓库与本地的交互" class="headerlink" title="远程仓库与本地的交互"></a>远程仓库与本地的交互</h3><p>首先，我们需要建立一个远程仓库在本地的镜像：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git <span class="hljs-keyword">clone</span> <span class="hljs-title">&lt;remote-repository</span>&gt;<br>或者<br>$ git remote add origin <span class="hljs-tag">&lt;remote-repository&gt;</span><br>$ git <span class="hljs-keyword">clone</span> <span class="hljs-title">origin</span> <span class="hljs-comment"># 其中的origin为远程仓库的短名称</span><br></code></pre></td></tr></table></figure><p>如果我们对这个镜像做了更改，把这些更改提交：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">$ git <span class="hljs-keyword">add</span><span class="bash"> [<span class="hljs-built_in">dirs</span>]</span><br>$ git commit -m <span class="hljs-string">&quot;message&quot;</span><br></code></pre></td></tr></table></figure><p>如果远程仓库中也发生了更改，需要将远程仓库的更改同步到本地仓库：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git pull origin <span class="hljs-literal">master</span><br></code></pre></td></tr></table></figure><p>仓库之间同步时不直接合并，需要先新建一个分支，检查一下不同之处：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git fetch origin <span class="hljs-literal">master</span>:tempB <span class="hljs-comment"># 将远程分支导入到名为tempB的临时分支中</span><br>$ git whatchanged -p <span class="hljs-literal">master</span>..tempB <span class="hljs-comment"># 检查这两个分支的不同之处</span><br>可选：<br>$ git-checkout <span class="hljs-keyword">master</span> <span class="hljs-title"># 如果可以接受更改，切换回主分支</span><br><span class="hljs-title">$</span> git pull . tempB <span class="hljs-comment"># 将tempB分支合并到主分支</span><br></code></pre></td></tr></table></figure><p>当我们需要将本地提交好的分支推送到远程仓库时：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ git push origin <span class="hljs-keyword">master</span> <span class="hljs-title"># 将本地提交推送到origin</span>的<span class="hljs-literal">master</span>分支<br></code></pre></td></tr></table></figure><h2 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h2><ol><li>在第一次初始化仓库时需要指定仓库的的使用者，如名称和邮件地址等，命令如下：</li></ol><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">$ git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;you@example.com&quot;</span><br>$ git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;Your Name&quot;</span><br><br></code></pre></td></tr></table></figure><ol><li>每次在进行版本或者分支操作时最好先进行一次提交<code>commit</code>，以防止当前所做的更改丢失。</li><li>linux与windows的换行符格式不同，在提交时为了防止被CRLF刷屏，可以执行以下命令：</li></ol><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 提交时转换为LF，检出时转换为CRLF</span><br>git config --<span class="hljs-keyword">global</span> core.autocrlf <span class="hljs-literal">true</span><br><br><span class="hljs-meta"># 提交时转换为LF，检出时不转换</span><br>git config --<span class="hljs-keyword">global</span> core.autocrlf input<br><br><span class="hljs-meta"># 提交检出均不转换</span><br>git config --<span class="hljs-keyword">global</span> core.autocrlf <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>当 <code>core.autocrlf</code> 为 <code>false</code> 时需要配置：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 拒绝提交包含混合换行符的文件</span><br>git config --<span class="hljs-keyword">global</span> core.safecrlf <span class="hljs-literal">true</span><br><br><span class="hljs-meta"># 允许提交包含混合换行符的文件</span><br>git config --<span class="hljs-keyword">global</span> core.safecrlf <span class="hljs-literal">false</span><br><br><span class="hljs-meta"># 提交包含混合换行符的文件时给出警告</span><br>git config --<span class="hljs-keyword">global</span> core.safecrlf warn<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://baike.baidu.com/item/GIT/12647237#3">百度百科-git</a></li><li><a href="https://blog.csdn.net/u011726984/article/details/52036654">在Linux服务器上搭建Git远程仓库并Push本地库</a></li><li><a href="https://blog.konghy.cn/2017/03/19/git-lf-or-crlf/">Git 多平台换行符问题(LF or CRLF)</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>Web服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx.conf的常用配置类型和方法</title>
    <link href="/post/nginx-conf%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%96%B9%E6%B3%95/"/>
    <url>/post/nginx-conf%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="关于Nginx"><a href="#关于Nginx" class="headerlink" title="关于Nginx"></a>关于Nginx</h2><p>Nginx是一个强大的网站服务器，它支持静态网站，本地代理和反向代理等等常用且实用的功能。该服务器包括很多的模块，不同的模块又有相应的指定的指令，ngingx通过读取这些指令进行相应的行为。</p><p>nginx有一个全局配置文件：<code>nginx.conf</code>。该全局配置文件可以定义几乎所有的Nginx指令。当然也可以在其他的文件中定义Nginx的相关指令，并在<code>nginx.conf</code>使用<code>include xxx</code>将这些指令引用到全局配置文件中，有点像C语言中的<code>#include</code>预编译指令。将过长的指令分配到不同的配置文件中可以使得配置更有条理便于维护。这里主要分析常用的Nginx配置文件组成和常用的虚拟服务器功能的配置方法。</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>CentOS操作系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo yum update<br>$ sudo yum install nginx -y<br>$ sudo yum install update<br></code></pre></td></tr></table></figure><p>Ubuntu 和 Debian</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get update<br>$ sudo apt-get install nginx -y<br>$ sudo apt-get update<br></code></pre></td></tr></table></figure><p>按上述方法安装的Nginx的配置文件目录一般位于：<code>/etc/nginx/</code></p><p>所以我们执行 <code>$ cd /etc/nginx/</code> 进入Nginx的安配置文件目录。</p><p>执行 <code>$ ls</code> 命令可以看到Nginx配置文件目录的文件状态，如下图所示：</p><p><img src="1.png" alt=""></p><h2 id="Nginx-conf-配置文件"><a href="#Nginx-conf-配置文件" class="headerlink" title="Nginx.conf 配置文件"></a>Nginx.conf 配置文件</h2><p>首先我们打开配置文件，<code>$ cat nginx.conf</code> 或 <code>$ vim nginx.conf</code></p><p>在Nginx配置文件中 =，每行以 <code>‘#’</code> 号开头的行为注释，调整配置文件时可以对这些行进行忽略。</p><p>Nginx配置文件每条配置语句均以半角分号’;’结尾。</p><h3 id="main-模块"><a href="#main-模块" class="headerlink" title="main 模块"></a>main 模块</h3><p>main模块是定义Nginx的主要参数的模块。其包括几个配置：</p><ul><li><code>user nginx;</code> 这条指令定义了Nginx在操作系统中启动时使用的用户名，这里的配置意思是以nginx身份启动。</li><li><code>worker_processes auto;</code> 这条指令是指定Nginx同时运行的进程数或Nginx的实例。Nginx有一个<code>master</code>进程，还有一些<code>worker</code>进。其中<code>master</code>进程是用来读取和鉴定配置，并将请求分配到不同的<code>worker</code>进程上去处理；<code>worker</code>进程是提供服务的进程，包括请求转发、代理、http缓存等等。这里的配置意思是自动分配<code>worker</code>进程数量。</li><li><code>error_log  /var/log/nginx/error.log;</code> 指定了发生错误时错误日志的目录。</li><li><code>pid /run/nginx.pid;</code> 指定了Nginx的<code>master</code> 进程ID(PID)写入的位置，操作系统会用到PID跟踪和发信号给Nginx进程。</li><li><code>include /usr/share/nginx/modules/*.conf;</code> 指定了外部模块文件的储存位置，Nginx在该目录中找到这些文件并导入配置。</li></ul><p>main 模块是Nginx配置模块中最地层的模块，其配置直接影响Nginx服务器，当然可以在更高级的服务器模块中配置相同的指令，这些指令将覆盖在 main 中配置的相关指令。</p><h3 id="events"><a href="#events" class="headerlink" title="events"></a>events</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs comf">events &#123;<br>    worker_connections  1024;<br>&#125;<br></code></pre></td></tr></table></figure><p>这组配置使用到了一组大括号，该模块的上下文为<code>events</code>，里面用到了<code>worker_connections  1024;</code>指定了<code>worker</code>进程可以同时提供多少的连接服务。</p><h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs comf">http &#123;<br>    worker_connections  1024;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>include /etc/nginx/mime.types;</code> 加载http服务使用到的 <code>MIME type</code>。<code>MiME type</code> 告诉浏览器，如何处理不同类型的文件。输出该文件，其内容可能如下：</li></ul><p><img src="2.png" alt=""></p><ul><li><code>access_log /var/log/nginx/access.log  main;</code> 该指令指定了http访问日志的储存位置，该指令也可以在<code>server</code>和<code>location</code>模块中使用。</li><li><code>index index.html index.htm;</code> 该指令指定了请求地址不包含指定文件时在该目录下查找的文件，若该文件不存在，则返回404错误。</li></ul><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>server 模块定义了一个虚拟主机，若想在服务器上配置多个网站，可以通过配置不同的server模块实现。一般每个server模块的配置可以单独使用文件进行保存。</p><ul><li><code>listen 80 default_server;</code> 改指令指定了服务器的监听端口。监听端口前也可以加上IP地址，或主机地址。default_server的意思是如果是请求头不匹配其他虚拟主机名时，默认匹配给改虚拟主机。</li><li><code>server_name localhost;</code> 该指令定义了服务器的虚拟主机名，当有请求时，Nginx获取请求头匹配来匹配使用哪个虚拟主机提供服务。若要配置域名访问或指定的IP地址访问，可以将<code>localhost</code>替换成需要的域名或IP地址即可。支持配置泛域名<code>*.eaample.com</code></li><li><code>root /usr/share/nginx/html;</code> 该指令指定了该虚拟主机的请求地址对应的物理根目录，直接访问主机头可以得到该目录下的对应页面。</li></ul><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs conf">location &#x2F; &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>location模块是server的二级模块，其配置Nginx响应请求的方式，如定义不同的请求目录等。若 <code>location</code> 后面接的是 ‘/‘ ，则对请求地址的根目录映射root所对应的根目录。</p><p><strong>定义指定文件请求：</strong></p><p><code>location</code> 可以定义指定文件的处理方式，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf"><br>location ~* \.(gif|jpg|png)$ &#123;<br>  ...<br>&#125;<br><br></code></pre></td></tr></table></figure><p>表示定义对图片的请求方式，使用该请求方式可以实现将请求代理到CDN图床等等。。。</p><p><code>location</code> 可以定义指定请求目录的处理方式，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf"><br>location ^~ &#x2F;blog&#x2F; &#123;<br>  ...  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>改定义方式匹配/blog/请求目录，如匹配：<code>localhost/blog/</code>、<code>example.com/blog/</code>等等。</p><p>精确匹配可将 <code>^~</code> 换成 <code>=</code>。</p><h2 id="Nginx-的常用服务器配置"><a href="#Nginx-的常用服务器配置" class="headerlink" title="Nginx 的常用服务器配置"></a>Nginx 的常用服务器配置</h2><h3 id="静态网站虚拟主机"><a href="#静态网站虚拟主机" class="headerlink" title="静态网站虚拟主机"></a>静态网站虚拟主机</h3><p>配置一个静态网站，至少需要指定以下几项参数：</p><ol><li>网站监听端口<code>listen</code>；</li><li>虚拟主机名<code>server_name</code>；</li><li>网站根目录<code>root</code>；</li><li>虚拟主机目录<code>location</code>；</li><li>404页面<code>error_page</code>；</li></ol><p>如：需要在80和443端口上监听 <code>www.aaa.com</code> 和 <code>aaa.com</code> 虚拟主机根目录对应静态网站物理路径 <code>/var/www/aaa.com/</code> ，错误页面在静态网站路径中。网站使用SSL证书加密，证书路径为：<code>/var/www/aaa.com/crt/</code>，配置图床地址为<code>https://pic.aaa.com</code>。则可以参考配置如下。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>  <span class="hljs-attribute">server_name</span> www.aaa.com aaa.com;<br>  <span class="hljs-attribute">root</span> /var/www/aaa.com/;<br>  <span class="hljs-attribute">index</span> index.html index.htm;<br><br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* \.(gif|jpg|png)$</span> &#123;<br>    <span class="hljs-attribute">root</span> https://pic.aaa.com;<br>  &#125;<br>&#125;<br><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span>;<br>  <span class="hljs-attribute">server_name</span> www.aaa.com aaa.com;<br>  <span class="hljs-attribute">root</span> /var/www/aaa.com/;<br>  <span class="hljs-attribute">index</span> index.html index.htm;<br><br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~* \.(gif|jpg|png)$</span> &#123;<br>    <span class="hljs-attribute">root</span> https://pic.aaa.com;<br>  &#125;<br><br>  <span class="hljs-attribute">ssl</span> <span class="hljs-literal">on</span>;<br>  <span class="hljs-attribute">ssl_certificate</span> /var/www/aaa.com/crt/aaa.com.crt;<span class="hljs-comment">#证书路径</span><br>  <span class="hljs-attribute">ssl_certificate_key</span> /var/www/aaa.com/crt/aaa.com.key;<span class="hljs-comment">#证书密钥</span><br>  <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>  <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span> TLSv1.<span class="hljs-number">3</span>; <span class="hljs-comment">#TLS协议</span><br>  <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<span class="hljs-comment">#SSL加密套件</span><br>  <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果配置http重定向至https可以修改80端口的虚拟主机为以下二选1：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>  www.aaa.com aaa.com;<br>    <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://$host<span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> tuhongwei.com www.tuhongwei.com;<br>    <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://$host<span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Nginx-配置端口代理"><a href="#Nginx-配置端口代理" class="headerlink" title="Nginx 配置端口代理"></a>Nginx 配置端口代理</h3><p>端口代理即nginx代替客户端访问本地端口服务，至少需要提供以下参数：</p><ol><li>网站监听端口<code>listen</code>；</li><li>虚拟主机名<code>server_name</code>；</li><li>反向代理的地址<code>proxy_pass</code>；</li></ol><p>假设在本地有监听服务在<code>http://127.0.0.1:1234</code>，该服务需要获取远程IP，获取远程cookies。虚拟主机名为 <code>aaa.com</code>。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><br><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>  <span class="hljs-attribute">server_name</span> aaa.com;<br><br>  <span class="hljs-attribute">location</span> / &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:1234;<br>    <span class="hljs-attribute">proxy_set_header</span> HOST $host; <span class="hljs-comment"># 将主机名添加到请求头</span><br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto $scheme; <span class="hljs-comment"># 将协议类型添加到请求头</span><br>    <span class="hljs-attribute">proxy_set_header</span> X-Real-IP $remote_addr; <span class="hljs-comment"># 将远程客户端IP发送至请求头</span><br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for; <span class="hljs-comment"># 将http拓展头添加至请求头 </span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>若要进行TLS访问，可以如上一条所示添加443端口的虚拟主机监听。</p><h3 id="Nginx-文件服务器"><a href="#Nginx-文件服务器" class="headerlink" title="Nginx 文件服务器"></a>Nginx 文件服务器</h3><p>nginx的文件服务器同静态网站，其直接指向虚拟主机的主目录文件。配置方法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>  <span class="hljs-attribute">server_name</span>  file.aaa.com;<br>  <span class="hljs-comment">#root     /usr/share/nginx/html;</span><br>  <span class="hljs-attribute">root</span>     /;<br>  <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<span class="hljs-comment"># 显示目录</span><br>  <span class="hljs-attribute">autoindex_exact_size</span> <span class="hljs-literal">on</span>;<span class="hljs-comment"># 显示文件大小</span><br>  <span class="hljs-attribute">autoindex_localtime</span> <span class="hljs-literal">on</span>;<span class="hljs-comment"># 显示文件时间</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>Web服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>钢结构-单层工业厂房屋架设计计算书</title>
    <link href="/post/%E9%92%A2%E7%BB%93%E6%9E%84-%E5%8D%95%E5%B1%82%E5%B7%A5%E4%B8%9A%E5%8E%82%E6%88%BF%E5%B1%8B%E6%9E%B6%E8%AE%BE%E8%AE%A1%E8%AE%A1%E7%AE%97%E4%B9%A6/"/>
    <url>/post/%E9%92%A2%E7%BB%93%E6%9E%84-%E5%8D%95%E5%B1%82%E5%B7%A5%E4%B8%9A%E5%8E%82%E6%88%BF%E5%B1%8B%E6%9E%B6%E8%AE%BE%E8%AE%A1%E8%AE%A1%E7%AE%97%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<p><img src="1.jpg" alt=""><br><img src="2.jpg" alt=""><br><img src="3.jpg" alt=""><br><img src="4.jpg" alt=""><br><img src="5.jpg" alt="">q<br><img src="6.jpg" alt=""><br><img src="7.jpg" alt=""><br><img src="8.jpg" alt=""><br><img src="9.jpg" alt=""><br><img src="10.jpg" alt=""><br><img src="11.jpg" alt=""><br><img src="12.jpg" alt=""><br><img src="13.jpg" alt=""></p><p><a href="钢结构单层工业厂房课程设计计算书.pdf">下载此PDF</a></p>]]></content>
    
    
    <categories>
      
      <category>钢结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工程结构设计</tag>
      
      <tag>课程设计</tag>
      
      <tag>课程设计计算书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高等数学-一元函数积分学解题技巧(二)</title>
    <link href="/post/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6-%E4%B8%80%E5%85%83%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%8A%80%E5%B7%A7-%E4%BA%8C/"/>
    <url>/post/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6-%E4%B8%80%E5%85%83%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%8A%80%E5%B7%A7-%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="构造表达式，分析表达式的性质"><a href="#构造表达式，分析表达式的性质" class="headerlink" title="构造表达式，分析表达式的性质"></a>构造表达式，分析表达式的性质</h2><p><strong>例题1：</strong>证明：$\int_{\rm{0}}^{\frac{\pi }{{\rm{2}}}} {\frac{{\sin x}}{{1 + {x^2}}}dx}  < \int_{\rm{0}}^{\frac{\pi }{{\rm{2}}}} {\frac{{\cos x}}{{1 + {x^2}}}dx} $</p><p><strong>解题思路点：</strong></p><ol><li>构造函数：$f(x{\rm{) = }}\frac{{\sin x - \cos x}}{{1 + {x^2}}}$</li><li>分析函数，由上面的构造函数容易得到$f(x)$关于$x = \frac{\pi }{4}$，将原积分式变形为：</li></ol><div class='full-math-div'>$$\begin{array}{l}\int_{\rm{0}}^{\frac{\pi }{4}} {\frac{{\sin x - \cos x}}{{1 + {x^2}}}dx}  - \int_{\frac{\pi }{4}}^{\frac{\pi }{2}} {\frac{{\sin x - \cos x}}{{1 + {x^2}}}dx} \\ = \int_{\rm{0}}^{\frac{\pi }{4}} {\frac{{\sin x - \cos x}}{{1 + {x^2}}}dx}  + \int_{\rm{0}}^{\frac{\pi }{4}} {\frac{{\sin t - \cos t}}{{1 + {{(\frac{\pi }{2} - x)}^2}}}dt}  < 0\end{array}$$</div>得证。<hr />**例题2：**设函数$f(x)$在$[0,1]$上可导，且$f(1)-f(0)=1$，证明：$\int_0^1 {{{(f'(x))}^2}dx}  \ge 1$**解题思路点：**1. 题中积分式子包含平方，首先可以想到**柯西-施瓦兹**不等式：<div class='full-math-div'>$${(\int_a^b {f(x)g(x)dx} )^2} \le \int_a^b {{f^2}(x)dx} *\int_a^b {{g^2}(x)dx} $$</div>1. 根据柯西-施瓦兹不等式构造：<div class='full-math-div'>$$\int_0^1 {{{(f'(x))}^2}dx}  \ge {(\int_0^1 {f'(x)} dx)^2} = 1$$</div>得证。<hr />**例题3：**设函数$f(x)$在$[a,b]$上可导，$f'(x)$在$[a,b]$上可积，且$f(a)+f(b)=0$，证明：$|f(x)| \le \frac{1}{2}\int_a^b {|f'(x)|dx} $**解题思路点：**1. 分析题目右边所给的表达式其被积函数在$[a,b]$区间有正有负。构造表达式$$\begin{array}{l}\int_a^x {f'(x)dx}  = f(x) - f(a)\\\int_x^b {f'(x)dx}  = f(b) - f(x)\end{array}$$1. 将上面构造的表达式进行初等变换：$$\begin{array}{l}2f(x) = \int_a^x {f'(x)dx}  - \int_x^b {f'(x)dx} \\ =  > 2|f(x)| \le |\int_a^x {f'(x)dx} | + |\int_x^b {f'(x)dx} |\\f(x) < \frac{1}{2}\int_a^b {|f'(x)|dx} \end{array}$$得证。## 拉格朗日中值定理的应用（二)**例题4：**设函数$f(x)$在$[a,b]$上有连续的导数，且$f(a)=0$，证明：$\frac{{\rm{2}}}{{{{{\rm{(}}b - a)}^2}}}\int_a^b {|f(x)|dx}  \le M$，其中$M = \mathop {\max }\limits_{a \le x \le b} |f'(x)|$**解题思路点：**1. 因为$f(x) = \int_a^x {f'(x)dx} $，根据拉格朗日中值定理，<div class='full-math-div'>$$|f(x)| = |\int_a^x {f'(x)dx} | \le \int_a^x {|f'(x)|dx} \le (x - a)M$$</div><ol><li>根据上面的不等式可以得到：<div class='full-math-div'>$$\int_a^b {|f(x)|dx}  \le \int_a^b {(x - a)Mdx}  \le \frac{{{b^2} - 2ab}}{2}M \le \frac{{{b^2} - 2ab + {a^2}}}{2}M$$</div></li></ol><p>得证。</p><hr /><p><strong>例题5：</strong>设函数$f(X)$在$[a,b]$上有连续的导数，且$f(a)=f(b)=0$，求证$\int_a^b {|f(x)|dx}  \le \frac{{{{(b - a)}^2}}}{4}M$，其中$M = \mathop {\max }\limits_{a \le x \le b} |f'(x)|$</p><p><strong>解题思路点：</strong></p><ol><li><p>因为函数在$[a,b]$上具有连续的导数:</p><div class='full-math-div'>$$\begin{array}{l}f{\rm{(}}x) = f'(\xi )(x - a)\xi  \in [a,b]\\f(x) = f'(\mu )(x - b)\mu  \in [a,b]\end{array}$$</div></li><li>$f'(\xi ) \le M,f'(\mu ) \le M$，对于:<div class='full-math-div'>$$\begin{array}{l}\int_a^b {|f(x)|dx}  = \int_a^{\frac{{a + b}}{2}} {|f(x)|dx}  + \int_{\frac{{a + b}}{2}}^b {|f(x)|dx} \\ \le \int_a^{\frac{{a + b}}{2}} {(x - a)Mdx}  + \int_{\frac{{a + b}}{2}}^b {(x - b)Mdx} \\ = \frac{{{{(a - b)}^2}}}{4}M\end{array}$$</div></li></ol><p>得证。</p><h2 id="泰勒展开式和拉格朗日中值定理综合应用"><a href="#泰勒展开式和拉格朗日中值定理综合应用" class="headerlink" title="泰勒展开式和拉格朗日中值定理综合应用"></a>泰勒展开式和拉格朗日中值定理综合应用</h2><p><strong>例题6:</strong>设函数 $f(x)$二阶可导，且$f^{(2)}(x) \geqslant 0$和$g(x)$为连续函数，对于任意的 $a>0$，证明：$\frac{1}{a}\int_0^a {f(g(x))dx}  \ge f(\frac{1}{a}\int_0^a {g(x)dx} )$</p><p><strong>解题思路点：</strong></p><ol><li><p>对函数进行泰勒展开：</p>$$\begin{array}{l}f(x) = f({x_0}) + f'({x_0})(x - {x_0}) + \frac{1}{2}f^{(2)}(\xi ){(x - {x_0})^2}\\ \ge f({x_0}) + f'({x_0})(x - {x_0})\end{array}$$</li><li><p>令$x=g(t), {x_0}=\frac{1}{a}\int_0^a {g(x)dx} $，上式变形为：</p></li></ol><div class='full-math-div'>$$f(g(x)) \ge f(\frac{1}{a}\int_0^a {g(x)dx} ) + f'(\frac{1}{a}\int_0^a {g(x)dx} )(g(t) - \frac{1}{a}\int_0^a {g(x)dx} )$$</div><p>对两边求积分：</p><div class='full-math-div'>$$\int_0^a {f(g(x))dx}  \ge af(\frac{1}{a}\int_0^a {g(x)dx} ) + f'(\frac{1}{a}\int_0^a {g(x)dx} )(\int_0^a {g(t) - \frac{1}{a}\int_0^a {g(x)dx} } )$$</div><p>又因为：$\int_0^a {g(t) - \frac{1}{a}\int_0^a {g(x)dx} }  = 0$</p><p>得证。</p><hr /><p><strong>例题7：</strong>设函数$f(x)$在$[0,2]$有二阶连续的导数，且$f(1)=0$，证明：$\left| {\int_0^2 {f(x)dx} } \right| \le \frac{1}{3}M$，其中$M = \mathop {\max }\limits_{0 \le x \le 2} |f^{(2)}(x)|$。</p><p><strong>解题思路点：</strong></p><ol><li>讲函数泰勒展开：</li></ol>$$\begin{array}{l}f(x) = f(1) + f'(1)(x - 1) + \frac{1}{2}f^{(2)}(\xi )(x - 1)\\ \le f'(1)(x - 1) + f^{(2)}(\xi ){(x - 1)^2}\\f^{(2)}(\xi ) \le M\end{array}$$<ol><li>对上面不等式两边求积分：</li></ol>$$\begin{array}{l}\int_0^2 {f(x)dx}  = f'(1)\int_0^2 {x - 1dx}  + \frac{1}{2}f^{(2)}(\xi )\int_0^2 {{{(x - 1)}^2}dx} \\ = \frac{1}{2}f^{(2)}(\xi )\int_0^2 {{{(x - 1)}^2}dx}  \le \frac{1}{2}|f^{(2)}(\xi )|\int_0^2 {{{(x - 1)}^2}dx} \\ \le \frac{M}{2}\int_0^2 {{{(x - 1)}^2}dx}  = \frac{1}{3}M\end{array}$$得证。**例题8：**设函数$f(x)$在$[0,1$有二阶连续的导数，且$f(0)=f(1)=0$，求证：$\int_0^1 {|f^{(2)}(x{\rm{)}}|dx}  \ge 4\mathop {\max }\limits_{0 \le x \le 1} |f(x)|$<p><strong>解题思路点：</strong></p><ol><li>由题目的已知条件可以得到存在$|f(\xi )| = \mathop {\max }\limits_{0 \le x \le 1} |f(x)|\xi  \in {\rm{[0,1]}}$</li></ol><ol><li>函数在$[0,\xi]$和$[\xi, 1]$区间满足拉格朗日中值定理条件：</li></ol><div class='full-math-div'>$$\begin{array}{l}\xi f'(a) = f(\xi ),\\(\xi  - 1)f'(b) = f(\xi )\end{array}$$</div><ol><li>对题中所给表达式进行变形：</li></ol><div class='full-math-div'>$$\begin{array}{l}\int_0^1 {|f^{(2)}(x)|dx}  \ge \int_a^b {|f^{(2)}(x)|dx}  \ge |\int_a^b {f^{(2)}(x)dx} | = |f'(b) - f'(a)|\\ = \left| {\frac{{f(\xi )}}{{\xi  - 1}} - \frac{{f(\xi )}}{\xi }} \right| = |f(\xi )|\frac{1}{{\xi (1 - \xi )}} \ge 4|f(\xi )|\end{array}$$</div><p>得证。</p><hr /><p><strong>例题9：</strong>设函数$f(x)$在$[a,b]$有二阶连续的导数，且$f'(a)=f'(b)=0$，证明：存在$\xi \in (a,b) $，使得:</p><div class='full-math-div'>$$\int_a^b {f(x)dx}  = (b - a)\frac{{f(a) + f(b)}}{2} + \frac{{{{(b - a)}^3}}}{6}f^{(2)}(\xi )$$</div><p><strong>解题思路点：</strong></p><ol><li><p>令：</p><div class='full-math-div'>$$\begin{array}{l}\int_a^b {f(x)dx}  = (b - a)f(a) + \frac{1}{6}f^{(2)}({\xi _2}){(b - a)^3}\\\int_a^b {f(x)dx}  = (b - a)f(b) + \frac{1}{6}f^{(2)}({\mu _2}){(b - a)^3}\\{\xi _2},{\mu _2} \in [a,b]\end{array}$$</div></li><li><p>两式相加：</p></li></ol><div class='full-math-div'>$$2\int_a^b {f(x)dx}  = (b - a)(f(a) + f(b)) + \frac{{{{(b - a)}^3}}}{3}(f^{(2)}({\xi _2}) + f^{(2)}({\mu _2}))$$</div><ol><li>因为$f^{(2)}(x)$在$[a,b]$连续，所以存在$f^{(2)}(\xi) = \frac{f^{(2)}(\xi _2)f^{(2)}(\mu _2)}{2}$。得证</li></ol><h2 id="三角函数的变形"><a href="#三角函数的变形" class="headerlink" title="三角函数的变形"></a>三角函数的变形</h2><p><strong>例题10：</strong>证明：$\int_0^\pi  {x{a^{\sin x}}dx} \int_0^{\frac{\pi }{2}} {{a^{ - \cos x}}dx}  \ge \frac{{{\pi ^3}}}{4}$，$a>0$为常数。</p><p><strong>解题思路点：</strong></p><ol><li>解决这题需要消去被积函数中的正弦函数指数和余弦函数指数。因此对第一个表达式作变换：</li></ol><div class='full-math-div'>$$\begin{gathered}  \int_0^\pi  {x{a^{\sin x}}dx} \xrightarrow{{x = t + \frac{\pi }{2}}}\int_{ - \frac{\pi }{2}}^{\frac{\pi }{2}} {(t + \frac{\pi }{2}){a^{\cos t}}dt}  \hfill \\   = \frac{\pi }{2}\int_{ - \frac{\pi }{2}}^{\frac{\pi }{2}} {{a^{\cos t}}dt}  + \int_{ - \frac{\pi }{2}}^{\frac{\pi }{2}} {t{a^{\cos t}}dt}  = \frac{\pi }{2}\int_{ - \frac{\pi }{2}}^{\frac{\pi }{2}} {{a^{\cos t}}dt}  \hfill \\   = \pi \int_0^{\frac{\pi }{2}} {{a^{\cos t}}dt}  \hfill \\ \end{gathered} $$</div><ol><li>利用柯西-施瓦兹<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="柯西-施瓦兹不等式">[1]</span></a></sup>不等式消去三角函数：</li></ol>$$\pi \int_0^{\frac{\pi }{2}} {{a^{\cos t}}dt} \int_0^{\frac{\pi }{2}} {{a^{ - \cos x}}dx}  \geqslant \pi {(\int_0^{\frac{\pi }{2}} {{a^{\frac{{ - \cos x}}{2} + \frac{{\cos x}}{2}}}dx} )^2} = \frac{{{\pi ^3}}}{4}$$<p>得证。</p><h2 id="计算被积函数的原函数"><a href="#计算被积函数的原函数" class="headerlink" title="计算被积函数的原函数"></a>计算被积函数的原函数</h2><p><strong>例题11：</strong>求$I = \int {\frac{{x + \sin x\cos x}}{{{{(\cos x - x\sin x)}^2}}}dx} $</p><p><strong>解：</strong></p>$$\begin{gathered}  原式 = \int {\frac{{x{{\sec }^2}x + \tan x}}{{{{(1 - x\tan x)}^2}}}dx}  \hfill \\   = \int {\frac{1}{{{{(1 - x\tan x)}^2}}}d(x\tan x)}  \hfill \\   =  - \frac{1}{{1 - x\tan x}} + C \hfill \\ \end{gathered} $$<hr /><p><strong>例题：12</strong>求：</p><div class='full-math-div'>$$I = \int {\ln ({{(x + a)}^{x + a}}{{(x + b)}^{x + b}})\frac{1}{{(x + a)(x + b)}}dx} $$</div><p><strong>解：</strong></p><div class='full-math-div'>$$\begin{gathered}  原式 = \int {(\frac{{\ln (x + a)}}{{x + b}} + \frac{{\ln (x + b)}}{{x + a}})dx}  \hfill \\   = \int {\ln (x + a)d(x + b)}  + \int {\frac{{\ln (x + b)}}{{x + a}}dx}  \hfill \\   = \ln (x + a)\ln (x + b) - \int {\frac{{\ln (x + b)}}{{x + a}}dx}  + \int {\frac{{\ln (x + b)}}{{x + a}}dx}  \hfill \\   = \ln (x + a)\ln (x + b) + C \hfill \\ \end{gathered} $$</div><p><strong>例题13：</strong>求：$I = \int {\frac{1}{{{\text{(2}}{x^2} + 1)\sqrt {1 + {x^2}} }}dx} $</p><p><strong>解：</strong></p><div class='full-math-div'>$$\begin{gathered}  x = \tan t \hfill \\  原式 = \int {\frac{1}{{(2{{\tan }^2}t + 1)\sqrt {1 + {{\tan }^2}t} }}d\tan t}  \hfill \\   = \int {\frac{{\cos x}}{{{{\sin }^2}t + 1}}dt}  \hfill \\   = \int {\frac{1}{{{{\sin }^2}t + 1}}d\sin t}  \hfill \\   = \arctan \frac{x}{{\sqrt {1 + {x^2}} }} + c \hfill \\ \end{gathered} $$</div><p><strong>例题14：</strong>求：</p><div class='full-math-div'>$$\int {\frac{1}{{\sqrt {(x - a)(b - x)} }}dx} (a < x < b)$$</div><p><strong>解：</strong></p><div class='full-math-div'>$$\begin{gathered}  \int {\frac{1}{{\sqrt {{a^2} - {{(x - b)}^2}} }}dx}  = \arcsin \frac{{x + b}}{a} + c \hfill \\   = \int {\frac{1}{{\sqrt { - {x^2} + (a + b)x - ab} }}dx}  \hfill \\  {\text{ = }}\int {\frac{{\text{1}}}{{\sqrt {{{(\frac{{b - a}}{2})}^2} - {{(x - \frac{{a + b}}{2})}^2}} }}dx}  = \arcsin \frac{{x - \frac{{a + b}}{2}}}{{\frac{{b - a}}{2}}} + C \hfill \\ \end{gathered} $$</div><hr /><p><strong>例题15：</strong>求：$I = \int {\frac{1}{{1 + {x^4}}}dx} $</p><div class='full-math-div'>$$\begin{gathered}  \frac{1}{{1 + {x^4}}} = \frac{1}{{({x^2} + \sqrt 2 x + 1)({x^2} - \sqrt 2 x + 1)}} \hfill \\   = \frac{1}{{2\sqrt 2 }}(\frac{{x + \sqrt 2 }}{{{x^2} + \sqrt 2 x + 1}} - \frac{{x - \sqrt 2 }}{{{x^2} - \sqrt 2 x + 1}}) \hfill \\   = \frac{1}{{4\sqrt 2 }}(\frac{{2x + \sqrt 2 }}{{{x^2} + \sqrt 2 x + 1}} + \frac{{\sqrt 2 }}{{{x^2} + \sqrt 2 x + 1}} - \frac{{2x - \sqrt 2 }}{{{x^2} - \sqrt 2 x + 1}} + \frac{{\sqrt 2 }}{{{x^2} - \sqrt 2 x + 1}}) \hfill \\   = \int {\frac{1}{{1 + {x^4}}}dx}  = \frac{1}{{4\sqrt 2 }}\ln \frac{{{x^2} + \sqrt 2 x + 1}}{{{x^2} - \sqrt 2 x + 1}} + 2\arctan (\sqrt 2 x + 1) - 2\arctan (\sqrt 2 x - 1) \hfill \\ \end{gathered} $$</div><p><strong>例题16：</strong>求：$I = \int {\frac{1}{{x + \sqrt {{x^2} - x + 1} }}dx} $</p><p><strong>解：</strong>令$t = x + \sqrt {{x^2} - x + 1} $，则$x = \frac{{{t^2} - 1}}{{2t - 1}}$,$dx = \frac{{2({t^2} - t + 1)}}{{{{(2t - 1)}^2}}}dt$</p><div class-'full-math-div'>$$\begin{gathered}  原式 = \int {\frac{{2({t^2} - t + 1)}}{{t{{(2t - 1)}^2}}}}  = \int {\frac{2}{t} - \frac{3}{{2t - 1}} + \frac{3}{{{{(2t - 1)}^2}}}dt}  \hfill \\   = 2\ln |t| - \frac{3}{2}\ln |2t - 1| - \frac{3}{2}\frac{1}{{2t - 1}} + C \hfill \\   = 2\ln |x + \sqrt {{x^2} - x + 1} | - \frac{3}{2}\ln |2x + 2\sqrt {{x^2} - x + 1}  - 1| - \frac{3}{2}\frac{1}{{2x + 2\sqrt {{x^2} - x + 1}  - 1}} + C \hfill \\ \end{gathered} $$</div><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://zh.wikimirror.org/wiki/%E6%9F%AF%E8%A5%BF-%E6%96%BD%E7%93%A6%E8%8C%A8%E4%B8%8D%E7%AD%89%E5%BC%8F">柯西-施瓦兹不等式</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>考研笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>结构力学-力法</title>
    <link href="/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%8A%9B%E6%B3%95/"/>
    <url>/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%8A%9B%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>力学是结构力学中基于虚功原理，用于解算超静定结构的结构内力的一种计算方法。其基本原理为：通过将结构的多余支座假定为一系列的支座反力$\{ {X_1},{X_2},…,{X_n}\} $，将超静定问题转化为静定问题，然后使用<strong>图乘法</strong>求出当假设的支座反力为1时，引起的该力的方向上的位移，即得到结构在该方向上的柔度$\delta $，然后通过建立<strong>位移典型方程</strong>：各个力在假设的支座反力上引起的<strong>位移的总和为0</strong>，即$[X][\delta ] + [\Delta P] = 0$。求解该多元线性方程组即能得到假设的支座反力。根据支座反力和已知荷载可以求得结构内力。</p><p>该多元线性方程组也称为<strong>力法典型方程</strong>。</p><p>关于力法的典型方程，其中：</p><ul><li>$[X]$为假设的支座反力列向量，其等于${[{X_1},{X_2},...,{X_n}]^T}$；</li><li>$[\delta ]$为各假设的支座反力当其大小等于单位力时，在对应的支座反力方向上引起的位移。其等于:</li></ul>$$\left[ {\begin{array}{*{20}{c}}{\int {\frac{{{{\overline M }_{X1}}{{\overline M }_{X1}}}}{{EI}}} }&{\int {\frac{{{{\overline M }_{X1}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{\int {\frac{{{{\overline M }_{X1}}{{\overline M }_{Xn}}}}{{EI}}} }\\{\int {\frac{{{{\overline M }_{X2}}{{\overline M }_{X1}}}}{{EI}}} }&{\int {\frac{{{{\overline M }_{X2}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{\int {\frac{{{{\overline M }_{X2}}{{\overline M }_{Xn}}}}{{EI}}} }\\ \vdots & \vdots & \ddots & \vdots \\{\int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{X1}}}}{{EI}}} }&{\int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{\int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{Xn}}}}{{EI}}} }\end{array}} \right]$$<p>根据其表达式可以得出柔度矩阵$[\delta ]$为对称矩阵。</p><ul><li>$[\Delta P]$为外荷载所引起的对应位置的位移列向量，其等于：${\left[ {\int {\frac{{{M_p}{{\overline M }_{X1}}}}{{EI}},} \int {\frac{{{M_p}{{\overline M }_{X2}}}}{{EI}},...,\int {\frac{{{M_p}{{\overline M }_{Xn}}}}{{EI}}} } } \right]^T}$</li><li>其中$M_p$为所有的外荷载对于结构内力的组合效应。</li></ul><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="将超静定变为静定问题求解"><a href="#将超静定变为静定问题求解" class="headerlink" title="将超静定变为静定问题求解"></a>将超静定变为静定问题求解</h3><p>超静定结构一般指的是自由度小于零的结构，一般该类结构都存在着多余约束。这些多余约束一般以力的形式作用在结构上，使得超静定结构的内力计算更加复杂。</p><p>为了求解这类超静定结构，我们通过将这些<strong>多余的约束看作其存在为力</strong>的形式，而且大小为：$\{ {X_1},{X_2},…,{X_n}\} $。这样结构就由超静定结构转化为了静定结构，其存在两类荷载，一是在转化之前就存在的外荷载${\rm{[P]}}$；另一类是转化之后用以替换多余约束的支座反力。</p><p>这样通过使用支座反力替换支座作用，即得到变换后的静定结构。</p><h3 id="力法的典型方程"><a href="#力法的典型方程" class="headerlink" title="力法的典型方程"></a>力法的典型方程</h3><p>力法的典型方程是基于在所有作用下支座处产生支座反力的方向<strong>位移等于零</strong>为平衡条件所列出的典型方程。</p><p>在结构中，当我们假设某超静定结构存在支座反力$X_1$时，该支座反力作用于结构上的某个位置$M$。我们需要通过计算得到外荷载在该位置引起的虚位移。根据虚功原理，我们假设的支座反力所引起的位移会平衡外荷载所引起的位移，使得位置$M$实际的位移等于0，据此通过列出各力在各平衡位置所列出位移表达式，即可建立力法的典型方程。</p><p>根据这个上面所举例的简单例子，我们可以列出典型方程：</p>$$\begin{array}{l}{S_{X1}} + \Delta P = 0\\其中{S_{X1}} = {X_1}{\delta _{11}};\\\Delta P = P{\delta _{1P}}\end{array}$$<ul><li>${\delta _{11}}$为假定的单位支座反力在该方向上引起的位移；</li><li>${\delta _{1P}}$为外荷载综合作用在该支座反力方向上引起的位移</li></ul><p>简单例子的示意图如下图所示：</p><p><img src="1.png" alt=""></p><h3 id="图乘法-lt-span-class-”hint—top-hint—rounded”-aria-label-”结构力学-图乘法"><a href="#图乘法-lt-span-class-”hint—top-hint—rounded”-aria-label-”结构力学-图乘法" class="headerlink" title="图乘法&lt;span class=”hint—top hint—rounded” aria-label=”结构力学-图乘法"></a>图乘法<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote">&lt;span class=”hint—top hint—rounded” aria-label=”结构力学-图乘法</h3><p>“&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;</p><p>计算荷载引起的结构位移可以采用图乘法，其基本原理和计算方法可以参考：<a href="https://eatrice.top/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%9B%BE%E4%B9%98%E6%B3%95/">结构力学-图乘法</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="结构力学-图乘法">[1]</span></a></sup></p><p>通过对外荷载与该位移方向的单位力图乘，即可得到外荷载在力的方向上引起的位移；<br>同理将位移方向的单位力与位移方向的单位力进行自乘或对应不同的支座位移的单位力进行图乘可以得到单位支座反力在对应的位移方向所产生的位移。</p><p>区别于<strong>位移法</strong>的刚度，单位力引起的位移称为柔度。</p><h3 id="多支座反力的线性方程和求解"><a href="#多支座反力的线性方程和求解" class="headerlink" title="多支座反力的线性方程和求解"></a>多支座反力的线性方程和求解</h3><p>假设多余的约束有好多个，我们假定了一系列支座反力：$\{ {X_1},{X_2},...,{X_n}\} $。</p><p>我们要求出这些支座反力相互作用在对应的位移方向上的<strong>柔度</strong>：</p>$$\left[ {\begin{array}{*{20}{c}}{{\delta _{11}}}&{{\delta _{12}}}&{...}&{{\delta _{1n}}}\\{{\delta _{21}}}&{{\delta _{22}}}&{...}&{{\delta _{2n}}}\\ \vdots & \vdots & \ddots & \vdots \\{{\delta _{n1}}}&{{\delta _{n2}}}&{...}&{{\delta _{nn}}}\end{array}} \right]$$<p>根据<strong>图乘法</strong>可以得到：</p><div class='full-math-div'>$${\begin{array}{*{20}{c}}{{\delta _{11}} = \int {\frac{{{{\overline M }_{X1}}{{\overline M }_{X1}}}}{{EI}}} }&{{\delta _{12}} = \int {\frac{{{{\overline M }_{X1}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{{\delta _{1n}} = \int {\frac{{{{\overline M }_{X1}}{{\overline M }_{Xn}}}}{{EI}}} }\\{{\delta _{21}} = \int {\frac{{{{\overline M }_{X2}}{{\overline M }_{X1}}}}{{EI}}} }&{{\delta _{22}} = \int {\frac{{{{\overline M }_{X2}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{{\delta _{2n}} = \int {\frac{{{{\overline M }_{X2}}{{\overline M }_{Xn}}}}{{EI}}} }\\ \vdots & \vdots & \ddots & \vdots \\{{\delta _{n1}} = \int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{X1}}}}{{EI}}} }&{{\delta _{n2}} = \int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{X2}}}}{{EI}}} }&{...}&{{\delta _{nn}} = \int {\frac{{{{\overline M }_{Xn}}{{\overline M }_{Xn}}}}{{EI}}} }\end{array}}$$</div><p>显然该矩阵为对称矩阵，因此计算柔度时只需要计算一半的相对柔度。</p><p>计算<strong>外荷载产生的位移</strong>${[\Delta {P_1},\Delta {P_2},...,\Delta {P_n}]^T}$：</p><div class='full-math-div'>$${\left[ {\Delta {P_1} = \int {\frac{{{M_p}{{\bar M}_{X1}}}}{{EI}},} \Delta {P_2} = \int {\frac{{{M_p}{{\bar M}_{X2}}}}{{EI}},...,\Delta {P_n}\int {\frac{{{M_p}{{\bar M}_{Xn}}}}{{EI}}} } } \right]^T}$$<p>&lt;/div&gt;</p><p>列<strong>典型方程</strong>：</p><div class='full-math-div'>$$\left\{ {\begin{array}{*{20}{c}}{{X_1}{\delta _{11}} + {X_2}{\delta _{21}} + ... + {X_n}{\delta _{n1}} + \Delta {P_1} = 0}\\{{X_2}{\delta _{12}} + {X_2}{\delta _{22}} + ... + {X_n}{\delta _{n2}} + \Delta {P_2} = 0}\\ \vdots \\{{X_n}{\delta _{1n}} + {X_2}{\delta _{2n}} + ... + {X_n}{\delta _{nn}} + \Delta {P_n} = 0}\end{array}} \right.$$</div><p>该方程组为非齐次线性方程组，令支座反力向量$[X]={[{X_1},{X_2},...,{X_n}]^T}$，上面的柔度矩阵用$[\delta ]$表示，方程可表示为：$[X][\delta ] + [\Delta P] = 0$。</p><p>当柔度矩阵满秩时，方程有唯一的实数解，求解出支座反力向量，将其代入原结构中，即可根据支座反力和外荷载绘制结构内力图。</p><blockquote><p>关于对称性利用的图文资料来自邱世勋，其中穿插了一些对称性的力法原理</p></blockquote><h2 id="基于力法的对称性求解的应用"><a href="#基于力法的对称性求解的应用" class="headerlink" title="基于力法的对称性求解的应用"></a>基于力法的对称性求解的应用</h2><h3 id="对称性利用原则和条件"><a href="#对称性利用原则和条件" class="headerlink" title="对称性利用原则和条件"></a>对称性利用原则和条件</h3><p><strong>原则：</strong>使副系数，自由项尽可能为0。</p><p><strong>条件：</strong></p><ol><li>结构几何对称</li><li>结构的刚度也互相对称</li></ol><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="正对称"><a href="#正对称" class="headerlink" title="正对称"></a>正对称</h4><p>正对称荷载作用下，内力和位移都正对称，反对称作用下，内力和位移都反对称。</p><p>举例下图所示的简单示例：</p><p><img src="2.png" alt=""></p><p><img src="3.png" alt=""></p><p>应用其对称性，立法的典型方程可以简化为：</p>$$\begin{array}{l}{\delta _{13}} = {\delta _{31}} = 0,{\delta _{23}} = {\delta _{32}} = 0\\\left\{ {\begin{array}{*{20}{c}}{{\delta _{11}}{X_1} + {\delta _{12}}{X_2} + {\Delta _{1P}} = 0}\\{{\delta _{21}}{X_1} + {\delta _{22}}{X_2} + {\Delta _{2P}} = 0}\\{{\delta _{33}}{X_3} + {\Delta _{3P}} = 0}\end{array}} \right.\end{array}$$<h4 id="反对称"><a href="#反对称" class="headerlink" title="反对称"></a>反对称</h4><p>对称结构在正对称结构下，内力位移都为正对称的，反对称结构下，内力位移都为反对称的。</p><ol><li>奇数跨对称刚架：</li></ol><p>奇数跨对称刚架。如图7 - 25a所示刚架，在正对称荷载作用下,由于只产生正对称的内力和位移，故可知在对称轴上的截面C处不可能发生转角和水平线位移,但可有竖向线位移同时,该截面上将有弯矩和轴力,而无剪力。因此,截取刚架的一半时，在该处应用一滑动支座(也称定向支座)来代替原有联系,从而得到图7-25b所示的计算简图。</p><p><img src="4.png" alt=""></p><ol><li>偶数跨对称刚架</li></ol><p>偶数跨对称刚架。如图7 - 26a所示刚架，在正对称荷载作用下,若忽略杆件的轴向变形,则在对称轴上的刚结点C处将不可能产生任何位移。同时,在该处的横梁杆端有弯矩、轴力和剪力存在。因此，截取一半时该处用固定支座代替,从而得到图7 - 26b所示的计算简图。<br>在反对称荷载作用下(图7 - 26c),可将其中间柱设想为由两根刚度各为I/2的竖柱组成,它们在顶端分别与横梁刚结(图7-26e),显然这与原结构是等效的。然后,设想将此两柱中间的横梁切开,则由于荷载是反对称的，故切口上只有剪力Fsc(图7-26f)。因忽略轴向变形,这对剪力将只使两柱分别产生等值反号的轴力,而不使其他杆件产生内力。而原结构中间柱的内力是等于该两柱内力之代数和,故剪力Fsc实际上对原结构的内力和变形均无影响。因此,可将其去掉不计，而取一半刚架的计算简图如图7-26d所示。</p><p><img src="5.png" alt=""></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://eatrice.top/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%9B%BE%E4%B9%98%E6%B3%95/">结构力学-图乘法</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://zh.wikipedia.org/zh-hans/%E5%8A%9B%E6%B3%95">维基百科-力法</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>结构力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>结构力学-图乘法</title>
    <link href="/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%9B%BE%E4%B9%98%E6%B3%95/"/>
    <url>/post/%E7%BB%93%E6%9E%84%E5%8A%9B%E5%AD%A6-%E5%9B%BE%E4%B9%98%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><strong>图乘法</strong>是结构力学中，通过结构内力分布和结构本身的刚度，基于材料力学[[虚功|虚功原理]]，在结构的需要求解位移的位置假定单位荷载剪力虚功方程，求解出该点结构由外荷载所产生的位移的一种计算方法。</p><p><strong>公式表示</strong>：$\delta =\frac{\omega {{y}_{c}}}{EI}$</p><h3 id="公式来源"><a href="#公式来源" class="headerlink" title="公式来源"></a>公式来源</h3><p>基于材料力学的<strong>虚功原理</strong>可以得到：</p><p>材料上任意截面的位移计算表达式为：$  (\delta \text{=}\int_{\Omega }{\frac{{{F}_{N}}{{{\bar{F}}}_{N}}}{EA}}dL+\int_{\Omega }{\frac{{{F}_{S}}{{{\bar{F}}}_{S}}}{EI}}dL+\int_{\Omega }{\frac{{{M}_{p}}\bar{M}}{EI}}dL)  $</p><p>其中：$\delta$为结构上待求点的位移大小；</p>$\Omega$为结构中受外力作用影响下存在内力或位移的结构部分，一般取整个结构；<br />${{F}_{N}}$为在结构中任取一截面位置，在外荷载的作用下，该截面位置的轴力函数；<br />${{F}_{S}}$为在结构中任取一截面位置，在外荷载的作用下，该截面位置的剪力函数；<br />${{M}_{p}}$为在结构中任取一截面位置，在外荷载的作用下，该截面位置的弯矩函数；<br />$EA,EI$分别为结构中各部分的截面面积和外力作用引起的变形所对应的惯性矩；<br />$dL$为当前内力荷载函数所影响的结构微元长度；<br />${{{\bar{F}}}_{N}},{{{\bar{F}}}_{S}},\bar{M}$为所求截面位置施加的单位力在结构中引起的内力函数。<br />在**实际的结构计算**中，由轴力和剪力所引起的位移往往远小于由弯矩所引起的位移，因此在实际计算中一般忽略轴力和剪力，只计算第三项弯矩的积分。即采用公式：$\delta =\int_{\Omega }{\frac{{{M}_{p}}\bar{M}}{EI}}dL$<h3 id="图乘简化"><a href="#图乘简化" class="headerlink" title="图乘简化"></a>图乘简化</h3><p>在<strong>工程</strong>上，由于计算积分的过程较为复杂，因此对上面的计算公式进行<strong>简化</strong>：</p><p>若${\bar{M}} $ 图为直线的话，即单位荷载所引起的弯矩函数 $\bar{M}(x)=ax+b$;</p><p>则可以简化成${{M}_{p}}$  图形的面积，乘以其图形形心的位置截面对应的 $\bar{M}(c)=ac+b$的弯矩值，再除以抗弯刚度 $EI$;</p><p>导出公式为：<br>$\delta =\frac{\omega {{y}_{c}}}{EI}$</p><p>其中： $\omega$ 为${{M}_{p}}$图形的面积，等于$\int{_{L}{{M}_{p}}}dL$;</p>${{y}_{c}}$为单位荷载引起的弯矩在形心位置截面的弯矩值，即 $\bar{M}(c)$ <p><br /></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="虚功原理"><a href="#虚功原理" class="headerlink" title="虚功原理"></a>虚功原理</h3><p><strong>原理表述</strong>：一个原为静止的质点系，如果约束是理想双面定常约束，则系统继续保持静止的条件是所有作用于该系统的主动力对作用点的虚位移所作的功的和为零。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="百度百科-虚功原理">[2]</span></a></sup></p><p>虚功原理在结构力学的图乘法的应用，实质上是外荷载对虚位移所做的[[虛功|虚功]]与待求截面上的虚力对该截面的实际位移所做的[[虚功]]相等。在原结构中，已知结构形式和外荷载，之后确定需要计算位移的计算截面。</p><p>在该截面上施加一个虚拟的力（可以是矢量力也可以是弯矩）。</p><p>这个施加的虚拟力在结构中所引起的内力函数为：${{{\bar{F}}}_{N}},{{{\bar{F}}}_{S}},\bar{M}$；</p><p>这些内力引起的截面位移的变化率分别为：$\frac{{{{\bar{F}}}_{N}}}{EA},\frac{{{{\bar{F}}}_{S}}}{EI},\frac{{\bar{M}}}{EI}$；</p><p>当前截面处引起的虚位移将外荷载引起的内力函数可以表示为：$\frac{{{{\bar{F}}}_{N}}}{EA}dL,\frac{{{{\bar{F}}}_{S}}}{EI}dL,\frac{{\bar{M}}}{EI}dL$；</p><p>后乘以虚位移，然后求和即得到了虚功方程的左侧表达式：$\int_{\Omega }{\frac{{{F}_{N}}{{{\bar{F}}}_{N}}}{EA}}dL+\int_{\Omega }{\frac{{{F}_{S}}{{{\bar{F}}}_{S}}}{EI}}dL+\int_{\Omega }{\frac{{{M}_{p}}\bar{M}}{EI}}dL$；</p><p>假设该截面的实际位移为$\delta$</p><p>假设的虚拟力为$\overline{P}$  ，则虚拟力做的虚功为：$\overline{P}\delta$；</p><p>根据虚功原理，左右两边划等号，即可等到虚功平衡方程。</p><h3 id="单位荷载法-lt-span-class-”hint—top-hint—rounded”-aria-label-”百度百科-单位荷载法"><a href="#单位荷载法-lt-span-class-”hint—top-hint—rounded”-aria-label-”百度百科-单位荷载法" class="headerlink" title="单位荷载法&lt;span class=”hint—top hint—rounded” aria-label=”百度百科-单位荷载法"></a>单位荷载法<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote">&lt;span class=”hint—top hint—rounded” aria-label=”百度百科-单位荷载法</h3><p>“&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;</p><p><strong>单位荷载法</strong>：是一种将假定的荷载设置等于单位力的力学求解方法。</p><p>将虚拟力等于单位力代入虚功原理中得到的平衡方程中，等式的右边只剩下了位移$\delta$。而将单位力代入结构后，求解单位力所引起的内力的计算过程也能得到大量简化。最后得到的位移计算公式为：$\delta =\int_{\Omega }{\frac{{{M}_{p}}\bar{M}}{EI}}dL$</p><h3 id="图乘法"><a href="#图乘法" class="headerlink" title="图乘法"></a>图乘法</h3><p>在工程上采用积分的方法来校核和设计材料的唯一标准太过复杂，因此需要将积分简化成一般计算。这里将数学表达式几何化，将位移求解公式进行几何表述，即得到了图形相乘的结果，导出了图乘公式。</p><p>若施加单位荷载后的结构产生的内力是按照线性变化，即$\bar{M}(x),{{F}_{N}},{{F}_{S}}$均可用$y=ax+b$的形式表示，</p><p>则对于表达式$\delta =\int_{\Omega }{\frac{{{M}_{p}}\bar{M}}{EI}}dL$来说，$\frac{1}{EI}$为常数，可以提出积分式；</p><p>得到：$\delta =\frac{\int_{\Omega }{{{M}_{p}}\bar{M}}dL}{EI}$；</p><p>提取分子：<br><div class='full-math-div'>$\int_{\Omega }{{{M}_{p}}\bar{M}}dL=\int_{\Omega }{{{M}_{p}}(ax+b)}dL=a\int_{\Omega }{{{M}_{p}}x}dL+b\int_{\Omega }{{{M}_{p}}}dL$</div></p><p>该表达式为长度为${{M}_{p}}$宽度为$dL$的面积，对于轴距为$\bar{M}$的轴的[[面积矩|面积矩（静矩）]]</p><p>根据面积矩的特性：图形对某一轴的矩，等于图形的形心到轴的距离乘以图形面积；</p><p>因此该积分可以简化为 ${{M}_{p}}$ 图形的面积，乘以${{M}_{p}}$图形的形心位置所对应的 $\bar{M} $</p><p>即导出$\delta =\frac{\omega {{y}_{c}}}{EI}$</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E5%8D%95%E4%BD%8D%E8%BD%BD%E8%8D%B7%E6%B3%95">百度百科-单位荷载法</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E8%99%9A%E5%8A%9F%E5%8E%9F%E7%90%86">百度百科-虚功原理</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>结构力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rainbow</title>
    <link href="/post/Rainbow/"/>
    <url>/post/Rainbow/</url>
    
    <content type="html"><![CDATA[<p>访问 <a href="https://rainbow.eatrice.top/">Rainbow</a> 吧！</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Rainbow - 一朵彩虹是 <code>EatRiceTeam</code>建立的一个旨在收集优美英语句子的一套网站。演示网站地址为：<a href="https://rainbow.eatrice.top/">https://rainbow.eatrice.top/</a></p><p>我们希望能够与大家分享我们在日常的学习生活中遇到的优美的英语句子，希望它能像彩虹一样，美丽天空，温暖人心。</p><p>其由<code>C#</code>开发，基于<code>ASP.NET Core 2.2</code>框架。包括<code>Web API</code>提供导出<code>JSON</code>的数据接口，和基于<code>MVC</code>的动态展示网站。</p><h2 id="关于Rainbow"><a href="#关于Rainbow" class="headerlink" title="关于Rainbow"></a>关于Rainbow</h2><p>Rainbow 收集的英语句子的要求为：</p><ol><li>读起来感觉很优美的文章句子段落或诗歌节选；</li><li>含义特别丰富且引人深思的鸡汤或哲学句子；</li><li>句子奇怪，但意义完整且显得很有个性的电影台词；</li><li>你特别喜欢，且引起你感情上共鸣的英语歌词。</li></ol><p>Rainbow 创建的初衷是替代我们的个人网站目前正在使用的 一言 ，我们希望自己能够自己定义一句话的意思和表现形式。目前句子库不是特别丰富，收集的资源有限，所以欢迎大家投稿，并发表自己的看法。</p><h2 id="给Rainbow投稿"><a href="#给Rainbow投稿" class="headerlink" title="给Rainbow投稿"></a>给Rainbow投稿</h2><p>我们希望找到小伙伴们和我们一起充实我们的句子库，希望大家能够将自己珍藏的句子分享给我们：</p><p><strong>投稿要求</strong>：</p><ol><li>提供完整的句子</li><li>提供句子的作者</li><li>提供句子的来源，如书名、文章名、电影名、歌曲名等。</li></ol><p>投稿方式：</p><ol><li><p><a href="mailto:qiqi@eatrice.top">EatRice的邮箱：qiqi@eatrice.top</a></p></li><li><p><a href="dipper.ruru@gmail.com">Courir的邮箱：dipper.ruru@gmail.com</a></p></li><li><p>在本页下方留言</p></li><li>好友QQ或微信直接发送</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="数据接口"><a href="#数据接口" class="headerlink" title="数据接口"></a>数据接口</h3><p>目前语句库饱含了三种类型的语句：reading、movies、songs</p><p>需要从语句库中随机获得语句的<code>Json</code>格式的接口：<code>https://api.eatrice.top/</code></p><p>需要按照三个单独分类请求语句的接口：<br><code>https://api.eatrice.top/reading/</code><br><code>https://api.eatrice.top/movies/</code><br><code>https://api.eatrice.top/songs/</code></p><p>获取所有的句子接口：<code>https://api.eatrice.top/GetAll/</code></p><p>需要根据语句ID请求语句的接口：<code>https://api.eatrice.top/?ID=10001</code><br>ID编号从10001开始增加，若该ID不存在则随机返回语句，同<code>https://api.eatrice.top/</code></p><p>返回的数据格式如下：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;Content&quot;</span>: <span class="hljs-string">&quot;Because I am your mom,It counts the most because I know you the most.&quot;</span>,<br>    <span class="hljs-attr">&quot;Author&quot;</span>: <span class="hljs-string">&quot;Stephen Chbosky&quot;</span>,<br>    <span class="hljs-attr">&quot;Source&quot;</span>: <span class="hljs-string">&quot;Wonder&quot;</span>,<br>    <span class="hljs-attr">&quot;ID&quot;</span>: <span class="hljs-string">&quot;10009&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><br>其中，<code>Content</code>为句子内容<br><code>Author</code>为句子作者<br><code>Source</code>为句子来源<br><code>ID</code>为句子ID</p><h3 id="展示网站"><a href="#展示网站" class="headerlink" title="展示网站"></a>展示网站</h3><p>展示网站为 Rainbow 提供展示界面。和说明文档。</p><p>Rainbow的展示网站为：<a href="https://rainbow.eatrice.top/">https://rainbow.eatrice.top/</a><br>欢迎大家访问和提供意见😊😊😊。</p><p><img src="1.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在需要添加 <code>rainbow</code> 的地方添加一个占位符:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;rainbow&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;&#x27;</span>&gt;</span>🌈 获取中...<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在申明div之后，搭配数据请求脚本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">fetch(<span class="hljs-string">&#x27;https://api.eatrice.top&#x27;</span>)</span><br><span class="javascript">  .then(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.json())</span><br><span class="javascript">  .then(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> rainbow = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;rainbow&#x27;</span>);</span><br>    rainbow.innerHTML = data.Content;<br><span class="javascript">    rainbow.href = <span class="hljs-string">&quot;https://rainbow.eatrice.top/?ID=&quot;</span> + data.ID;</span><br>  &#125;)<br><span class="javascript">  .catch(<span class="hljs-built_in">console</span>.error)</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就能在网站上看到你的 rainbow 啦！</p><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p>项目已在<code>github</code>上开源</p><ul><li>项目地址：<a href="https://github.com/QiQiWan/rainbow/">https://github.com/QiQiWan/rainbow/</a></li><li>项目仓库：<a href="https://github.com/QiQiWan/rainbow/">git@github.com:QiQiWan/rainbow.git</a></li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p><a href="https://eatrice.top">EatRice-https://eatrice.top</a><br><a href="https://ruru.eatrice.top">上屋顶看北斗七星-https://ruru.eatrice.top</a></p>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高等数学-一元函数积分学解题技巧(一)</title>
    <link href="/post/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6-%E4%B8%80%E5%85%83%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    <url>/post/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6-%E4%B8%80%E5%85%83%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%86%E5%AD%A6%E8%A7%A3%E9%A2%98%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>一元函数积分学是高等数学中最为基础且可拓展性非常强的一部分内容。其包含之前课程中的极限的原理和方法，定积分和不定积分的计算和方法，还承接着后面的多元函数微分学，甚至囊括了泰勒级数和傅里叶级数的一部分概念。因此作为一个承前启后的重要部分在考研数学所占的比重是非常大的，也是特别需要重视的一部分。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>一元函数积分学的相关试题可以出成选择填空题，或者大题。其中大题的分支一般较高，解题过程较为复杂，同时对于大题中的证明题更是结合了多个数学知识在其中。因此大题上拿到分值特别重要。笔者通过观看西安交通大学的相关的考研数学的网课，同时结合自己的一些学习笔记做了一点点基于自身水平的解题方法小结，来复习一下之前的学习内容，也和朋友们分享。</p><h2 id="典例分析"><a href="#典例分析" class="headerlink" title="典例分析"></a>典例分析</h2><div class='alert alert-warning'>部分latex公式，mathjax引擎无法渲染，因此以图片显示。</div><h3 id="不定积分的特性"><a href="#不定积分的特性" class="headerlink" title="不定积分的特性"></a>不定积分的特性</h3><p><strong>例题1：</strong>设$f(x)$是$(0, + \infty )$内的连续函数，对于任意的正整数$a,b$，积分$\int_a^{ab} {f(x)dx} $与$a$无关，且$f(1)=1$，求$\int {f({e^x} + 1)dx} $。</p><p><strong>解答思路点：</strong></p><ol><li>本题考虑的是定积分的特性，只有在积分式中，将$a$参数进行消除，才会使得该式与参数$a$无关，既然式中不含有参数$a$，则为了避免引入更多的变量或公式，可以直接对该式子对$a$进行求导，且导数值为0。可以即得出一个结论，一个函数若要申明与某个变量无关，则可以对这个函数求关于该变量的导数，且导数值为0。即$\frac{{d\int_a^{ab} {f(x)dx} }}{{da}} = 0$</li><li>对不定积分的求导方法；不定积分的求导可以假定其原函数，然后用原函数代入积分上下限得出积分表达式，后通过对积分表达式分别求导，即可得到求导公式：<div class='full-math-div'>$$\frac{{d\int_a^{ab} {f(x)dx} }}{{da}} = \frac{{d(F(ab) - F(a))}}{{da}} = bf(ab) - f(a) = 0$$</div></li><li>根据已知条件，结合到推导出的公式之中：由$f(1)=1$，将将$a=1$导入上式中，得到$bf(b) = 1 =  &gt; f(b) = \frac{1}{b}$。即能得到该函数表达式。之后只需根据题目要求计算该函数的定积分即可。</li></ol><hr /><p><strong>例题2：</strong>设$f(x),g(x)$在$[a, + \infty )$上有连续的导数。且$f’(x) \ge 0$，$\mathop {\lim }\limits_{x -  &gt;  + \infty } f(x) = 0$，$g(x)$在$[a, + \infty )$上有界，证明：$\int_a^{ + \infty } {f(x)g’(x)dx} $收敛。</p><p><strong>解题思路点：</strong></p><ol><li>函数收敛的定义：如果一个序列(函数看作连续序列)是有极限的，我们称这个数列收敛，否则称其为发散。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="极限和收敛">[1]</span></a></sup>要证明该函数收敛，即证明该函数存在极限。</li><li><p>已知$f(x)$的极限和$g(x)$有界，而目标函数中包含$g'(x)$，需要将目标函数做一定的变换，去掉$g'(x)$，加上$f'(x)$，首先想到的即是采用分部积分法。</p><div class='full-math-div'>$$\begin{array}{l}\int_a^{ + \infty } {f(x)g'(x)dx}  = \mathop {\lim }\limits_{A -  > \infty } \int_a^A {f(x)g'(x)dx} \\ = \mathop {\lim }\limits_{A -  > \infty } (f(A)g(A) - f(a)g(a) - \int_a^A {f'(x)g(x)dx} )\end{array}$$</div></li><li>$f(A)g(A)$等于0，$f(a)g(a)$为常数，即只需证明$\int_a^A {f'(x)g(x)dx} $收敛，由于$g(x)$有界，则可认为$|g(x)| \le  M$，则<div class='full-math-div'>$$\begin{array}{l}\frac{{\int_a^1 {f(x)dx} }}{{1 - a}} \le \frac{{\int_a^1 {f(x)dx} }}{{1 - a}} = f(a)\\\int_a^A {f'(x)g(x)dx}  \le \int_a^A {Mf'(x)dx} \\ \le M(f(A) - f(a))\end{array}$$</div>得证。</li></ol><hr /><p><strong>例题3：</strong>设$x \ge x,{f_0}(x) > 0$，若${f_n}(x) = \int_0^x {{f_{n - 1}}(t)dt} $，$n=1,2,3,...$，求证${f_n}(x) = \frac{1}{{(n - 1)!}}\int_0^x {{{(x - t)}^{n - 1}}{f_0}(t)dt} $。</p><p><strong>解题思路点：</strong></p><ol><li>存在递推关系，因此可以用数学归纳法证明。数学归纳法<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="数学归纳法">[2]</span></a></sup><br>2.考虑当$n=1$时：<div class='full-math-div'>$${f_1}(x) = \int_0^x {{f_0}(t)dt}  = \frac{1}{{0!}}\int_0^x {{{(x - t)}^0}{f_0}(t)dt} $$</div>3. 当$n = n$时，成立，证明$n = n + 1$也成立。<div class='full-math-div'>$$\begin{array}{l}{f_{n + 1}}(x) = \int_0^x {{f_n}(t)dt}  = \int_0^x {\frac{1}{{(n - 1)!}}\int_0^u {{{(u - t)}^{n - 1}}{f_0}(t)dt} du} \\ = \frac{1}{{n!}}\int_0^x {{{(x - u)}^n}{f_0}(u)du} \end{array}$$</div>### 函数的大小关系**例题4：**设函数$f(x),g(x)$在区间$[a,b]$上连续，且$f(x)$单调增加。$0<g(x)<1$，证明：1. $0 \le \int_a^x {g(t)dt}  \le x - a,x \in [a,b]$2. $\int_a^{a + \int_a^b {g(t)dt} } {f(x)dx}  \le \int_a^b {f(x)g(x)dx} $**解题思路点：**1. 可以直接由题目已知条件，代入（1）问的式子中，得到其满足条件。2. 比较两个函数的大小，一般构造两个函数相减得的形式。因此构造：<div class='full-mayh-div'>$$F(x) = \int_a^x {f(u)g(u)du}  - \int_a^{a + \int_a^x {g(t)dt} } {f(u)du} $$</div>3. 根据题目已知$f(x)$单调增，可以得到$f'(x)>0$，同时又因为两个比较的函数积分上下限不同，被积函数也不同，所以通过对构造函数进行求导，来统一量纲：<div class='full-math-div'>$$\begin{array}{l}F'(x) = f(x)g(x) - g(x)f(a + \int_a^x {g(t)dt} )\\ = g(x)(f(x) - f(a + \int_a^x {g(t)dt} )) \ge 0\end{array}$$</div>4. 当$x=a$时，$F(x)=0$，且当$x \ge a$时，$F'(x) \ge 0$，得证。<hr />**例题5：**设函数$f(x)$在$[a,b]$上不恒为零，其导数连续，且$f(a)=0$.证明：存在$\xi  \in {\rm{(}}a,b)$，使$|f'(\xi )| > \frac{1}{{{{(b - a)}^2}}}\int_a^b {f(x)dx} $。</li></ol><p><strong>解题思路点：</strong></p><ol><li><p>分析题意可得，该题与拉格朗日中值定理的表述极为类似，因此可以转化为拉格朗日中值定理<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="拉格朗日中值定理">[3]</span></a></sup>的形式进行求解。</p></li><li><p>该不等式左边为正数或零，右边则有三种情况：</p><ol><li>右边为负：则不等式恒成立</li><li>右边为0：因为$f(x)$不恒为零。因此必存在$f'(\xi )$不等于0，则不等式成立。</li><li>右边为正：此时可以构造朗格朗日式：$f(\mu ) = \frac{1}{{b - a}}\int_a^b {f(x)dx} $，又因为<div class='full-math-div'>   f(a)=0$，则$f(\mu ) = f(\mu ) - f(a) = \int_a^\mu  {f'(x)dx}    <br />   右侧再次构造拉格朗日公式：<br />   $$   \frac{{\int_a^\mu  {f'(x)dx} }}{{b - a}}   $$   <br />   则一定存在：<br />   $$   f'(\xi ) = \frac{{\int_a^\mu  {f'(x)dx} }}{{\mu  - a}} = \frac{{f(\mu )}}{{\mu  - a}} = \frac{1}{{(b - a)(\mu  - a)}}\int_a^b {f(x)dx}    $$</div></li></ol></li><li><p>根据2.2得到$\mu &lt; b$，因此左式大于右式。</p></li></ol><hr /><p><strong>例题6：</strong>设函数$f(x)$在$[a,b]$上有连续的导数，且$f(a)=0$，证明：$\int_a^b {{f^2}(x)dx}  \le \frac{{{{(b - a)}^2}}}{2}\int_a^b {{{(f'(x))}^2}dx} $.**解题思路点：**1.  该题题解需要使用到柯西-施瓦兹<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="柯西-施瓦兹不等式">[4]</span></a></sup>不等式，该不等式数学符号表示如下所示：<div class='full-math-div'>$${(\int_a^b {f(x)g(x)dx} )^2} \le \int_a^b {{f^2}(x)dx} \int_a^b {{g^2}(x)dx} $$</div>2. 将题中原式化为柯西-施瓦兹不等式：<div class='full-math-div'>$$\begin{array}{l}{f^2}(x) = {(\int_a^x {f'(t)dt} )^2} \le \int_a^x {dx} \int_a^x {{{(f'(t))}^2}dt} \\ = (x - a)\int_a^x {{{(f'(t))}^2}dt}  \le (x - a)\int_a^b {{{(f'(t))}^2}dt} \end{array}$$</div>3. 对不等式两边求积分，得证。4. 本题的关键是讲等式左边的表达式转换成右边的表达式，其中比较重要的一项变换为：${f^2}(x) = {(\int_a^x {f'(t)dt} )^2}$### 函数得极值和极点**例题7：**已知：$f(x) = \int_x^{x + \frac{\pi }{2}} {|\sin t|dt} $</p><ol><li>证明：$f(x)$是以$ \pi $为周期的周期函数；</li><li>求函数f(x)的值域。</li></ol><p><strong>解题思路点：</strong></p><ol><li><p>要证明函数为周期函数，且其周期为$\pi$。即是证明：$f(x)=f(x+ \pi )$。将$u = t + \pi$代入原方程中，</p><div class='full-math-div'>$$f(x) = \int_x^{x + \frac{\pi }{2}} {|\sin u|du}  = \int_x^{x + \frac{\pi }{2}} {|\sin t|dt} $$</div></li><li><p>计算函数的值域，即是计算函数在定义域的取值范围内函数的极值，又因为函数是以$\pi$为周期周期函数，因此只需要在$[0, \pi]$找出极大值和极小值点的函数值即可。</p></li><li>对$f(x)$求导得:<div class='full-math-div'>$$f'(x) = |\sin (x + \frac{\pi }{2})| - |\sin x| = |\cos x| - |\sin x|$$</div></li><li>由题可知，该函数为分段函数，且存在两个极值点$\frac{\pi }{4}$和$\frac{{3\pi }}{4}$。计算这两点得函数值$f(\frac{{\pi }}{4})=-\sqrt 2  $，$f(\frac{{3\pi }}{4}) = \sqrt 2 $。即得函数得值域为：$[ 2 - \sqrt 2 ,\sqrt 2 ]$。</li></ol><hr /><p><strong>例题8：</strong>求$\mathop {\lim }\limits_{x -  >  + \infty } \frac{{\int_0^x {|\cos t|dt} }}{x}$</p><p><strong>解题思路点：</strong></p><ol><li>同<em>例题6</em>，函数$f(x)={\int_0^x {|\cos t|dt} }$仍为周期为$\pi$的周期函数。因此可以将该不定积分拆分成为两个部分：<ol><li>满足整数倍的周期函数值积分。</li><li>不满足整数倍的周期函数积分。</li></ol></li><li>设$x=n \pi + k$，可以得到：<div class='full-math-div'>$$f(x) = \int_0^{n\pi } {|\cos t|dt}  + \int_{n\pi }^x {|\cos t|dt} $$</div></li><li>因为后一项远远小于前一项，因此可以只保留前一项，得到$f(X)=2n$，则原式变为：$\mathop {\lim }\limits_{n -  >  + \infty } \frac{{2n}}{{n\pi }} = \frac{2}{\pi }$</li></ol><hr /><p><strong>例题9：</strong>设函数$f(x)$在$[0,1]$上有二阶连续的导数，证明：对于任意的$a \in (0,\frac{1}{4})$和$b \in (\frac{3}{4},1)$，有：<br><img src="1.png" alt=""></p><p><strong>解题思路点：</strong></p><ol><li>根据朗格朗日中值定理，存在<div class='full-math-div'>$$\begin{array}{l}\theta  \in (a,b)\\使得：|f(a) - f(b)| = |f'(\theta )||(a - b)| > \frac{1}{2}|f'(\theta )|\end{array}$$</div></li><li>由第一步可以得到：<br><img src="2.png" alt=""><br>而：<br><img src="3.png" alt=""><br>从而得证，不等式成立。</li></ol><h3 id="积分式子的变形和构造"><a href="#积分式子的变形和构造" class="headerlink" title="积分式子的变形和构造"></a>积分式子的变形和构造</h3><div class='alert alert-success'>该部分十分考研对于积分公式的<strong>组合能力</strong>，其中很多积分变形特别难想，很难能够直接得到想要的正确构造积分式，同时得到符合题目要求的计算结果。</div><p><strong>例题10：</strong>设函数$f(x)$在$[0,+ \infty )$上有连续的导数，且$f(0)=0$，$|f(x)-f'(x)| \le 1$。证明：$|f(x)| \le e^x - 1$，$x \in [0, + \infty )$</p><p><strong>解题思路点：</strong></p><ol><li>根据题目的已知条件发现题目给出的条件与需要证明的不等式之间的差距较大，因此需要对已知条件进行一系列的变形。已知$f(x)-f'(x)$，则可以构造$((e^{-x}f(x))' = e^{-x}(f'(x)-f(x))$</li><li>对第一步得到的积分式进行0到x的积分：<div class='full-math-div'>$$\begin{array}{l}{e^{ - x}}f(x) = \int_0^x {{e^{ - t}}(f'(t) - f(t))dt} \\|{e^{ - x}}f(x)| = \int_0^x {|{e^{ - t}}(f'(t) - f(t))|dt}  \le \int_0^x {|{e^{ - t}}|dt}  = 1 - {e^{ - x}}\end{array}$$</div>得证。</li></ol><p><strong>例题11：</strong>设函数$f(x)$在$[a.b]$上连续，且<br><div class='full-math-div'>$$\int_a^b {f(x)dx}  = \int_a^b {f(x){e^x}dx}  = 0$$</div></p><p><strong>解题思路点：</strong></p><ol><li>一般零点个数计算一般是构造拉格朗日中值定理式，当原函数的被积函数存在三个零点时，即可通过拉格朗日中值定理证明原函数存在至少两个零点。因此可以通过构造原函数的被积函数证明题中结论。</li><li>令$F(x) = \int_a^x {f(t)dt} (a \le x \le b)$，则$F(a)=F(b)=0$。</li><li>对于后一道式子。采用分部积分法：<div class='full-math-div'>$$\begin{array}{l}\int_a^b {f(x){e^x}dx}  = \left. {F(x){e^x}} \right|_a^b - \int_a^b {F(x){e^x}dx} \\ =  - \int_a^b {F(x){e^x}dx}  = 0\end{array}$$</div>根据拉格朗日中值定理，必存在$c \in [a,b]$，使得$F(c){e^c}(b - a) = 0$，即找到第三个零点。得证。</li></ol><p><strong>例题12：</strong>设函数$f(x)$在$[0,1]$上可积，且当$0 \le x &lt; y \le 1$时，$|f(x)-f(y)| \le |\arctan{X}-\arctan{y}|$，$f(1)=0$，证明：$|\int_0^1 {f(x)dx} | \le \frac{1}{2}\ln 2$.</p><p><strong>解题思路点：</strong></p><ol><li><p>构造题中所给条件的表达式：</p><div class='full-math-div'>$$\begin{array}{l}|\int_0^1 {f(x)dx} | = |\int_0^1 {(f(x) - f(1))dx} |\\ \le \int_0^1 {|\arctan x - \arctan 1|dx} \\ = \int_0^1 {(\frac{\pi }{4} - \arctan x)dx} \end{array}$$</div></li><li><p>采用分部积分法，积分上式，计算结果：</p></li></ol><div class='full-math-div'>$$\int_0^1 {(\frac{\pi }{4} - \arctan x)dx}  = \frac{1}{2}\ln 2$$</div><p><strong>例题13：</strong>设函数$f(x)$在$[0,1]$上单调减且连续<br>证明：对于任意$a \in (0,1)$，有$\int_0^a {f(x)dx}  \ge a\int_0^1 {f(x)dx} $</p><p><strong>解题思路点：</strong></p><ol><li><p>分析证明对象，可以看出需要证明函数在$(0,a)$区间内的平均大小，大于$(a, 1)$区间内的平均大小，由此可以分解表达式：</p><div class='full-math-div'>$$a\int_0^1 {f(x)dx}  = a\int_0^a {f(x)dx}  + a\int_a^1 {f(x)dx} $$</div></li><li><p>证明：$\frac{{\int_0^a {f(x)dx} }}{a} \ge \frac{{\int_a^1 {f(x)dx} }}{{1 - a}}$。</p></li><li>因为：$\begin{array}{l}\frac{{\int_0^a {f(x)dx} }}{a} \ge \frac{{\int_0^a {f(a)dx} }}{a} = f(a)\\\frac{{\int_a^1 {f(x)dx} }}{{1 - a}} \le \frac{{\int_a^1 {f(x)dx} }}{{1 - a}} = f(a)\end{array}$<br>得证。</li></ol><h3 id="函数变上限构造和拉格朗日中值定理"><a href="#函数变上限构造和拉格朗日中值定理" class="headerlink" title="函数变上限构造和拉格朗日中值定理"></a>函数变上限构造和拉格朗日中值定理</h3><p><strong>例题14：</strong>设函数$f(x)$在$[a,b]$上单调增且连续。<br>证明：$\int_a^b {xf(x)dx}  \ge \frac{{a + b}}{2}\int_a^b {f(x)dx} $</p><p><strong>解题思路点：</strong></p><ol><li>构造差函数</li></ol><div class='full-math-div'>$$F(x) = \int_a^x {tf(t)dt}  - \frac{{a + x}}{2}\int_a^x {f(t)dt} $$</div><ol><li>对差函数进行求导即可得到差函数的变化规律：</li></ol><div class='full-math-div'>$$\begin{array}{l}F'(x) = xf(x) - \frac{1}{2}\int_a^x {f(t)dt}  - \frac{{a + x}}{2}f(x)\\ = \frac{1}{2}((x - a)f(x) - \int_a^x {f(t)dt} )\end{array}$$</div><ol><li>拉格朗日中值定理得原始可变换为：</li></ol><div class='full-math-div'>$$F(x) = \frac{1}{2}(x - a)[f(x) - f(c)]$$</div><p>$x &gt; c$，因此$F(x) \ge 0$得证</p><hr /><p><strong>例题15：</strong>设函数$f(x),g(x)$在$[0,1]$上有连续的导数，且$f(0)=0$，$f’\left( x \right) \ge 0,g’(x) \ge {\rm{0}}$，证明：对于任意$a \in [0,1]$，有$\int_0^a {g(x)f’(x)dx}  + \int_0^1 {g’(x)f(x)dx}  \ge f(a)g(1)$</p><p><strong>解题思路点：</strong></p><ol><li><p>构造变上限函数：</p><div class='full-math-div'>$$F{\rm{(}}x) = \int_0^x {g(x)f'(x)dx}  + \int_0^1 {g'(x)f(x)dx}  - f(x)g(1)$$</div><p>该构造函数在定义域上恒大于0，可以通过证明先证明函数值在定义域的上限上大于等于0，然后证明函数在定义域中是减函数。</p></li><li><p>将$x=1$代入该构造函数，得到</p><div class='full-math-div'>$$\begin{array}{l}F(1) = \int_0^1 {g(x)f'(x)dx}  + \int_0^1 {g'(x)f(x)dx}  - f(1)g{\rm{(1)}}\\{\rm{ = }}\left. {g(x)f(x)} \right|_0^1 - f(1)g(1) = 0\end{array}$$</div></li><li><p>将对构造函数求导，分析其单调性：</p><div class='full-math-div'>$$\begin{array}{l}F'(x) = g(x)f'(x) - f'(x)g(1)\\ = f'(x)[g(x) - g(1)]由于g'\left( x \right) \ge 0\\因此F'(x) \le 0\end{array}$$</div><p>得证。</p></li></ol><p><strong>例题16：</strong>设函数$f(x)$在$[ - \frac{1}{a},a]$上连续$(a>0)$,且$f(x) \ge 0$,$\int_{\frac{{ - 1}}{a}}^a {xf(x)dx}  = 0$，证明：$\int_{\frac{{ - 1}}{a}}^a {xf(x)dx}  \ge \int_{\frac{{ - 1}}{a}}^a {{x^2}f(x)dx} $**解题思路点：**1. 构造函数：<div class="full-math-div">$$\begin{array}{l}F(x) = (x + \frac{1}{a})(a - x)f(x)\\ = f(x) + (a - \frac{1}{a})xf(x) - {x^2}f(x)\end{array}$$</div>2. 对该构造函数进行积分：<div class="full-math-div">$$\begin{array}{l}\int_{\frac{{ - 1}}{a}}^a {F(x)dx}  = \int_{\frac{{ - 1}}{a}}^a {f(x)dx}  - \int_{\frac{{ - 1}}{a}}^a {{x^2}f(x)dx}  + (a - \frac{1}{a})\int_{\frac{{ - 1}}{a}}^a {xf(x)dx} \\F(x) \ge 0,\int_{\frac{{ - 1}}{a}}^a {xf(x)dx}  = 0,所以\\\int_{\frac{{ - 1}}{a}}^a {f(x)dx}  - \int_{\frac{{ - 1}}{a}}^a {{x^2}f(x)dx}  \ge {\rm{0}}\end{array}$$</div></p><p>得证。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://zh.wikimirror.org/wiki/%E6%9E%81%E9%99%90">极限和收敛</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://zh.wikimirror.org/wiki/%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95">数学归纳法</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://zh.wikimirror.org/wiki/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86">拉格朗日中值定理</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://zh.wikimirror.org/wiki/%E6%9F%AF%E8%A5%BF-%E6%96%BD%E7%93%A6%E8%8C%A8%E4%B8%8D%E7%AD%89%E5%BC%8F">柯西-施瓦兹不等式</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>考研笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给hexo博客添加PWA支持</title>
    <link href="/post/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0PWA%E6%94%AF%E6%8C%81/"/>
    <url>/post/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0PWA%E6%94%AF%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PWA(Progressive Web App)的中文名叫做渐进式网页应用，早在2014年， W3C 公布过 Service Worker 的相关草案，但是其在生产环境被 Chrome 支持是在 2015 年。因此，如果我们把 PWA 的关键技术之一 Service Worker 的出现作为 PWA 的诞生时间，那就应该是 2015 年。</p><p>自 2015 年以来，PWA 相关的技术不断升级优化，在用户体验和用户留存两方面都提供了非常好的解决方案。PWA 可以将 Web 和 App 各自的优势融合在一起：渐进式、可响应、可离线、实现类似 App 的交互、即时更新、安全、可以被搜索引擎检索、可推送、可安装、可链接。[1]</p><a id="more"></a><p>由于hexo为静态博客，因此不需要具备推送功能（其实是我没搞懂）。因此PWA的特性包括其渐进式、可离线，可以作为提高网站体验和提高网站家在速度的一个方法。因此下面将从其主要内容和hexo如何安装两个方面以“吃白饭的休伯利安号”为例来简单演示一遍安装过程。</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="渐进式"><a href="#渐进式" class="headerlink" title="渐进式"></a>渐进式</h3><p>什么是渐进式，即将传统的web应用，应用现代的技术和方法使之在能够有桌面应用一般的体验，即为渐进式web应用。渐进式web应用可以同时运行在传统的浏览器上，像普通的网站一样进行浏览和操作；其同时也可以运行在现代功能完善的浏览器中，可以使其具备更多的效果和功能。比较常见的有<strong>可安装</strong>，即在支持的浏览器和操作系统上可以生成访问图标，通过图标可以可桌面应用一样访问应用；<strong>消息推送</strong>，即访问应用时服务器端可以通过应用的后台进程主动向客户端推送消息，类似于桌面应用的消息队列。</p><h3 id="可离线"><a href="#可离线" class="headerlink" title="可离线"></a>可离线</h3><p>支持应用离线访问，即正常访问应用时，后台进程会自动缓存内容，下次访问时应用优先从缓存区读取数据，然后是进行web请求。因此可离线实质上充当了web代理服务器的职责，先是将正常请求代理到缓存区，再是将缓存区不足的文件进行正常的网络请求，通过此方法实现了离线的目标。根据可离线的规律，应用在一次访问缓存之后二次访问即可断网。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Web-app-manifest"><a href="#Web-app-manifest" class="headerlink" title="Web app manifest"></a>Web app manifest</h3><p>首先要实现PWA的可安装性，需要有一个清单文件<code>manifest.json</code>。<code>manifest.json</code>是一个简单的<code>json</code>文件，它描述了我们的图标在主屏幕上如何显示，以及图标点击进去的启动页是什么，自动生成<code>manifest.json</code>的工具：<a href="https://app-manifest.firebaseapp.com/">manifest.json生成工具</a>（需要梯子），本站的JSON格式如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;吃白饭的休伯利安号&quot;</span>,<br>  <span class="hljs-attr">&quot;short_name&quot;</span>: <span class="hljs-string">&quot;吃白饭博客&quot;</span>,<br>  <span class="hljs-attr">&quot;theme_color&quot;</span>: <span class="hljs-string">&quot;#3a311c&quot;</span>,<br>  <span class="hljs-attr">&quot;background_color&quot;</span>: <span class="hljs-string">&quot;#3a311c&quot;</span>,<br>  <span class="hljs-attr">&quot;display&quot;</span>: <span class="hljs-string">&quot;standalone&quot;</span>,<br>  <span class="hljs-attr">&quot;Scope&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>  <span class="hljs-attr">&quot;start_url&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>  <span class="hljs-attr">&quot;icons&quot;</span>: [<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-72x72.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;72x72&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-96x96.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;96x96&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-128x128.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;128x128&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-144x144.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;144x144&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-152x152.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;152x152&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-192x192.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;192x192&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-384x384.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;384x384&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">&quot;src&quot;</span>: <span class="hljs-string">&quot;/images/icons/icon-512x512.png&quot;</span>,<br>      <span class="hljs-attr">&quot;sizes&quot;</span>: <span class="hljs-string">&quot;512x512&quot;</span>,<br>      <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;image/png&quot;</span><br>    &#125;<br>  ],<br>  <span class="hljs-attr">&quot;splash_pages&quot;</span>: <span class="hljs-literal">null</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>其中：</p><blockquote><ul><li>start_url 可以设置启动网址</li><li>icons 可以设置各个分辨率下页面的图标，适配不同的尺寸的路径</li><li>background_color 会设置背景颜色， Chrome 在网络应用启动后会立即使用此颜色，这一颜色将保留在屏幕上，直至网络应用首次呈现为止。</li><li>theme_color 会设置主题颜色</li><li>display 设置启动样式</li></ul></blockquote><p>配置好<code>manifest.json</code>后进行调试，打开浏览器的控制台如下图所示，即文件配置成功。</p><p><img src="1.png" alt=""></p><h3 id="离线使用"><a href="#离线使用" class="headerlink" title="离线使用"></a>离线使用</h3><p>离线使用依赖<code>Service Work</code>，其本质是一段运行在并行于主进程的后台进程上，他不参与web交互功能，主要职责是和服务器交互，和指示缓存的内容。其详细的生命周期和原理文档详见：<a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Using Service Workers</a>。可以通过文档中的生命周期对这段后台脚本进行深度开发。</p><p>hexo为静态博客，因此只需要实现离线使用即可，不需要进行消息推送，因此可以使用固定服务注册脚本，在hexo中服务注册脚本有着专门的插件进行生成：</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">hexo-offline</td><td style="text-align:center">hexo-pwa</td><td style="text-align:center">hexo-service-worker</td></tr><tr><td style="text-align:center">hexo的离线插件不包括安装</td><td style="text-align:center">百度出的PWA综合插件，支持同时生成manifest.json，有很多的配置项</td><td style="text-align:center">和hexo-offline类似</td></tr></tbody></table></div><p>三个插件的原理相同，通过注册SW服务，配合<code>manifest.json</code>，文件达到<strong>可安装</strong>和<strong>可离线</strong>的功能，本站使用的是<code>hexo-service-worker</code>插件，下面是插件使用的细节：</p><ol><li>首先安装<code>hexo-service-worker</code>插件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-service-worker<br></code></pre></td></tr></table></figure><ol><li>在hexo的全局配置文件<code>config.yml</code>中添加配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># offline config passed to sw-precache.</span><br><span class="hljs-attr">service_worker:</span><br>  <span class="hljs-attr">maximumFileSizeToCacheInBytes:</span> <span class="hljs-number">5242880</span><br>  <span class="hljs-attr">staticFileGlobs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">public/index.html</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">public/img/favcion.png</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">public/manifest.json</span><br>  <span class="hljs-attr">stripPrefix:</span> <span class="hljs-string">public</span><br>  <span class="hljs-attr">verbose:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">runtimeCaching:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">urlPattern:</span> <span class="hljs-string">/**/*</span><br>      <span class="hljs-attr">handler:</span> <span class="hljs-string">cacheFirst</span><br>      <span class="hljs-attr">options:</span><br>        <span class="hljs-attr">origin:</span> <span class="hljs-string">eatrice.top</span><br></code></pre></td></tr></table></figure><p>其中</p><blockquote><ul><li>maximumFileSizeToCacheInBytes 为最大缓存大小，字节数</li><li>staticFileGlobs 关键的文件路径</li><li>stripPrefix 网站文件的根路径绝对位置</li><li>runtimeCaching 缓存选项</li><li>urlPattern 文件的正则匹配</li><li>handler 缓存模式</li><li>origin 网站访问域名(代理域名)</li></ul></blockquote><p>如此支持离线的PWA即配置成功。若要使用其他两个插件进行配置可以参考：</p><ul><li><a href="https://blog.naaln.com/2017/09/hexo-with-pwa/">hexo-offline插件配置</a></li><li><a href="http://wsyks.github.io/2018/12/17/hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AEPWA/#%E5%AE%89%E8%A3%85hexo-pwa">hexo-pwa插件配置</a></li></ul><p>然后执行生成发布。使用新版的chrome访问网站，打开控制台的<code>Audits</code>点击生成报告，就能看到网站是否支持PWA啦，如下图所示：</p><p><img src="2.png" alt=""></p><p>发布之后可以先访问一下网站的一些页面，然后就可以拿把大剪子网线访问你的网站啦~</p><p>关于消息推送，还没太搞明白其中的原理，自己的博客也用不到，所以就不仔细讨论啦。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1]: <a href="https://www.sysgeek.cn/progressive-web-apps/">什么是「渐进式 Web 应用」，PWA 应用程序解析</a></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性回归(二)-违背基本假设的情况和处理方法</title>
    <link href="/post/%E8%BF%9D%E8%83%8C%E5%9F%BA%E6%9C%AC%E5%81%87%E8%AE%BE%E7%9A%84%E6%83%85%E5%86%B5%E5%92%8C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <url>/post/%E8%BF%9D%E8%83%8C%E5%9F%BA%E6%9C%AC%E5%81%87%E8%AE%BE%E7%9A%84%E6%83%85%E5%86%B5%E5%92%8C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="基本假设"><a href="#基本假设" class="headerlink" title="基本假设"></a>基本假设</h2><p>由线性回归(一)<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="线性回归一-多元线性回归原理介绍- ">[1]</span></a></sup>，我们通过数学中的极值原理推导出了一元线性回归的参数估计和多元线性回归的参数估计的拟合方程计算方法。同时为了检验拟合质量，我们引入了两种主要检验：</p><ol><li>样本的显著性检验：若已知总体方差则可使用t检验等参数检验；若总体方差未知，则可以使用卡方检验等非参数检验</li><li>回归方程的检验：回归的显著性检验，对于回归参数采用t分布进行检验；对于回归方程采用F检验</li></ol><p>以上的检验方法均基于古典概型，同时在显著性检验的过程中默认了某些变量服从预先的基本假定，进而通过古典概型的检验方法，得到检验结果。</p><div class='alert alert-danger'>同其他大部分的学科一样，这些前提假设的作用主要是为了对问题进行简化。因此其一定是舍弃了一些复杂的问题没有考虑，对于现实中的实际问题来说，大部分的情况都是违背了基本假设的，因此为了得到更准确的回归模型就要对这些违背基本假设的情况进行处理，以确保模型的准确程度。</div><h3 id="基本假设的内容"><a href="#基本假设的内容" class="headerlink" title="基本假设的内容"></a>基本假设的内容</h3>由线性回归（一）中推导出的方程为：$Y = X\beta  + \varepsilon $，其中$\varepsilon$为随机误差项，其估计值为$e$，$e$为样本与模型的残差。<h4 id="随机误差项期望为0"><a href="#随机误差项期望为0" class="headerlink" title="随机误差项期望为0"></a>随机误差项期望为0</h4>前面提到评估拟合的质量可以使用$SSE$残差平方和来度量，同时模型得出的原则也是残差平方和最小。而残差为总体的随机误差项的估计值，且满足$\sum {{e_i}}  = 0$。因此在(一)中的模型有效性的前提是$\sum {{\varepsilon _i}}  = 0$，即随机误差项的期望等于0。而在实际的统计样本中，会有样本数量较小，或样本无法很好地代表整体等系统误差，而后导致样本残差不是随机误差项的无偏估计，就会对模型本身的精度产生影响。<h4 id="随机误差项的方差为常数，且等于样本方差"><a href="#随机误差项的方差为常数，且等于样本方差" class="headerlink" title="随机误差项的方差为常数，且等于样本方差"></a>随机误差项的方差为常数，且等于样本方差</h4>样本方差${S^2} = \frac{{\sum {{{({y_i} - \bar y)}^2}} }}{{n - 1}}$为总E体方差的无偏估计，由$SST=SSR+SSE$，其中SSR为离差平方和，为常数。SSE为残差平方和，可以得到，残差平方和的方差与总离差平方和SST相等，因此在使用样本估计整体时也需要保证样本方差与总体方差相同，即随机误差项的方差是常数，且等于样本方差。否则，参数估计和方程的显著性将会大受影响。<h4 id="随机误差项和因变量中不存在自相关"><a href="#随机误差项和因变量中不存在自相关" class="headerlink" title="随机误差项和因变量中不存在自相关"></a>随机误差项和因变量中不存在自相关</h4><p>首先对于因变量来说，若因变量自相关，即因变量的某个值由其前一项或多项的值决定，则因变量的变化与自变量无关。因此对自相关因变量使用自变量进行线性拟合没有意义，需用其自相关关系导出其递推关系。</p><p>随机误差项为实际值与估计值的差值，线性回归得出的线性模型，其随机误差项的自相关反映的是样本的自相关，因此随机误差项不能存在自相关的情况。</p><h4 id="随机误差项服从正态分布"><a href="#随机误差项服从正态分布" class="headerlink" title="随机误差项服从正态分布"></a>随机误差项服从正态分布</h4><p>所有的参数检验都基于切比雪夫大数定律，其检验变量和参数如t参数F参数等，都属于标准化后的正态分布参数。在对回归方程进行显著性检验时使用的t分布和F分布均是基于残差服从正态分布且期望和方差满足上文假设等前提假设进行检验，进行显著性检验时要保证检验的结果可信，则要保证其检验参数严格满足正态分布。</p><h4 id="自变量的观测值为常数，且不存在精确的线性关系"><a href="#自变量的观测值为常数，且不存在精确的线性关系" class="headerlink" title="自变量的观测值为常数，且不存在精确的线性关系"></a>自变量的观测值为常数，且不存在精确的线性关系</h4><p>对于参与线性回归的自变量来说，其值必须保证为常数，不能为随机变量。将随机变量做为预测的依据会造成结果毫无意义，同样的，对于分布没有规律或没有具体含义的变量同样不能作为线性回归的自变量。</p><p>对于自变量来说，多元线性回归中使用到了自变量矩阵，参数估计过程中有一步需要对该自变量矩阵转置相乘，而后计算逆矩阵。由于矩阵的行秩等于列秩，因此若自变量矩阵中存在线性相关的行或列，则经过转置相乘最后得出的矩阵必然存在线性相关的行或列，对于非满秩的矩阵在实数层面上无法求逆矩阵，因此在计算中要避免自变量中存在线性相关。</p><p>实际情况中两个变量相关程度很大，但其自变量矩阵并不是精确相关，这样得出的矩阵可以计算逆矩阵，但相关程度较大的行或列对应的特征值接近于0，即对吼计算得出的参数往往会忽略该相似分布。由此两个自变量存在高度相关时，就需要将其从自变量矩阵中消除。</p><h2 id="违背基本假设的处理"><a href="#违背基本假设的处理" class="headerlink" title="违背基本假设的处理"></a>违背基本假设的处理</h2><h3 id="随机误差项方差为异方差"><a href="#随机误差项方差为异方差" class="headerlink" title="随机误差项方差为异方差"></a>随机误差项方差为异方差</h3><h4 id="从一元线性回归讲起"><a href="#从一元线性回归讲起" class="headerlink" title="从一元线性回归讲起"></a>从一元线性回归讲起</h4>一元线性回归方程的主要形式为：$y = {\beta _0} + {\beta _{\rm{1}}}x + \varepsilon $其中随机误差项的估计值为$e_i$<br /><br />在极大似然估计得到的方程中有$y = e + \hat y = e + {{\hat \beta }_0} + {{\hat \beta }_{\rm{1}}}x$，其中样本y的方程等于残差方差加估计方差。样本y的方差为定值，且满足$\sigma _y^2 = \frac{{{S^2}(n - 1)}}{n}$，而残差方差要尽可能满足等于样本方差，则需要控制控制样本自变量方差。如何判断该方程中的随机误差项为常数呢？需要进行检验。<h4 id="异方差的检验"><a href="#异方差的检验" class="headerlink" title="异方差的检验"></a>异方差的检验</h4><p><strong>残差图直接观察:</strong> 绘制残差关于自变量的散点图，若残差均匀离散地分布在零线两侧则方差较为显著。若残差呈现一定趋势和规律，则说明残差方差为异方差，因为其变化趋势受自变量影响，其值在统计学上不能认为为常数。如下图所示：</p><p><img src="1.png" alt=""></p><p><strong>等级相关系数法：</strong>斯皮尔曼检验（spearman）</p><ol> 做$y$关于$x$的线性回归，计算$\varepsilon $的估计值${e_i} = {y_i} - {{\hat y}_i}$</ol><br /><ol> 将自变量$x_i$与$e_i$按升序或降序的规则排列，按照排列顺序相同等级的自变量和残差计算等级离差${d_i} = {x_i} - |{e_i}|$</ol><br /><ol> 计算等级相关系数${r_s} = 1 - \frac{6}{{n*({n^2} - 1)}}\sum {d_i^2} $，由方程可见，当残差和自变量等级变化趋势完全拟合时，相关系数等于1。若$d_i$差异较大时，则$r_s$越小。查阅资料得，等级相关系数的期望等于0，方程为$1-{r_s}^2$。</ol><br /><ol> 根据其期望和方差构造$t$统计量，$t = \frac{{\sqrt {n - 2} }}{{\sqrt {1 - r_S^2} }}{r_S}$。可以选择相应的置信区间进行单侧检验。若检验通过则认为随机误差项的方差等于常数，否则存在异方差的问题。</ol><br /><h4 id="异方差的消除"><a href="#异方差的消除" class="headerlink" title="异方差的消除"></a>异方差的消除</h4><p>随机误差项方差，通常与自变量的方差同步，要保持因变量$\hat y$的估计值保持稳定，则其自变量和随机误差项需要同步离散。因此为了减少随机误差项的方差，可以通过调节自变量的方差进行处理。</p><p><strong>加权最小二乘：</strong></p><p>加权最小二乘的原理是通过调整自变量其在回归方程中所占的比例实现方差调整。对于多元线性回归来说，若某个单一影响因素的方差较大，可以通过降低其的权重来减少其对于整体估计值的影响。对于一元线性回归来说，通过调整其中的每个变量的权重，以达到调整总体方差的目的。</p>对于单因素的权重估算公式为：${\omega _i} = \frac{1}{{x_i^m}}$其中$m$的值可自由选择，直至选出拟合结果最好的一组解。经过加权变换后的样本数据为：<br />$$\begin{array}{l}{x_{\omega i}} = {\omega _i}{x_i}\\{y_{\omega i}} = {y_i}\\{{\bar x}_\omega } = \frac{{\sum {{\omega _i}{x_i}} }}{{\sum {{\omega _i}} }}\\{{\bar y}_\omega } = \frac{{\sum {{\omega _i}{y_i}} }}{{\sum {{\omega _i}} }}\end{array}$$<br />最小二乘参数估计的导出公式为：<br />$$\left\{ {\begin{array}{*{20}{c}}{{{\hat \beta }_{\omega 0}} = {{\bar y}_\omega } - {{\hat \beta }_{w1}}{{\bar x}_\omega }}\\{{{\hat \beta }_{w1}} = \frac{{\sum {{w_i}({x_i} - {{\bar x}_\omega })({y_i} - {{\bar y}_\omega })} }}{{\sum {{w_i}{{({x_i} - {{\bar x}_\omega })}^2}} }}}\end{array}} \right.$$<br />计算得到基于加权系数法的最小二乘公式结果：$y = {{\hat \beta }_{\omega 0}} + {{\hat \beta }_{\omega 1}}x$<p>在计算完毕后，需要重新对拟合方程运用等级系数法进行检验，以消除异方差问题。在这个检验过程中唯一的改变量为计算权重系数时的m。因此可以对m的取值进行多次尝试，以随机误差项的方差显著性为目标函数，得到最优的权重系数拟合方程。</p><h3 id="自相关的检验和处理"><a href="#自相关的检验和处理" class="headerlink" title="自相关的检验和处理"></a>自相关的检验和处理</h3><p>回归模型中的自相关是指，随机误差项的自相关系数不等于0，即随机误差项前后存在一定关系。按照前面的推论，若随机误差项存在自相关，则表明因变量本身也存在一定的自相关，即变量在很大程度上是由该变量先前的取值确定，而受自变量的影响较小。若一个自变量因变量的取值关系中，存在显著的自相关现象，那么对该关系进行线性拟合将会毫无意义。</p><h4 id="自相关的检验方法"><a href="#自相关的检验方法" class="headerlink" title="自相关的检验方法"></a>自相关的检验方法</h4><p><strong>图示检验法：</strong></p><p>计算随机误差项的估计值：残差，并绘制${e_t},{e_{t - 1}}$的散点图。若散点大部分落在二、四象限，则表明随机误差项$\varepsilon $存在负自相关；若大部分的点落在一、三象限，则表明其存在正自相关。</p><p><strong>自相关系数检验法：</strong></p><p>类似于协方差的计算方法，对于自相关可以采用自相关系数计算法进行自相关程度计算。计算公式为：</p>$$\rho  = \frac{{\sum {{\varepsilon _t}{\varepsilon _{t - 1}}} }}{{\sqrt {\sum {{\varepsilon _t}^2} \sum {\varepsilon _{t - 1}^2} } }}$$其中$t \ge 2$。<p>若要计算自相关系数的估计值，则可以使用前后残差进行计算。由公式可以得到，当残差前后相同时，其相关系数值接近1；若残差前后相反时，接近-1。该系数同协方差相关系数检验类似，当系数接近1时，表明其呈正相关关系；当系数接近-1时，表明其呈负相关关系。</p><p><strong>DW检验法（重点）</strong></p><p>DW检验法适用于小样本的一阶的自回归检验方法。</p>假设随机误差项存在着如下递推关系${\varepsilon _t} = \rho {\varepsilon _{t - 1}} + {u_t}$。<br />若变量不存在自相关，则应不满足该自相关关系，即${H_0}:\rho  \ne 0$。<br />由于该递推关系为线性递推关系，因此很容通过矩阵估计计算递推关系中低次项的系数。根据改递推系数$\rho$构造构造DW统计量。<br />$$DW = \frac{{\sum {{{({e_t} - {e_{t - 1}})}^2}} }}{{\sum {e_t^2} }} \approx 2(1 - \hat \rho )$$<p><strong>查附录</strong>提供的DW检验表，得到$D_L, D_U$：</p><div class="table-container"><table><thead><tr><th style="text-align:center">$\rho$</th><th style="text-align:center">DW</th><th style="text-align:center">自相关性</th></tr></thead><tbody><tr><td style="text-align:center">-1</td><td style="text-align:center">4</td><td style="text-align:center">完全负相关</td></tr><tr><td style="text-align:center">(-1, 0)</td><td style="text-align:center">(2, 4)</td><td style="text-align:center">负自相关</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">无自相关</td></tr><tr><td style="text-align:center">(0, 1)</td><td style="text-align:center">(0, 2)</td><td style="text-align:center">正相关</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">完全正相关</td></tr></tbody></table></div><p>获得$D_L,D_U$可以通过DW与$D_L,D_U$的关系来判断自相关程度。</p><p>当$DW &lt; {D_L}$时，则变量存在正相关<br>当${D_L} &lt; DW &lt; {D_U}$时，则不能判断是否有相关性<br>当${D_U} &lt; DW &lt; 4 - {D_U}$时，不存在自相关<br>当$4 - {D_U} &lt; DW &lt; 4 - {D_L}$不能判定其相关性<br>当$4 - {D_L} &lt; DW$时，则变量存在负相关</p><div class='alert alert-success'>可以通过以上两种方法初步检验变量的自相关特性。</div><h4 id="消除自相关的方法"><a href="#消除自相关的方法" class="headerlink" title="消除自相关的方法"></a>消除自相关的方法</h4><p><strong>迭代法：</strong></p><p>按照之前推导的过程，若随机误差满足自相关，则其满足${\varepsilon _t} = \rho {\varepsilon _{t - 1}} + {u_t}$递推关系。<br>因此可以通过去除自相关部分，而保留随机误差部分以消除自相关的问题。</p><p>在上式中，${\varepsilon _t},\rho $均为自相关的参量，则保留$u_t$以消除自相关的影响。将现有的变量进行处理，在参数检验的过程中我们会得到一个参数值$\hat {\rho}$，将该估计值代入递推公式得到${u_t} = {\varepsilon _t} - \hat {\rho} *{\varepsilon _{t - 1}}$，如此保留随机项，去除自相关项。</p><p>同理，对其他需要估计的可能自相关参数做同样处理：</p><div class='full-math-div'>$$\begin{array}{l}({y_t} - \hat \rho *{y_{t - 1}}) = ({\beta _0} - \hat \rho {\beta _0}) + {\beta _1}({x_t} - \hat \rho {x_{t - 1}}) + ({\varepsilon _t} - \hat \rho {\varepsilon _{t - 1}})\\ =  > {y_t}' = {\beta _0}' + {\beta _1}'{x_t}' + {u_t}\end{array}$$</div><p>这样得到了对自相关变量做一定处理后的线性回归方程。该方程的样本数量比原方程需要计算的样本数量少一个，原因是其样本来自原样本相邻项的差。</p><p>在经过变换后，仍需对变换后的变量进行DW检验，直至其满足DW检验的不存在自相关性为止。之后将样本计算回归方程，然后将原原变量依次进行还原，即能得到原原回归方程（不一定是线性了）</p><p><strong>差分法：</strong></p><p>其变换公式同迭代法，原理是当$\hat \rho = 1$时，通过差分数据来拟合方程。</p>$$\begin{array}{l}令：\Delta y = {y_t} - {y_{t - 1}}\\\Delta x = {x_t} - {x_{t - 1}}\\{\rm{ =  > }}\Delta y{\rm{ = }}{\beta _{\rm{0}}}{\rm{ + }}{\beta _{\rm{1}}}\Delta x\end{array}$$参数的估计公式为：${{\hat \beta }_{\rm{0}}} = 0,{{\hat \beta }_1} = \frac{{\sum {\Delta {x_i}\Delta {y_i}} }}{{\sum {\Delta x_i^2} }}$<p><strong>BOX-COX变换法：</strong></p><p>该变换方法适用于异方差和自相关问题。其主要原理为：</p><ol> 将因变量做一定的变换：${y^{(\lambda )}} = \left\{ {\begin{array}{*{20}{c}}{\frac{{{y^\lambda } - 1}}{\lambda },\lambda  \ne 0}\\{\ln y,\lambda  = 0}\end{array}} \right.$</ol><br />同异方差消除的权重系数法一样，其计算系数需要通过实验得出。选取不同的系数值，并计算最终结果，根据模型质量评价指标来评估模型的优略，而后得到适用性较好的系数的值。<br />该变换需满足$y$的取值全为正值，若不满足全为正值，则需要对y进行平移操作，使用$y'=y+a$来代替$y$，以达到该方法的使用要求。<br />变换后的因变量服从${Y^{(\lambda )}}\~{N_n}(X\beta ,{\sigma ^2}I)$，变换之后的分布能够得到：该变换消除异方差，和自相关的影响。<br /><ol> 应用极大似然估计法进行求解：</ol><br /><div class='full-math-div'>$$\begin{array}{l}{L_{\max }}(\lambda ) = {(2\pi e\hat \sigma _\lambda ^2)^{ - \frac{n}{2}}}|J|\\其中：\hat \sigma _\lambda ^2 = \frac{1}{n}SSE(\lambda ,{y^{(\lambda )}}),|J| = \prod {|\frac{{dy_i^{(\lambda )}}}{{d{y_i}}}|}  = \prod {y_i^{\lambda  - 1}} \\令：{z^{(\lambda )}} = \frac{{{y^{(\lambda )}}}}{{|J|}}\end{array}$$</div><br />对${L_{\max }}(\lambda )$求对数可得：$\ln {L_{\max }}(\lambda ) =  - \frac{n}{2}\ln SSE(\lambda ,{z^{(\lambda )}})$<br />通过MLE求解可以得到该变换方法的较优$\lambda $值。<p>在进行消除自相关和异方差可以使用BOX-COX方法进行处理，选取合适的系数值进行变换后，求得回归方程。同时仍要对计算得到的回归方程计算等级相关系数和自相关检验，检验通过后才能获得结论，否则需要重新调整系数计算。使用伪代码的表示如下。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>)<br>  调整变换系数$\lambda$的值，将因变量进行`BOX_CDX`变换;<br>  计算变换后的回归方程;<br>  将回归方程还原成原始数据的方程（不一定是线性关系）;<br>  计算残差，对残差进行等级相关系数检验和自相关检验;<br>  若检验通过则跳出循环，返回回归方程;<br>  若检验不通过则重新进入循环;<br>end <span class="hljs-keyword">while</span><br></code></pre></td></tr></table></figure><h3 id="异常值的检查与消除"><a href="#异常值的检查与消除" class="headerlink" title="异常值的检查与消除"></a>异常值的检查与消除</h3><p>异常值是指与取值群体偏差较大的部分取值，其产生原因一般来自记录时产生的误差、记录的变量为随机变量（无法控制取值）、缺少重要的自变量和观测数据等产生的误差。</p><p>该误差会使得模型偏离较大，对回归模型得可信度和准确度存在很大的影响。</p><h4 id="异常值得判定"><a href="#异常值得判定" class="headerlink" title="异常值得判定"></a>异常值得判定</h4><p>根据<strong>正态分布得显著性检验原理和中心化思想</strong>可得，当分布中得某个元素偏离中心越远，其分布概率越小。当小概率事件发生的时候，可以很显然表现出数据存在异常值。即概括来看，异常值即为小概率发生值，由于其对中心偏离甚远，因此会极大影响回归拟合的精确度。</p><h5 id="异常值的常见情况和消除方法"><a href="#异常值的常见情况和消除方法" class="headerlink" title="异常值的常见情况和消除方法"></a>异常值的常见情况和消除方法</h5><p><strong>因变量Y异常</strong>，如下图的序列所示</p><p><img src="2.png" alt=""></p><p>很明显图中有一点相当出类拔萃，若将此点代入回归方程的参数估计计算公式中，直接导致因变量或自变量的方差增大，造成异方差。因此需要对异常值进行处理或消除。</p><p><strong>消除方法：</strong></p><ol>对残差进行标准化，即$ZR{E_i} = \frac{{{e_i}}}{{\hat \sigma }}$。该标准化的目的是统一残差的偏离程度，即标准化后的样本方差等于1，减少异方差的影响</ol><br /><ol>删除偏离较大的残差，若样本数量足够，可以在一定程度上通过删除该异常值来达到忽略异常情况对拟合质量的影响。</ol><br /><ol>学生化残差，$SR{E_i} = \frac{{{e_i}}}{{\sigma \sqrt {1 - {h_{ii}}} }}$，其中$h_{ii}$为帽子矩阵<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="帽子矩阵- ">[2]</span></a></sup>主对角线上的元素，帽子矩阵计算：$H = X{({X^T}X)^{ - 1}}{X^T}$。其主对角线上的元素为变量Y与自变量X期望的偏离程度。</ol><br /><ol>删除学生化残差：学生化残差之后，残差的分布即变成：$e\~N(0,1)$，其满足正态分布，按照正态分布的中心化原则，当学生化的残差$e_t$的绝对值大于3时，可以将该残差进行删除。</ol><br /><p><strong>自变量X异常</strong></p><p>自变量异常的检验：</p><ol>当帽子矩阵对应杠杆值的$h_{ii}$较大时，可认为当前自变量X取值与因变量取值受影响较大，当杠杆值大于2倍或3倍的平均值${\bar h}$时，可认为该值异常。</ol><br /><ol>计算库克距离：${D_i} = \frac{{e_i^2}}{{(n + 1){{\hat \sigma }^2}}}*\frac{{{h_{ii}}}}{{{{{\rm{(1 - }}{h_{ii}}{\rm{)}}}^{\rm{2}}}}}$，库克距离反映的是残差和杠杆值的综合效应，当库克距离越小，表明值的偏差越小。因此取库克值小于0.5认为非异常值，值大于1认为为异常值，即${D_i}{\rm{ < 0}}{\rm{.5}}$非异常，${D_i}{\rm{ > 1}}$异常值。</ol><br /><p>自变量X的异常处理同Y变量异常处理相同，将异常值删去即可。</p><h2 id="多元线性回归下的自变量选择与处理"><a href="#多元线性回归下的自变量选择与处理" class="headerlink" title="多元线性回归下的自变量选择与处理"></a>多元线性回归下的自变量选择与处理</h2><p>实际情况中，一个变量的取值不仅仅只受单一因素的影响。当一个变量受两个或以上的因素影响时，可以使用多元线性回归进行处理。不同的因素对于目标函数的影响程度各不相同，同时影响因素之间也可能存在相互关系，因此为了保证回归模型所选择的自变量合理，以保证最终的回归方程显著。需要对方程的影响因素做筛选，即对自变量进行选择和处理</p><h3 id="自变量选择方法和影响"><a href="#自变量选择方法和影响" class="headerlink" title="自变量选择方法和影响"></a>自变量选择方法和影响</h3>在线性回归（一）中提到了多元线性回归的参数估计计算方程为：$\beta {\rm{ = (}}{X^T}X)'{X^T}Y$。由参数估计的原理可以得到估计的参数方差估计值为：${{\hat \sigma }_{\beta i}}{\rm{ = }}\frac{{\rm{1}}}{{n - m - 1}}SS{E_i}$。其中m为影响因素的数量，i为第i个估计的参数。<p>若在选择因素时放开了某些因素：</p><ol><li>最后的计算得到的参数估计值的方差为有偏估计</li><li>部分因素的选择模型方差会小于全因素模型的方差</li></ol><h3 id="自变量选择的评价指标"><a href="#自变量选择的评价指标" class="headerlink" title="自变量选择的评价指标"></a>自变量选择的评价指标</h3><p>在线性回归(一)中,回归函数拟合的依据按照残差平方和最小原则，即SSE最小；同时通过皮尔逊相关系数检验来检验原始数据是否符合线性相关；和拟合的结果和原始数据之间是否存在强相关的关系。</p><p>如果实际自变量之间存在多重共线性等问题，通过这两个系数反映的特征仍不完全，引入了一个<strong>调整决定系数</strong>。在进行自变量的选择时受到影响的主要是回归方程的自由度，同时因为选取的自变量的数目差异导致的随机误差项方差变化业主要受自由度的影响。因此对于需要对自由度进行系数调整；调整复决定系数的计算方进行系数调整；</p>调整复决定系数的计算方法：$adj{R^2} = 1 - \frac{{n - 1}}{{n - p - 1}}(1 - {R^2})$从计算公式中可以得出，当自变量的自由度增加时调整系数减小，即其对回归结果的贡献减小。因此，控制调整系数的大小，可以大概把握合理的方程自由度。<strong>赤池信息量（Akaike Information Criterion）</strong>是一个基于极大似然估计原理的模型选择准则<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="数学模型-参数估计和显著性- ">[3]</span></a></sup>。其计算公式为：$AIC =  - 2\ln L({{\hat \theta }_L},x) + 2p$其中$\ln L({{\hat \theta }_L},x)$为似然函数，$p$为自变量选择的数量。其中似然函数也可以改写为：$n\ln L(SSE)$。赤池信息量同时考虑了似然函数和方程维数，而残差平方和与维数的关系不确定，因此需要找到一个平衡位置以确保赤池信息量达到最小。该统计量确定最优与消除异方差的权重系数的计算和消除自相关的$BOX_CDX$变换一样，需要计算多个值，从中选出最满足条件的结果。<br /><strong>统计量$C_p$</strong>与赤池信息量的评估原理相同，其计算公式为：<br />$$\begin{array}{l}{C_p} = \frac{{SS{E_p}}}{{{{\hat \sigma }^2}}} - n + 2p\\ = (n - m - 1)\frac{{SS{E_p}}}{{SS{E_m}}} - n + 2p\end{array}$$<br />其中$SSE_p$为当前选择的的部分自变量回归模型的残差平方和，$SSE_m$为考虑所有自变量计算的残差平方和。同样确保该统计量最小得到最优。<h3 id="自变量的选择方式"><a href="#自变量的选择方式" class="headerlink" title="自变量的选择方式"></a>自变量的选择方式</h3><p>当自变量存在${x_1},{x_2},{x_3},{x_4},{x_5},{x_6}…$，等数量较多的自变量时，无法通过对这些自变量排列组合，然后分别计算对应组合下的残差平方和，相关系数，赤池信息量，$C_p$等统计量时，然后对组合进行对比得出最优组合时。需要通过一些更加高效的方法来遍历这些自变量信息。下面推荐两种自变量的遍历方法。</p><p>若直接采用所有自变量的排列组合形式，若有m个自变量类型，则其全部组合的数量为：$C_m^1 + C_m^2 + … + C_m^m$</p><p><strong>前进法</strong></p><ol><li>先对所有的单变量因素进行拟合，然后根据拟合结果计算上述4个统计量，得到效果最好的一个变量；</li><li>考虑上一步增加的变量，在剩余变量中选取一个与当前选取变量组合，计算所有的组合情况，并选出最优组合与先前组合进行了比较，若更优则选取，若更差则放弃；</li><li>考虑上一步增加的变量，再次在剩余变量中选取并组合，计算组合情况选择最优，并与与上次组合结果比较优劣；</li><li>循环第3步，直到遍历变量全部完成或当优化程度下降时停止，得到最优组合。</li></ol><p><strong>说明：</strong></p><p>若自变量包括${x_1},{x_2},{x_3},{x_4},{x_5},{x_6}…$，分析计算$y(x_1),y(x_2)…$若此时$y(x_{t1})$的拟合效果最好进行步骤2；<br>即分析计算$y(x_{t1}, x_1), y(x_{t1}, x_2),…$找到最优组合并于第一步计算得到的结果进行对比，若更优则继续循环，若更差则停止循环。</p><p><strong>后退法</strong></p><p>与前进法相反</p><ol><li>先将所有的因素进行分析计算，保存四个统计量</li><li>删除其中一个变量的影响因素，并对进行分析计算，找出删除一个自变量的最优组合，并于先前组合进行对比。若结果更好则继续，若更差则停止。</li><li>循环第2步直到自变量数量为一，或删除变量结果变坏为止。</li></ol><p>在对前进法和后退法进行优化检验时，除了使用四个统计量依据进行模型评估。还可以使用线性回归（一）中提到的回归方程的显著性检验进行检验，即F检验。</p><p>当采用前进法时，当F检验计算得到的概率大于置信概率接受原假设，方程显著，添加变量。</p><p>使用后退法进行F检验时，当检验结果概率小于置信概率，拒绝原假设，方程不显著，剔除当前变量。</p><p>由变量的检验方法和计算过程可得，当变量被剔除后，若被剔除的变量不全为0时会增加随机误差项的方差，因此在使用前进法或后退法进行变量选择时，可适当保留一些非最优分支进行计算，以减少该方法产生的异方差影响。</p><h2 id="多重共线性的处理"><a href="#多重共线性的处理" class="headerlink" title="多重共线性的处理"></a>多重共线性的处理</h2><p>多重共线性指的是不同的自变量之间本身存在显著的线性关系，即为开头讲到的自变量存在精确的线性关系。由于自变量存在精确的线性关系，若其中一个自变量对因变量的影响显著，则其他具有精确线性关系的自变量对因变量作用的效果也相同，这就导致在做多元线性回归时无法计算存在精确线性关系的自变量的系数。</p><h3 id="多重共线性的检测和处理"><a href="#多重共线性的检测和处理" class="headerlink" title="多重共线性的检测和处理"></a>多重共线性的检测和处理</h3><p>为了确保精确线性关系被筛选出来，需要对多重共线性进行检验，下面详细介绍皮尔逊相关系数法、方差扩大因子法和特征根判定法。</p><h4 id="皮尔逊相关系数检验法"><a href="#皮尔逊相关系数检验法" class="headerlink" title="皮尔逊相关系数检验法"></a>皮尔逊相关系数检验法</h4>自变量的检测与自变量和因变量的线性相关检测相同，通过对$x_1, x_2$变量直接计算相关系数，然后给相关系数设定一个临界值，根据临界值与相关系数之间的关系进行判断。相关系数的计算公式为：$\rho  = \frac{{\sum {({x_{1i}} - {{\bar x}_1})({x_{2i}} - {{\bar x}_2})} }}{{\sqrt {\sum {{{({x_{1i}} - {{\bar x}_1})}^2}} *\sum {{{({x_{2i}} - {{\bar x}_2})}^2}} } }}$。<p>同时可以通过直观判定来辅助检验：</p><ol><li>添加或删除一个变量，回归系数的估计值发生很大变化，可认为存在多重共线性。因为多重共线性的参数会叠加到其他共线变量的参数上。</li><li>一些自变量在方程的显著性检验中未通过检验，可初步判定存在严重的多重共线性。</li></ol><h4 id="方差扩大因子法VIF"><a href="#方差扩大因子法VIF" class="headerlink" title="方差扩大因子法VIF"></a>方差扩大因子法VIF</h4><p>对自变量进行相关系数检验涉及到两个自变量相互检验，即有序数对。</p><p>对所有的变量列表计算可以得到所有变量的相关性矩阵，如下所示：</p>$${R_{p \times p}} = \left[ {\begin{array}{*{20}{c}}{r11}&{r12}&{...}&{r1p}\\{r21}&{r22}&{...}&{r2p}\\{...}&{...}&{...}&{...}\\{rp1}&{rp2}&{...}&{rpp}\end{array}} \right]$$<p>其中p为自变量数量，rij为第i个自变量与第j个自变量的相关系数计算值。</p><p>对相关矩阵进行标准化之后<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="标准化和归一化- ">[4]</span></a></sup>，其主对角线上的元素即为方差膨胀因子。令：$C = {({(R<em>)^T}R</em>)^{ - 1}}$<br>其中$R*$为相关矩阵的伴随矩阵。VIF为矩阵$C$的主对角线上的元素。</p>$$\begin{array}{l}VI{F_j} = \frac{1}{{1 - {R_j}^2}}\\\bar V\bar I\bar F = \frac{1}{p}VI{F_j}\end{array}$$<p>其中</p><p>$$为矩阵上第i个主对角线上的元素对应得复决定系数</p>复决定系数计算公式为:$adj{R^2} = 1 - \frac{{n - 1}}{{n - p - 1}}(1 - {R^2})$，其中${R^2}$为C矩阵对应对角线的上元素<br /><br />$VIF_j$为膨胀因子。$\bar V\bar I\bar F$为平均膨胀因子。当膨胀银子大于10或平均膨胀因子大于1时，可认为自变量之间存在严重的线性关系，即存在多重共线性。<h4 id="特征根判定法"><a href="#特征根判定法" class="headerlink" title="特征根判定法"></a>特征根判定法</h4>对矩阵${X^T}X$求解特征值，若有特征值趋近于0，则表明其中存在多重共线性，近似于0的特征根的个数等于多重线性的重数。引入条件数${k_i} = \sqrt {\frac{{{\lambda _m}}}{{{\lambda _i}}}} $来度量特征根的离散程度。当$k \in (0,10)$，不存在多重共线性<br />当$k \in (10,100)$，存在较强的多重共线性<br />当$k \in [100,\infty )$，存在严重的多重共线性<br /><h4 id="多重共线性的处理-1"><a href="#多重共线性的处理-1" class="headerlink" title="多重共线性的处理"></a>多重共线性的处理</h4><p>若自变量之间存在多重共线性时，可以通过剔除共线的变量或增加样本量来解决多重共线性问题。</p><h2 id="多元线性回归的优化方法"><a href="#多元线性回归的优化方法" class="headerlink" title="多元线性回归的优化方法"></a>多元线性回归的优化方法</h2><p>在实际情况下，多元线性回归的很多前提假设不能成立，因此可以在一定程度上对多元线性回归方法进行改良。改良的实质是牺牲某些信息或精度为代价，使得模型的表现更实际、更可靠</p><h3 id="岭回归"><a href="#岭回归" class="headerlink" title="岭回归"></a>岭回归</h3><p>岭回归估计是基于最小二乘估计，通过改变自变量矩阵X标准化后的矩阵，来改变最终的回归结果。</p>对于多元线性回归有参数的估计公式：$\hat \beta  = ({X^T}X)'{X^T}Y$岭回归对这部分的参数进行处理，得到$\hat \beta (k) = ({X^T}X + kI)'{X^T}Y$其中$\hat \beta (k)$叫做岭回归参数，$k$为岭参数，当$k=0$时，岭回归等价于最小二乘回归。由岭回归的计算公式可知，参数$\hat \beta (k)$是关于岭参数的函数，其取值同k连续或离散。由于其由k决定，因此岭回归的主要目标是选择一个合适岭参数k来使得模型更加有效。首先可以对不同取值的k，作$\hat \beta (k)$关于k的函数图像，该函数图像称为<strong>岭迹</strong>，常见的岭迹如下图所示：<p><img src="3.png" alt=""></p><p><strong>岭参数确定依据：</strong></p><ol><li>各回归系数的岭迹基本稳定</li><li>回归系数的符号合理</li><li>取岭迹的平稳拐点</li><li>方差扩大因子法，使得所有的膨胀系数小于10</li><li>通过残差平方和最小确定k值</li></ol><h3 id="LASSO回归-lt-span-class-”hint—top-hint—rounded”-aria-label-”LASSO回归法"><a href="#LASSO回归-lt-span-class-”hint—top-hint—rounded”-aria-label-”LASSO回归法" class="headerlink" title="LASSO回归&lt;span class=”hint—top hint—rounded” aria-label=”LASSO回归法-"></a>LASSO回归<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote">&lt;span class=”hint—top hint—rounded” aria-label=”LASSO回归法-</h3><p>“&gt;[5]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;</p><p>LASSO是一种压缩估计，通过构造一个惩罚函数(L1范数)，得到一个较为精炼的模型。</p>惩罚函数的构造方法为：$L = {\left| {\left| {\beta X - Y} \right|} \right|^2} + \lambda {\left| {\left| \beta  \right|} \right|_1}$惩罚函数对估计参数求偏导：$\frac{{\partial L}}{{\partial \beta }}{\rm{ = }}{X^T}(Y - X\hat \beta ) + \frac{{\partial (\lambda {{\left| {\left| \beta  \right|} \right|}_1})}}{{\partial \beta }}$得到LASSO回归的参数计算公式：${{\hat \beta }_j} = sign(\frac{1}{n}{X^T}Y){(\left| {\frac{1}{n}{X^T}Y} \right| - \frac{\lambda }{2})_ + }$<p>LASSO回归的计算公式相当复杂，一般通过坐标下降法<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="坐标下降法- ">[6]</span></a></sup>进行迭代求解，或使用最小角回归法<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="最小角回归">[7]</span></a></sup>。进行计算求解。</p><h2 id="附表"><a href="#附表" class="headerlink" title="附表"></a>附表</h2><p><a href="统计量检索表.pdf">统计量检索表.pdf</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://eatrice.top/post/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%8E%A8%E5%AF%BC%E5%92%8C%E8%AF%AF%E5%B7%AE%E5%A4%84%E7%90%86/">线性回归一-多元线性回归原理介绍</a><br>-<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E5%B8%BD%E5%AD%90%E7%9F%A9%E9%98%B5">帽子矩阵</a><br>-<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://eatrice.top/post/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7/">数学模型-参数估计和显著性</a><br>-<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://www.zhihu.com/question/20467170">标准化和归一化</a><br>-<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://www.cnblogs.com/pinard/p/6018889.html">LASSO回归法</a><br>-<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/59734411">坐标下降法</a><br>-<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://keson96.github.io/2016/10/26/2016-10-26-Least-Angle-Regression/">最小角回归</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section></li></ul>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>数学</tag>
      
      <tag>数学模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性回归(一)-多元线性回归原理介绍</title>
    <link href="/post/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%8E%A8%E5%AF%BC%E5%92%8C%E8%AF%AF%E5%B7%AE%E5%A4%84%E7%90%86/"/>
    <url>/post/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%8E%A8%E5%AF%BC%E5%92%8C%E8%AF%AF%E5%B7%AE%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>高中的数学必修三有一个概念——线性拟合，其主要原理是通过对两组变量的统计值模型化。高中的的模型主要是简单的一维线性模型，在某种程度上也可以叫做一次函数，即$y = kx + b$的形式。这是一个简单的线性拟合，可以处理两组变量的变化趋势呈现相当的线性规律的问题，且关于因变量只有一个自变量。实际情况下，对于一个目标函数进行估计，其影响因素可能会有多个，且各个因素对于结果的影响程度各不相同。若多个变量的的取值与目标函数取值仍呈现线性关系，则可以使用多元线性回归进行建模预测。本文将从一元线性回归推广到多元线性回归。并通过统计学的显著性检验和误差分析从原理上探究多元线性回归方法，以及该方法的性质和适用条件。</p><a id="more"></a><h2 id="多元线性回归理论"><a href="#多元线性回归理论" class="headerlink" title="多元线性回归理论"></a>多元线性回归理论</h2><h3 id="从一元线性回归讲起"><a href="#从一元线性回归讲起" class="headerlink" title="从一元线性回归讲起"></a>从一元线性回归讲起</h3><p>假设有一个分布列，如下表所示：</p><div class="table-container"><table><thead><tr><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th></tr></thead><tbody><tr><td style="text-align:center">Y</td><td style="text-align:center">6.7</td><td style="text-align:center">7.2</td><td style="text-align:center">10.3</td><td style="text-align:center">12.4</td><td style="text-align:center">15.1</td><td style="text-align:center">17.6</td><td style="text-align:center">19.4</td><td style="text-align:center">21.3</td><td style="text-align:center">24.0</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">343.4</td><td style="text-align:center">477.6</td><td style="text-align:center">739.1</td><td style="text-align:center">1373.9</td><td style="text-align:center">1510.2</td><td style="text-align:center">1700.6</td><td style="text-align:center">2026.6</td><td style="text-align:center">2577.4</td><td style="text-align:center">3496.2</td></tr></tbody></table></div><p>我们绘制它的函数图像，如下图所示</p><p><img src="1.jpg" alt=""></p><p>由散点图可以明显看出变量x和y具有相同的变化趋势，其函数图像较为符合一次函数特征，因此我们尝试用一次函数$y = {\beta _0} + {\beta _1}x$来进行拟合。</p><p>拟合本质上是通过函数表达式来粗略得到样本的变化趋势，而预测是通过拟合出来的表达式来估计总体的值，这就需要得出的模型（表达式）不仅能够很好地模拟样本的变化趋势，同时也能够反映总体的相关变化，即避免样本的偶然性。下面将从拟合的方法和样本的对于总体的显著性来分析回归过程和效果。</p><h4 id="拟合的依据"><a href="#拟合的依据" class="headerlink" title="拟合的依据"></a>拟合的依据</h4><p>由上面的一次函数的表达式可以看出，该函数具有两个待求参数${\beta _0},{\beta _1}$，因此拟合的过程其本质上是对这两个参数进行估计。根据题目现有的条件，得到两个参数的最佳的值。</p>模型的作用是用来预测，即根据已知的关系，推导出未知的类似关系。假设经过拟合后的最优参数为：${{\hat \beta }_0},{{\hat \beta }_1}$。这通过这两个参数表示的一次函数能够很好地表现这两组数据。在统计学上由拟合的一次函数$\hat y = {\hat \beta _0} + {\hat \beta _1}x$代入x的取值计算得出的$\hat y$叫做因变量y的估计值。实际值与估计值的差${e_i} = {y_i} - {{\hat y}_i}$叫做<strong>残差</strong>，其绝对值的大小是反映拟合值与真实值的误差大小，因此可以通过使用残差去掉符号取平方和，就构成了一个能够描述线性拟合效果的统计量称为$SSE$<strong>残差平方和</strong>$\sum {{{({y_i} - {{\hat y}_i})}^2}} $。由此可见当$SSE$的取到最小值时，此时的估计的参数${{\hat \beta }_0},{{\hat \beta }_1}$为最优参数。#### 找到最优参数假定${\beta _0},{\beta _1}$是一个连续函数，构造函数：$$\begin{array}{l}L({x_1},{x_2},...,{x_n}|{{\hat \beta }_0},{{\hat \beta }_1}) = \\\sum {{{[{y_i} - ({{\hat \beta }_0} + {{\hat \beta }_1}x)]}^2}} \end{array}$$<br />由$x_i$已知，将${\beta _0},{\beta _1}$当作自变量，当${\beta _0},{\beta _1} = {{\hat \beta }_0},{{\hat \beta }_1}$时，当目标函数取最大|最小值时，目标函数对自变量的导数值为0。即：<br />$$\begin{array}{l}\frac{{\partial L}}{{\partial {\beta _0}}} = 0\\\frac{{\partial L}}{{\partial {\beta _1}}} = 0\end{array}$$<br /><div class='full-math-div'>$$\begin{array}{l}①\frac{{\partial L}}{{\partial {\beta _0}}} = \sum { - 2*[{y_i} - ({\beta _0} + {\beta _1}{x_i})]}  =  - 2n[\bar y - ({\beta _0} + {\beta _1}\bar x)] = 0\\②\frac{{\partial L}}{{\partial {\beta _1}}} = \sum { - 2{x_i}*[{y_i} - ({\beta _0} + {\beta _1}{x_i})]}  =  - 2\sum {{x_i}{y_i} - {x_i}{\beta _0} - {\beta _1}x_i^2}  = 0\end{array}$$<br />由①得=>$③{\beta _0} = \bar y - {\beta _1}\bar x$把③代入②得=>$\frac{{\partial L}}{{\partial {\beta _1}}}{\rm{ = }} - 2\sum {{x_i}{y_i} - {x_i}\bar y + {\beta _1}{x_i}\bar x - {\beta _1}x_i^2}  = 0$<br />解出：${{\hat \beta }_1} = \frac{{\sum {{x_i}{y_i}}  - n\bar x\bar y}}{{\sum {x_i^2}  - n\bar x\bar x}}$然后得到${{\hat \beta }_0} = \bar y - {{\hat \beta }_1}\bar x$</div>至此，根据残差平方和最小原理，我们应用数学的极限性质，计算得出了关于两组数据$X,Y$的线性拟合方程。对于不同的统计量来说，其变化趋势是不同的，那么一元线性回归可以应用到哪些方面呢？#### 线性拟合的显著性一组数据，我们绘制它的对应的统计图，就可以很清楚地看到它的两个量的变化关系。这种变化关系称为两个变量具有某种关系的**显著性**。两组变量的关系有很多种，如：线性关系，函数关系等等。由最上面的统计图可以看出，两个变量的变化趋势相同，且平均变化趋势也相似，我们可以直观从图中得到其可能能够使用线性函数进行拟合。大多数情况下，对于绘图不便或者数据是动态生成，无法及时分析其图像的情况下，如何进行检验？**相关系数r**在统计学上最简单的方法就是采用相关系数$r$来检验两组变量的相关性程度。下面引用一段维基百科中的表述：> <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="皮尔逊积矩相关系数">[1]</span></a></sup>皮尔逊积矩相关系数（英语：Pearson product-moment correlation coefficient，又称作 PPMCC或PCCs, 文章中常用r或Pearson's r表示）用于度量两个变量X和Y之间的相关程度（线性相关），其值介于-1与1之间。在自然科学领域中，该系数广泛用于度量两个变量之间的线性相关程度。它是由卡尔·皮尔逊从弗朗西斯·高尔顿在19世纪80年代提出的一个相似却又稍有不同的想法演变而来，这个相关系数也称作“皮尔森相关系数r”。<div class='full-math-div'>$$~r = \frac{{Cov(X,Y)}}{{\sqrt {{\mathop{\rm var}} (X){\mathop{\rm var}} (Y)} }}$$<br />式中：$Cov(X,Y)$为变量X和变量Y的协方差，$var(X),Var(Y)$分别为X和Y的方差。<p>&lt;/div&gt;</p><p><strong>协方差Cov：</strong></p><div class='full-math-div'>协方差表示的两个变量总体误差的期望，其数学定义为表示为：$Cov(X,Y) = E((X - E(X))(Y - E(Y))) = \frac{1}{n}\sum {({x_i} - \bar x)({y_i} - \bar y)} $化繁成直观形式得：</div>$$\begin{array}{l}E((X - EX)(Y - EY))\\ = E(XY - YEX - XEY + EXEY)\\\because E(YEX) = E(XEY) = EXEY\\\therefore 、text{原式}= EXY - EXEY\\= \frac{1}{n}\sum {{x_i}{y_i}}  - \bar x\bar y\end{array}$$<p><strong>方差：</strong></p><div class='full-math-div'>方差表示单个变量对均值偏差平方的期望，是描述变量变化的离散程度的指标，其数学定义表示为：${\mathop{\rm var}} (X) = E({(X - EX)^2}) = \frac{1}{n}\sum {{{({x_i} - \bar x)}^2}} $化繁成直观形式得：</div>$$\begin{array}{l}E({(X - EX)^2})\\ = E({X^2} - 2XEX + {(EX)^2})\\\because E(XEX) = {(EX)^2}\\\therefore \text{原式} = E({X^2}) - {(EX)^2}\\= \frac{1}{n}\sum {x_i^2}  - {{\bar x}^2}\end{array}$$<br />相关系数的取值范围为：$[-1, 1]$，根据相关系数的数学特性可以得出，当$r=\pm 1$的时候，两个样本完全相关，即协方差等于等于其变量方差积的1/2次方，当相关系数$r=0$表示，两个样本没有相关关系。同理，该相关系数也可以用来检验<strong>拟合程度</strong>：<br />根据模型$\hat y = {{\hat \beta }_0} + {{\hat \beta }_1}x$将相应的$x_i$代入，可以得到一组$\hat y_i$预测值，将实际值与预测值计算相关系数，若$r = 1$则说明预测值与实际值一一对应，具有很高的相关程度；若$r$较小，则说明模型的质量较差，不能很好地模拟变量的趋势走向。##### 线性回归的局限性和适用性并且，对于相关系数的表达式，其表示的是两组数据关于其平均数的离散程度。也就是说，相关系数只能够比较两组数据的变化趋势是否相同，如果要比较预测值$\hat y_i$与实际值$y_i$的的大小拟合程度，还需比较两组数据的平均值大小关系，若两组变量的相关系数较大（>0.85），且两组变量的均值相等，可通过该相关系数初步判断其具有相关关系。当然，基于样本去预测其总体，该预测方法准确度受限于样本本身的分布是否能够很好地代表总体的分布，即同方差，同均值等。考虑以上的限制条件，可以得到线性回归的模型有效要求产生模型的样本要对总体能够具有代表性，样本和总体要满足均值和方差相等的同分布的的正态分布。即$\bar y = \mu ,{S^2} = {\sigma ^2}$，其中${\bar y},\mu ~$分别为样本均值和总体均值，${S^2},~{\sigma ^2}$分别为样本方差和总体方差。##### 样本对于总体的显著性由相关系数的表达式可以看出，该相关系数的计算基于有限的样本。而我们如果使用该模型进行总体上的预测的话——预测样本中不包含的结果，需要对样本是否具有代表性进行显著性检验，即这些样本能否在具有一定的统计概率的前提下我们能够相信这些通过对样本进行线性拟合所预测出来的结果在总体上具有普遍性。如果样本显著性高，则表明有很大的概率去相信可以通过样本在一定程度上预测总体的发展趋势；若显著性低，则说明该样本具有很大的偶然性，不能通过其结果来预测总体。假定我们对于模型有两种处理方式1. 接受模型2. 拒绝模型同时样本对于总体也有两种情况3. 样本能很好反应总体4. 样本很扯淡对于1和3，2和4的组合，站在上帝视角来看，做法都是对的。但如果2和3组合，即模型可能是正确的，而我们拒绝了模型，发生这种情况会有一个概率$p = \alpha$，称之为犯第一类错误的概率。第一类错误发生的原因很大程度上是对样本的不信任导致的，即样本能够反映总体的概率为$1-\alpha$但如果1和4组合，即模型很可能是错的，而我们接受了模型，发生这种情况会有一个概率$p = 1-\beta$，称之为犯第二类错误的概率，第二类错误发生的原因主要是由于样本不能很好反应总体，而我们却信任样本导致的。即样本靠谱的概率为$\beta$ ps:感觉会比我靠谱些。<br />而我们一般在求出了模型之后，并不会主动去拒绝它，因此在线性回归中主要是要避免第二类错误的发生，即控制$\beta$处在一个较高的概率状态下进行计算，<del>如果样本本身不靠谱的话计算个屁！</del><br />目前来看，样本都是已知的，而总体是未知的，所以我们就要~~闭着眼睛瞎检验~~想过一种方法进行检验。我们可以尝试知道总体的一些统计量，比如总体均值$\mu $，总体方差${\sigma ^2}$这样我们才能有判断样本和总体的依据，如果啥都没有，那就放弃吧。<br />目前依据已经学过的统计学检验方法，对于总体满足正态分布的情况下可以使用参数检验如**t检验**进行显著性检验，若总体分布不满足正态分布则可以使用非参数检验比如**F检验**进行显著性检验。**t检验**为了降低犯第二类错误的概率，我们为t检验选取一个拒绝域$\alpha$，一般选取0.05作为置信区间，进行t分布检验。判断样本分布是否与总体分布相同可以根据方差和样本均值以及总体均值来判断样本均值与总体均值是否存在显著性差异，即原假设为：$\bar y = \mu $；备择假设为：$\bar y \ne \mu $若样本均值与总体均值有超过95%的概率无显著差异，在统计学上可以忽略小概率事件，而接受原假设。下面是t检验的方法<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="假设检验和参数检验">[2]</span></a></sup>：<br />对于<strong>总体方差已知的情况</strong>，即${\sigma ^2}$已知，则可以检验统计量$t = \frac{{\bar y - \mu }}{\sigma }\sqrt n $由正态分布的性质可得，t满足$ t~N(0,1) $，要满足有95%的概率保证原假设成立。根据正态分布的特性，如果是单侧检验，需要当$ t > {t_{\frac{\alpha }{2}}}(n) $时，拒绝原假设。可以<strong>查附表1</strong>得到当置信概率为$\alpha$且样本数为$n$时的t分布的最大值，当实际计算的t值小于该最大值时即可在犯错误概率不大于0.05时接受原假设；如果是双侧检验，则t可接受置信区间为$ [ {t_{\frac{\alpha }{2}}}(n),{t_{\frac{\alpha }{2}}}(n)] $。对应于本例子要求样本方差等于总体方差，属于双侧检验。<br />方差已知的t检验计算公式为：$t = \frac{{\bar y - \mu }}{\sigma }\sqrt n $<br /><strong>若方差未知的情况</strong>，需要使用总体方差${\sigma ^2}$的无偏估计量样本方差$S^2$来计算t统计量，此时t仍服从$t~N(0,1)$分布。可通过**查附表**得到得到当置信概率为$\alpha$且样本数为$n-1$时的t分布的最大值。对于单侧检验或侧检验的置信区间的控制方法同方差已知的情形。控制区间为$[ - {t_{\frac{\alpha }{2}}}(n - 1),{t_{\frac{\alpha }{2}}}(n - 1)]$<br />方差未知的t检验计算公式为：$t = \frac{{\bar y - \mu }}{S}\sqrt n $<br /><p><strong>F检验</strong></p><p>对于总体分布不满足正态分布的显著性检验可以采用非参数检验，这里详细介绍卡方检验${\chi ^2}$卡方检验是检验实际值（样本）与理论值（总体）偏离程度的重要方法。如果卡方值越大，其偏离程度越大，若卡方值等于0，则说明总体和样本完全吻合<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="卡方检验">[3]</span></a></sup>。</p><p>假设样本均值与总体均值相同，即原假设为：$\bar y = \mu $<br>进行卡方检验需要知道总体在样本对应点的期望${{\bar y}_i}$，将样本中的每一个点进行如下运算：${e_i} = |{y_i} - {{\hat y}_i}|/{{\hat y}_i}$，最后将每个点残差$e_i$求和即得到相应的卡方值<strong>查附表</strong>得到显著水平为$\alpha = 0.05$自由度为$n-1$卡方检验临界值。若实际求得的卡方值小于临界值，则说明差异不显著，接受原假设。表明样本均值与总体均值有超过95%的概率无显著差异。#### 模型方程的显著性当样本能够在一定程度上有效地代表整体时，我们还需要对最后拟合模型的结果进行显著性检验，以确保得出的模型能够很好地反映样本的变化规律。对于一次函数的线性回归模型，我们需要检验回归得到的系数是否显著，同时要检验回归得到的方程是否显著。##### 回归系数的检验一次函数线性回归方程中有两个回归参数：${{\hat \beta }_0},{{\hat \beta }_1}$，由于${{\hat \beta }_0}$由${{\hat \beta }_1}$所决定，因此只需要对${{\hat \beta }_1}$进行检验。${{\hat \beta }_1}$为线性方程的斜率，对线性方程的斜率检验即是对变量X,Y是否满足线性关系，即原假设$H_0: {{\hat \beta }_1} = 0$。要得到${{\hat \beta }_1 \ne 0}$则需要对实际值{y_i}，与模型方程计算得到的期望值${{\hat y}_i} = {{\hat \beta }_0} + {{\hat \beta }_1}{x_i}$进行显著性检验，若两者的差异显著性较大，则接受原假设，若无显著差异，则应拒绝原假设。<br />由${{\hat \beta }_{1i}} = \frac{{{y_i} - \bar y}}{{{x_i} - \bar x}}$，因此${\hat \beta }~N(0,\sqrt {\frac{{\sum {{{({y_i} - \bar y)}^2}} }}{{\sum {{{({x_i} - \bar x)}^2}} }}} ~)$该分布的方差分子为总离差平方和$SST$，下部为自变量的总离差平方和，简写作$L_{xx}$。<br />构造t检验统计量：$t = \frac{{{{\hat \beta }_1}}}{{\sqrt {\frac{{SST}}{{{L_{xx}}}}} }}\sqrt {n - 2} $，则t统计量服从$t~N(0,1)$<br /><strong>查附表</strong>得到置信区间为$\alpha$自由度为$n-2$的临界值$[ - {t_{\frac{\alpha }{2}}}(n - 2),{t_{\frac{\alpha }{2}}}(n - 2)]$。若求得的t统计量不在置信区间内，则可以拒绝原假设，即通过回归系数的t检验，回归系数是显著的，X和Y存在线性关系。</p><h5 id="回归方程的检验"><a href="#回归方程的检验" class="headerlink" title="回归方程的检验"></a>回归方程的检验</h5><div class='full-math-div'>总离差平方和为${\sum {{{({y_i} - \bar y)}^2}} }$，该平方和描述了样本数据的离散程度，且是一个常数。其可以分解为：<br />$$\begin{array}{l}\sum {{{({y_i} - \bar y)}^2}}  = \sum {{{({y_i} - \hat y + \hat y - \bar y)}^2}} \\ = \sum {{{({y_i} - \hat y)}^2}}  + \sum {{{(\hat y - \bar y)}^2}}  + 2\sum {({y_i} - \hat y)(\hat y - \bar y)} \\ = \sum {{{({y_i} - \hat y)}^2}}  + \sum {{{(\hat y - \bar y)}^2}} \end{array}$$</div>由于$SST$是常数，则，当回归平方和$SSR$越大时，残差平方和$SSE$越小<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="数学模型-参数估计和显著性">[4]</span></a></sup>，即模型越精确。<br />对回归方程得检验仍是检验估计参数的显著性，假设原假设$H_0: {\hat \beta _1} \ne 0$。<br />把模型预测的结果当作一个新的样本，回归方程的显著性检验即是对预测样本与实际样本的显著性检验。构造统计量F$$~F = \frac{{SSR/k - 1}}{{SSE/T - k}}$$其中k为回归系数个数，T为样本个数。计算统计量F。$查附表$得到置信区间为$\alpha$自由度为$T-K$所对应的$p$值，若$p<\alpha$则可拒绝原假设，即回归方程显著。<div class='alert alert-success'><strong>总结</strong><br />对于一元线性回归来说，首先需要求根据残差平方和的取值最小来估计回归参数。<br />由于样本存在偶然性，所以为了减少第二类误差发生的概率，需要对样本进行显著性检验；<br />为了减少第一类错误发生的概率，需要进行回归显著性检验。<br />总体计算一元线性回归模型并验证其有效性的过程结束。</div><h3 id="多元线性回归"><a href="#多元线性回归" class="headerlink" title="多元线性回归"></a>多元线性回归</h3><p>问题引入：如果一个变量受多个因素影响该如何计算呢？<br>公式描述：<br />$$\left\{ {\begin{array}{*{20}{c}}{{y_1} = {\beta _0} + {\beta _1}{x_{11}} + {\beta _2}{x_{12}} + ...{\beta _p}{x_{1p}} + {\varepsilon _1}}\\{{y_2} = {\beta _0} + {\beta _1}{x_{21}} + {\beta _2}{x_{22}} + ...{\beta _p}{x_{2p}} + {\varepsilon _2}}\\{{y_3} = {\beta _0} + {\beta _1}{x_{31}} + {\beta _2}{x_{32}} + ...{\beta _p}{x_{3p}} + {\varepsilon _3}}\\ \vdots \\{{y_n} = {\beta _0} + {\beta _1}{x_{n1}} + {\beta _2}{x_{n2}} + ...{\beta _p}{x_{np}} + {\varepsilon _1}}\end{array}} \right.~$$<br />令：<br />$$\begin{array}{l}Y = \left[ {\begin{array}{*{20}{c}}{{y_1}}\\{{y_2}}\\{{y_2}}\\ \vdots \\{{y_n}}\end{array}} \right],\beta  = \left[ {\begin{array}{*{20}{c}}{{\beta _0}}\\{{\beta _1}}\\{{\beta _2}}\\ \vdots \\{{\beta _p}}\end{array}} \right],\varepsilon  = \left[ {\begin{array}{*{20}{c}}{{\varepsilon _0}}\\{{\varepsilon _1}}\\{{\varepsilon _2}}\\ \vdots \\{{\varepsilon _n}}\end{array}} \right]\\X = \left[ {\begin{array}{*{20}{c}}1&{{x_{11}}}&{{x_{12}}}& \cdots &{{x_{1p}}}\\1&{{x_{21}}}&{{x_{22}}}& \cdots &{{x_{2p}}}\\1&{{x_{31}}}&{{x_{32}}}& \cdots &{{x_{3p}}}\\ \vdots & \vdots & \vdots & \ddots & \vdots \\1&{{x_{n1}}}&{{x_{n2}}}& \cdots &{{x_{np}}}\end{array}} \right]\end{array}$$<br />则原方程可表示为：$Y=X\beta + \varepsilon$</p><p>解决思路：</p><ol><li>检查影响因素的取值中是否有线性相关，即剔除$X$系数矩阵中的线性相关的列，即剔除多余影响因素。</li><li>先根据一元线性回归拟合的依据计算多元拟合的依据，</li><li>对样本进行显著性检验</li><li>对回归方程进行显著性检验</li></ol><h4 id="拟合"><a href="#拟合" class="headerlink" title="拟合"></a>拟合</h4>构造参数估计函数$L(X|\beta ) = \sum {{{(Y - X\beta )}^2}} $<br />对该函数进行求导：$\frac{{\partial L}}{{\partial \beta }} =  - 2{X^T}(Y - X\beta ) = 0$<br />对结果进行处理：${X^T}(Y - X\beta ) = {X^T}Y - {X^T}X\beta  = 0$，得出$ =  > \beta  = ({X^T}X)'{X^T}Y$<br /><br /><div class='alert alert-danger'>在求导计算之前一定要将线性相关列清楚，否则无法对${X^T}X$求逆矩阵。</div><h4 id="拟合的显著性"><a href="#拟合的显著性" class="headerlink" title="拟合的显著性"></a>拟合的显著性</h4><p>样本的显著性检验同一元线性回归的显著性拟合方法相同，这里不多赘述。</p><h4 id="回归方程的显著性"><a href="#回归方程的显著性" class="headerlink" title="回归方程的显著性"></a>回归方程的显著性</h4>首先需要对每个单个回归系数进行t检验，以确保他们每个都能够保证支持原假设成立，否则对于接受了原假设的某个参数$\beta _i$需要将其对应的X矩阵中的列清楚，重新拟合多项式。需要注意的是此时$\beta _i$服从${\beta _j}N(0,\frac{{\sum {({y_i} - } \bar y{)^2}}}{{\sum {({x_{ij}} - } {{\bar x}_i}{)^2}}})$<br />对于回归方程的检验可直接通过F检验，构造SSR和SSE变量，进行F检验。需要注意的是，使用此方法时的样本数量一定要大于x自变量的数量。否则一定有线性相关的列向量。<br /><h2 id="附表"><a href="#附表" class="headerlink" title="附表"></a>附表</h2><p><a href="统计量检索表.pdf">统计量检索表.pdf</a></p><p>点击统计检索表即可下载该表，该表综合了t检验和卡方检验对应的临界值，同时也有F检验对应的概率p。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li></li><li></li><li></li><li><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/%E7%9A%AE%E5%B0%94%E9%80%8A%E7%A7%AF%E7%9F%A9%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0">皮尔逊积矩相关系数</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www2.edu-edu.com.cn/lesson_crs78/self/j_4183/soft/ch0802.html">假设检验和参数检验</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C">卡方检验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://eatrice.top/post/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7/">数学模型-参数估计和显著性</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section></li></ul>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>数学</tag>
      
      <tag>数学模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数学模型-参数估计和显著性</title>
    <link href="/post/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7/"/>
    <url>/post/%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="参数估计"><a href="#参数估计" class="headerlink" title="参数估计"></a>参数估计</h2><h3 id="极大似然估计-MLE"><a href="#极大似然估计-MLE" class="headerlink" title="极大似然估计(MLE)"></a>极大似然估计(MLE)</h3><p><strong>极大似然估计(Maxinum Likelihood Estimation):</strong>利用总体的分布密度或概率分布的表达式及其样本所提供的信息求未知参数估计量的一种方法.</p><p><strong>模型已定,参数未知</strong>即利用已知样本的结果,去反推既定模型中的参数最可能的取值.</p><p>出现当前情形的概率为:</p><div class='full-math-div'>$$f({x_1},{x_2},...,{x_n}{\rm{|}}\theta {\rm{) = }}f({x_1}|\theta )f({x_2}|\theta )...f({x_n}|\theta ),{\theta }未知$$</div>称其为似然函数$L$<div class='full-math-div'>$$\begin{array}{l}L(\theta |{x_1},{x_2},...,{x_n}) = f({x_1},{x_2},...,{x_n}{\rm{|}}\theta )\\ = \prod {\begin{array}{*{20}{c}}{\begin{array}{*{20}{c}}n\\{i = 1}\end{array}}&{f({x_i}|\theta )}\end{array}} \end{array}$$</div><div class='full-math-div'>$$令\hat l = \frac{1}{n}\ln L(\theta |{x_1},{x_2},...,{x_n})\\则{{\hat \theta }_{MLE}} = \arg \mathop {\max }\limits_{\theta  \in \Theta } \hat l$$ </div><h3 id="最大似然估计-LSE"><a href="#最大似然估计-LSE" class="headerlink" title="最大似然估计(LSE)"></a>最大似然估计(LSE)</h3>总体$X$为连续型分布,其分布密度族为$\{ f(x,\theta ),\theta  \in \Theta \} $,假设总体$X$的一个独立同分布的样本为${x_1},{x_2},...,{x_n}$,其似然函数为: $L(\theta |{x_1},{x_2},...,{x_n})$.最大似然估计应在一切$\theta$中选取随机样本(${X_1},{X_2},...,{X_n}$)落在点(${x_1},{x_2},...,{x_n}$)附近概率最大的${\hat \theta }$作为$\theta$的估计值.<p><strong>对于一元线性回归方程</strong></p>假设${\varepsilon _i}\text{~}N(0,{\sigma ^2})$$,则有${y_i}\text{~}N({\beta _0},{\beta _1}{x_i},{\sigma ^2})$<div class='full-math-div'>$$\begin{array}{l}{y_i}{\rm{:}}的概率密度函数为:\\{f_i}({y_i}) = \frac{1}{{\sqrt {2\pi } \sigma }}{e^{\{  - \frac{{{{[{y_i} - ({\beta _0} + {\beta _1}{x_i})]}^2}}}{{2{\sigma ^2}}}\} }}\\其似然函数为:\\L({\beta _0},{\beta _1},{\sigma ^2}) = \prod\limits_{i = 1}^n {{f_i}({y_i}) = {{(2\pi {\sigma ^2})}^{\frac{n}{2}}}{e^{\sum {\{  - \frac{{{{[{y_i} - ({\beta _0} + {\beta _1}{x_i})]}^2}}}{{2{\sigma ^2}}}\} } }}} \\ =  > \mathop {\min }\limits_{{\beta _0},{\beta _1}} \sum {{{[{y_i} - ({\beta _0} + {\beta _1}{x_i})]}^2}} \\ 对于一元线性回归,MSE和LSE是等价的.\\求{\sigma ^2}的估计值:\\{\sigma ^2} = \frac{1}{n}\sum {{{[{y_i} - ({{\hat \beta }_0} + {{\hat \beta }_1}{x_i})]}^2}} \\其无偏估计量:\\{\sigma ^2} = \frac{1}{{n - 2}}\sum {{{[{y_i} - ({{\hat \beta }_0} + {{\hat \beta }_1}{x_i})]}^2}}\\\end{array}\\$$</div><h3 id="有偏估计和无偏估计"><a href="#有偏估计和无偏估计" class="headerlink" title="有偏估计和无偏估计"></a>有偏估计和无偏估计</h3><p><strong>无偏估计(Unbiased Estimate):</strong>用样本来估计总体参数时的一种无偏推断,估计量的数学期望等于估计量的真实值$E(\hat \theta ) = \theta $.换言之,在对某量进行估计时,针对不同的样本,估计结果对真实值来说有的偏大有的偏小,反复多次.”平均”来说,和真实值的偏差为0,反之即为有偏估计(Biased Estimate).无偏估计无系统性偏差,有偏估计有系统性偏差.</p><div class='full-math-div'>$$\begin{array}{l}E({\overline X ^2}) = V{(\overline X )^2} + E{(\overline X )^2} = V(\frac{{\sum {{X_i}} }}{n}) + E{(\overline X )^2}\\ = \frac{{\sum {V({X_i})} }}{{{n^2}}} + E{(X)^2} = \frac{1}{n}{\sigma ^2} + {\mu ^2}\\E(\zeta ) = E[\frac{1}{n}{\sum {({X_i} - \overline X )} ^2}] = E[X_i^2] - E[{\overline X ^2}]\\ = {\sigma ^2} + {\mu ^2} - (\frac{1}{n}{\sigma ^2} + {\mu ^2}) = \frac{{n - 1}}{n}{\sigma ^2}\\E({S^2}) = E[\frac{1}{{n - 1}}\sum {{{({X_i} - \overline X )}^2}} ]\\ = \frac{1}{{n - 1}}\sum {[E(X_i^2) - E{{(\overline X )}^2}]} \\ = \frac{1}{{n - 1}}[E(X_i^2) - E{(\overline X )^2}] = {\sigma ^2}\\样本方程{S^2}是总体方差的无偏估计量\end{array}$$</div><h2 id="显著性检验"><a href="#显著性检验" class="headerlink" title="显著性检验"></a>显著性检验</h2><h3 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a>t检验</h3><p>检验因变量y与自变量x之间是否存在线性关系,即${\beta _{\rm{1}}}$是否等于0,使用$t$检验进行判断。</p><strong>确定假设：</strong>我们搜集数据是为了找到不达标的证据，即原假设${H_0}:{\beta _1} = 0$,备择假设${H_0}:{\beta _1} \ne 0$<br /><strong>确定检验水平：</strong>采取常用的$\alpha = 0.05$或者是更严格的$\alpha = 0.01$<br /><strong>构造统计量：</strong>${H_0}$成立时：$\hat \beta \text{~}N(0,\frac{{{\sigma ^2}}}{{{L_{xx}}}})$，构造$t$统计量:$t = \frac{{\hat \beta }}{{\sqrt {{\partial ^2}/{L_{xx}}} }} = \frac{{\hat \beta }}{{\sqrt {\frac{1}{{n - 2}}\sum {{{({y_i} - {{\hat y}_i})}^2}} } }}\sqrt {{L_{xx}}} $<br /><strong>得到p值:</strong>计算$t$统计量,符合自由度$n-2$的$t$分布,双尾检测,查临界值表,找到$p$值.<br /><strong>得到结论:</strong>p值若大于$ \alpha$值,不能拒绝原假设,即通过本次采样得到的样本数据,并不能证明原假设$H_0$不成立,即本次得到的回归系数${{\beta}_1}$无显著的统计意义,需要重新建模.<br /><strong>总离差平方和(Sum of Squares for Total)</strong><br />$$\sum {{{({y_i} - \bar y)}^2}} $$<strong>残差平方和(Sum of Squares for Error)</strong><br />$$\sum {{{({y_i} - {{\hat y}_i})}^2}} $$<strong>回归平方和(Sum of Squares for Regression)</strong><br />$$\sum {{{({{\hat y}_i} - \bar y)}^2}} $$$ SST = SSE + SSR $<h3 id="F检验"><a href="#F检验" class="headerlink" title="F检验"></a>F检验</h3><p>F检验是根据平方和分解式,直接从回归效果检验回归方程的显著性.由平方和分解式可得到SSR越大,回归效果越好,据此构造F统计量。</p>$$\begin{array}{l}MSR = \frac{{SSR}}{{k - 1}}\\MSE = \frac{{SSE}}{{T - k}}\\F = \frac{{MSR}}{{MSE}}\end{array}$$<h3 id="相关系数显著性检验"><a href="#相关系数显著性检验" class="headerlink" title="相关系数显著性检验"></a>相关系数显著性检验</h3><p><strong>相关系数</strong>由卡尔·皮尔逊的统计指标，描述了了变量之间线性相关程度的量，一般用字母r表示，有多种定义方式，一般指皮尔逊相关系数。</p><div class = 'full-math-div'>$$r(X,Y) = \frac{{Cov(X,Y)}}{{\sqrt {{\mathop{\rm var}} (X){\mathop{\rm var}} (Y)} }}$$$r$的取值范围$[-1, 1]$，r>0表示正相关，r<0表示负相关,r = 0表示不相关。<p>在抽样验证前需要排除抽样误差。</p><strong>确定检验水平：</strong>采取较为严格的$\alpha = 0.01$<br /><strong>计算统计量：</strong>计算$t$统计量,原假设$H_0$成立，$t = \frac{{\sqrt {n - 2r} }}{{\sqrt {1 - {r^2}} }}$<br /><strong>计算p值：</strong>先计算$t$值，再根据$t$值查表.<br /><h3 id="决定系数"><a href="#决定系数" class="headerlink" title="决定系数"></a>决定系数</h3><p>通过平方和分解式$ SST = SSR + SSE $,$SSR$占的比重越大,线性回归效果越好.定义回归平方和占总离差平方和的比例为决定系数(Coefficient of Determination),也称确定系数,,记作$r^2$</p>$${r^2} = \frac{{SSR}}{{SST}} = \frac{{\sum {{{({{\hat y}_i} - \bar y)}^2}} }}{{\sum {{{({y_i} - \bar y)}^2}} }}$$<div class='alert alert-warning'><ol>样本较小时,需要调整决定系数</ol><br /><ol>决定系数较大,同样也不能肯定自变量与因变量之间的关系就是线性的,可能曲线拟合更好,特别当自变量取值范围较小时,决定系数通常较大,可以做模型失拟检验.</ol><br /><ol>决定系数较小,如果样本量较小,则得到线性回归不显著的结果.如果样本量较大,则会得到线性回归显著;最后改进回归,儒增加自变量、尝试曲线回归拟合等</ol><br /></div><h3 id="残差分析"><a href="#残差分析" class="headerlink" title="残差分析"></a>残差分析</h3><p>真实值与回归拟合值的差，叫做<strong>残差</strong><br>${e_i} = {y_i} - {\hat y_i}$残差平方和：$\sum {e_i^2}  = \sum {{{({y_i} - {{\hat \beta }_0} - {{\hat \beta }_1}{x_i})}^2}} $<div class = 'alert alert-success'><strong>误差：</strong>真实值与模型输出值的差：${\varepsilon _i} = {y_i} - {\beta _0} - {\beta _1}{x_i}$ <br /><strong>残差：</strong>如上<strong>离差：</strong>真实值与模拟拟合值的期望的差,离差平方和为：$SST$<br /><strong>偏差：</strong>事实上的真实值与估计值的差$bias = {y_T} - {{\hat y}_i}$<br /><strong>方差：</strong>模型估计值与模型估计期望的方差${\mathop{\rm var}}  = \sum {{{({{\hat y}_i} - \bar y)}^2}} $</div></p><p><strong>残差的期望：</strong>$E({e_i}) = 0$</p><p><strong>残差的约束条件：</strong><br>$$\begin{array}{l}\sum {{e_i} = 0} \\\sum {{x_i}{e_i} = 0} \end{array}$$**残差的方差：**<div class='full-math-div'>$${\mathop{\rm var}} ({e_i}) = [1 - \frac{1}{n} - \frac{{{{({x_i} - \bar x)}^2}}}{{{L_{xx}}}}]{\sigma ^2} = (1 - {h_{ii}}){\sigma ^2}$$</div>其中$h_{ii}$称为杠杆值<br /><strong>标准化残差：</strong>$ZR{E_i} = \frac{{{e_i}}}{{\hat \sigma }}$<strong>学生化残差：</strong>$SR{E_i} = \frac{{{e_i}}}{{\sigma \sqrt {1 - {h_{ii}}} }}$</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>张雯雯：研途有道，聊聊考研那些事</title>
    <link href="/post/%E5%BC%A0%E9%9B%AF%E9%9B%AF%EF%BC%9A%E7%A0%94%E9%80%94%E6%9C%89%E9%81%93%EF%BC%8C%E8%81%8A%E8%81%8A%E8%80%83%E7%A0%94%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <url>/post/%E5%BC%A0%E9%9B%AF%E9%9B%AF%EF%BC%9A%E7%A0%94%E9%80%94%E6%9C%89%E9%81%93%EF%BC%8C%E8%81%8A%E8%81%8A%E8%80%83%E7%A0%94%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<p>在这个特殊的春天，因为突如其来的疫情，正在考研备战的同学们，都在家中默默努力，为自己的梦想而奋斗。考研是一项系统工程，备考路上有许多问题和困难需要大家去面对和解决。那么今天，老师就想利用这堂课跟大家来聊一聊考研那些事。</p><a id="more"></a><p>2020年考研初试已经结束两个月了，刚刚经历过考研以及正在备考的同学经常会讨论一个话题：“努力”与“选择”哪个更重要。有些人认为努力更重要，因为他们知道只有努力才能给自己创造选择的机会。而认为选择比努力重要的同学觉得选择一个能力范围内的学校，会很大程度上增加成功“上岸”的机会。接下来我们就考研过程中的努力与选择作一些探讨。</p><h2 id="“努力”与“选择”缺一不可"><a href="#“努力”与“选择”缺一不可" class="headerlink" title="“努力”与“选择”缺一不可"></a>“努力”与“选择”缺一不可</h2><h3 id="“努力”为“选择”提供最肥沃的土壤"><a href="#“努力”为“选择”提供最肥沃的土壤" class="headerlink" title="“努力”为“选择”提供最肥沃的土壤"></a>“努力”为“选择”提供最肥沃的土壤</h3><p>同学们，越努力越幸运！人的一生中，许多选择确实能改变人生的走向，但这些转机大部分都来源于过往的积累。所谓人生开挂，不过是厚积薄发。而如果你也想考研成功，那应该做哪些努力呢？</p><p><strong>第一,提高自我认知，做好职业生涯规划。</strong>同学们，在平时，大家要不断提高自我认知，认清自己的性格特点和气质类型，了解自身优势，以便在选择考研专业时扬长避短。根据对自我的认知，判断自己的发展取向，做好职业生涯规划，明确发展目标，以便选择适合个人需求的考研院校。</p><p><img src="1.webp" alt="（图片来源：京师博仁官网）"><br>（图片来源：京师博仁官网）</p><p><strong>第二，养成良好的学习习惯，收获一张“漂亮”的成绩单。</strong>一方面良好的学习习惯将使我们受益终身，另一方面努力学好基础科目和专业课程，将为我们后期的考研复习打下坚实的基础。同时，本科成绩单是复试需要提供的一项材料，“漂亮”的成绩单一定程度上反映了同学们扎实的专业基础和突出的学习能力，这对大家非常重要。</p><p><img src="2.gif" alt="（图片来源：搜狐号新东方在线）"><br>（图片来源：搜狐号新东方在线）</p><p><strong>第三,做好阶段性学习规划，完成近期学习目标。</strong>同学们，大家在不同阶段会面临不同的学习任务，也会为自己设定阶段性学习目标，如期末考试获得奖学金、学会一门计算机语言、掌握一种专业软件、通过英语四六级考试等等。为了达成这些阶段性学习目标，同学们应该提前做好合理的规划，并付诸实施。</p><p><img src="3.gif" alt=""><br>（图片来源：一起QQ网）</p><p><strong>第四,做好长期学习规划，实现厚积薄发。</strong>同学们，学习和掌握知识，做到活学活用都是慢功夫，成绩提升不会一蹴而就。因此，大家必须持之以恒，做好长期学习的规划。以英语为例，建议大家每天利用碎片化的时间背单词，扩大英语词汇量，看看英语杂志、浏览英文网站以提高自己的阅读能力。</p><p><img src="4.jpg" alt=""><br>（图片来源：瑶湖学院“私人订制”打卡群）</p><p><strong>第五，积极参加科技创新活动，提高核心竞争力。</strong>研究生阶段的学习是一个将理论学习转化为实践的过程，其表现即为对科研的重视，将学习知识和科学研究二者紧密结合。基于此，很多学校和导师在复试时都很看重学生本科阶段的科研经历。某些考生在本科阶段曾参与过科研训练项目、科技竞赛，发表过论文或申请过专利，面试的导师一般对此会很感兴趣。这些都是核心竞争力的体现，也都会为复试成功增添筹码。</p><p><img src="5.webp" alt=""><br>（图片来源：南昌工程学院官网）</p><h3 id="“选择”使“努力”开出最美的花"><a href="#“选择”使“努力”开出最美的花" class="headerlink" title="“选择”使“努力”开出最美的花"></a>“选择”使“努力”开出最美的花</h3><p>同学们，相信大家都有过这样的经历，准备考研时，学长学姐都会告诉你，择校一定要慎重，选择大于努力！并且每年复试结束之后，很多考生也都会感慨选择大于努力，因为分数比自己低的同学上了不错的学校，自己分数挺高但一志愿没过线四处求调剂……</p><div class='alert alert-danger'>敲黑板、划重点啦——应该如何选择才能让努力成果最大化呢？<img src='6.gif' />那就要在院校、专业、自身实力三者之间找平衡</div><p><strong>选择院校应考虑的因素</strong></p><p><img src="7.png" alt=""></p><p><img src="8.png" alt=""></p><p>同学们在对目标院校和专业充分了解的基础上，可以对两者分别进行归类，做个简单的<strong>二分法</strong>。</p><p>接下来，我们将院校和专业进行组合：顶尖院校&amp;顶尖专业、顶尖院校&amp;一般专业、一般院校&amp;顶尖专业、一般院校&amp;一般专业。当然，“双顶尖”的竞争自然是最激烈的，如果自身实力够强，可以一搏；如果自身实力一般，那就考虑下“一般加顶尖”的组合；如果自身实力较弱，那就考虑下“双一般”了。</p><p><img src="9.png" alt=""></p><h2 id="自律与环境同等重要"><a href="#自律与环境同等重要" class="headerlink" title="自律与环境同等重要"></a>自律与环境同等重要</h2><h3 id="自律，是考研成功的关键"><a href="#自律，是考研成功的关键" class="headerlink" title="自律，是考研成功的关键"></a>自律，是考研成功的关键</h3><p>同学们，大家每次打开手机上的keep软件，都会发现“自律给我自由”几个字映入眼帘。何为自律？自律就是在没有人现场监督的情况下，通过自己内在要求，变被动为主动，自觉地遵循法则，拿它来约束自己的一言一行。自律的人有很强的自控能力、执行力，能够严于律己，养成良好的习惯并日复一日地坚持。</p><p><img src="10.webp" alt=""></p><h3 id="好队友，是神一样的“助攻”"><a href="#好队友，是神一样的“助攻”" class="headerlink" title="好队友，是神一样的“助攻”"></a>好队友，是神一样的“助攻”</h3><p>同学们，如果下定决心要考研了，找几个志同道合的研友组建团队，是非常有必要的。大家知道吗，每年我校都会涌现一些“学霸考研寝室”。如我校14级土木工程（卓越计划）班刘火兴、王亚东和康轶涛和15水利水电工程1班龙星羽、龙思琪、涂静婷、余玮平都是学霸寝室成员。这些成功考进心仪院校的学霸们有没有让大家羡慕不已?为什么他们宿舍都这么厉害?也许，余玮平学姐的回答可以告诉大家答案，“我们一起奋斗，可以相互交流学习，也可以互通信息，最重要的是能够彼此鼓励和支持。考研是一条布满荆棘的小路，沿途或许大雾弥漫，有时让人辨不清方向，还好有她们的陪伴让考研之路从此不孤单。”</p><p><img src="11.webp" alt=""></p><h3 id="好环境，是最优质的“赛道”"><a href="#好环境，是最优质的“赛道”" class="headerlink" title="好环境，是最优质的“赛道”"></a>好环境，是最优质的“赛道”</h3><p>荀子曰：“蓬生麻中，不扶自直。白沙在涅，与之俱黑。”的确如此，环境对人的影响力是非常巨大的。在考研过程中，我们或多或少也会受到环境的影响。试想，宿舍学习氛围浓厚，你与室友间相互鼓励督促，那不失为优良学风寝室的典范，有望冲击新一届的“学霸考研寝室”。如果你正在寝室里刷题，而室友们在打游戏、追剧，你又如何能保持平静的心态来学习呢？这时，你不妨走出寝室，走进图书馆，走进自习室，走进考研的大环境中。其实很多时候大家不是输在起跑线上，而是输在了赛道的选择上。</p><p><img src="12.webp" alt=""></p><h2 id="困难与收获并行同在"><a href="#困难与收获并行同在" class="headerlink" title="困难与收获并行同在"></a>困难与收获并行同在</h2><h3 id="做难事必有所获"><a href="#做难事必有所获" class="headerlink" title="做难事必有所获"></a>做难事必有所获</h3><p>考研作为一种选拔性考试，注定了是一场硬仗，它要求我们在一段有限的时间里，尽可能快速地精进自己的学习技能，还要不断磨炼自己的心智，防止可能陷入的“情绪”漩涡。这是同习惯、耐受力和外部诱惑的角力，不仅检验自己的学习能力，更是对强大内心和坚定信念的一次深刻考验。而考研这样一场艰苦又充满挑战的全方位历练，带给我们的认识和体验，是仅仅坐在课堂上学习、按部就班完成学业永远不可能获得的。做难事是最有效的耕耘，也必将带来最丰厚的收获。</p><h3 id="考研收获的不仅是结果，还有过程"><a href="#考研收获的不仅是结果，还有过程" class="headerlink" title="考研收获的不仅是结果，还有过程"></a>考研收获的不仅是结果，还有过程</h3><p>今年的考研初试成绩已经公布，同学们还要面对随之而来的各种选择与考验。无论“梦圆”“梦碎”，大家都将带着对未来美好的期许，进入“努力”与“选择”的下一个轮回。<br>而考研留给亲历者的烙印将一直存在……<br><strong>考研造就一种心境——心无旁骛<br>考研成就一种态度——勇往直前<br>考研铸就一种精神——坚韧不拔</strong></p><p><img src="13.jpg" alt=""></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>同学们，我跟大家一样，都选择走上了考研这条陡峭的爬坡路，并且顽强地走完了全程。每每回望考研的历程，都不禁会怀念那段心中有梦想、脚下有力量的时光。<br>记忆共通所以共鸣，拥有情怀所以感动。课堂的最后，跟同学们分享B站跨年晚会上五月天的《倔强》，为每一位选择倔强坚持的人高歌。</p><p><div id='dplayer'></div><br>（视频来源：哔哩哔哩，剪辑：<a href="https://eatrice.top">吃白饭</a> )</p>]]></content>
    
    
    
    <tags>
      
      <tag>心灵鸡汤</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>弹性力学-平面问题的直接坐标解答</title>
    <link href="/post/%E5%B9%B3%E9%9D%A2%E9%97%AE%E9%A2%98%E7%9A%84%E7%9B%B4%E6%8E%A5%E5%9D%90%E6%A0%87%E8%A7%A3%E7%AD%94/"/>
    <url>/post/%E5%B9%B3%E9%9D%A2%E9%97%AE%E9%A2%98%E7%9A%84%E7%9B%B4%E6%8E%A5%E5%9D%90%E6%A0%87%E8%A7%A3%E7%AD%94/</url>
    
    <content type="html"><![CDATA[<h2 id="逆解法与半逆解法"><a href="#逆解法与半逆解法" class="headerlink" title="逆解法与半逆解法"></a>逆解法与半逆解法</h2><h3 id="按应力函数求解"><a href="#按应力函数求解" class="headerlink" title="按应力函数求解"></a>按应力函数求解</h3><div class='alert alert-success'>当体力为常量，按应力函数$\Phi$求解平面问题时，$\Phi $应满足：<ol>$A$内相容方程${\nabla ^{\rm{4}}}\Phi {\rm{ = }0}$</ol><br /><ol>$S = {S_\sigma }$上应力边界条件：</ol><br />$$\begin{array}{l}{(l{\sigma _x} + m{\tau _{yx}})_s} = \overline {{f_x}} \\{(m{\sigma _y} + l{\tau _{xy}})_s} = \overline {{f_y}} \end{array}$$</div><h3 id="逆解法"><a href="#逆解法" class="headerlink" title="逆解法"></a>逆解法</h3><p><strong>求解过程：</strong></p>1. 先找出满足${\nabla ^{\rm{4}}}\Phi {\rm{ = }0}$的解$\Phi$;<br />2. 代入${\sigma _x} = \frac{{{\partial ^2}\Phi }}{{\partial {y^2}}} - {f_x}x,{\sigma _y} = \frac{{{\partial ^2}\Phi }}{{\partial {x^2}}} - {f_y}y,{\tau _{xy}} =  - \frac{{{\partial ^2}\Phi }}{{\partial x\partial y}}$，求出应力分量<br />3. 在给定的边界形状$S$下，由应力边界条件方程反推出各边界上的面力<br />4. 最后得出在给定面力作用下的解答，就是上述$\Phi$和应力<br /><h3 id="半逆解法"><a href="#半逆解法" class="headerlink" title="半逆解法"></a>半逆解法</h3><p><strong>求解过程：</strong><br>1. 假设应力分量的函数形式（根据受力情况，边界条件等）<br />2. 由盈利函数形式，推测$\Phi$的函数形式<br />3. 代入${\nabla ^{\rm{4}}}\Phi {\rm{ = }0}$，解出$\Phi$<br />4. 由式子${\sigma _x} = \frac{{{\partial ^2}\Phi }}{{\partial {y^2}}} - {f_x}x,{\sigma _y} = \frac{{{\partial ^2}\Phi }}{{\partial {x^2}}} - {f_y}y,{\tau _{xy}} =  - \frac{{{\partial ^2}\Phi }}{{\partial x\partial y}}$<br />5. 校核全部应力边界条件（对于多连体，还需满足位移单值条件）<br />6. 如满足为正确解答，否则修改假设。<br /></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p><img src="1.png" alt=""></p><h2 id="矩形梁的纯弯曲问题"><a href="#矩形梁的纯弯曲问题" class="headerlink" title="矩形梁的纯弯曲问题"></a>矩形梁的纯弯曲问题</h2><p><img src="2.png" alt=""></p><p><strong>求解步骤：</strong></p>1. 由逆解法得出。可取$\Phi  = a{y^3}$，且满足${\nabla ^{\rm{4}}}\Phi {\rm{ = 0}}$<br />2. 求应力${\sigma _x} = 6ay,{\sigma _y} = {\tau _{xy}} = 0$<br />3. 检验应力边界条件：原则为<br />   1. 先校核主要边界（大边界），必须精确满足应力边界条件<br />   2. 再校核次要边界（小边界），若不能精确满足应力边界条件，则应用圣维南原理，用积分的应力边界条件代替<br />4. 解出主要边界的应力状态${\sigma _x} = \frac{{12M}}{{{h^3}}},{\sigma _y} = 0,{\tau _{xy}} = 0$与材料力学的，根据平截面假定推出的应力公式${\sigma _x} = \frac{{My}}{{{I_z}}}$是相同的。即平截面假定可能是精确的<br /><h2 id="位移分量的求出"><a href="#位移分量的求出" class="headerlink" title="位移分量的求出"></a>位移分量的求出</h2><p><strong>提出问题：</strong></p><p>在按应力求解中，若已得出应力，如何求出位移？</p>以纯弯曲问题为例，已知${\sigma _x} = \frac{{My}}{{{I_z}}},{\sigma _x} = {\tau _{xy}} = 0$试求解其位移。<p><strong>解法：</strong></p><p>先通过物理方程求应变：<br>$$\begin{array}{l}{\varepsilon _x} = \frac{1}{E}({\sigma _x} - \mu {\sigma _y}) = \frac{M}{{EI}}y\\{\varepsilon _y} = \frac{1}{E}({\sigma _y} - \mu {\sigma _x}) =  - \frac{{\mu M}}{{EI}}y\\{\gamma _{xy}} = \frac{{2(1 + \mu )}}{E}{\tau _{xy}} = 0\end{array}$$</p><p>再代入几何方程求位移：<br>$$\begin{array}{l}\frac{{\partial u}}{{\partial x}} = {\varepsilon _x} = \frac{M}{{EI}}y\\\frac{{\partial v}}{{\partial y}} = {\varepsilon _y} =  - \frac{{\mu M}}{{EI}}y\\\frac{{\partial u}}{{\partial x}} + \frac{{\partial v}}{{\partial y}} = {\gamma _{xy}} = 0\end{array}$$$$\begin{array}{l}u = \frac{M}{{EI}}xy + {f_1}(y)\\v =  - \frac{{\mu M}}{{EI}}{y^2} + {f_2}(x)\\\frac{{Mx}}{{EI}} + \frac{{d{f_2}(x)}}{{dx}} =  - \frac{{d{f_1}(y)}}{{dy}}( = \omega )\end{array}$$</p><p><strong>解出：</strong></p>$$\begin{array}{l}{f_1}(y) =  - \omega y + {u_0}\\{f_2}(x) =  - \frac{M}{{2EI}}{x^2} + \omega x + {v_0}\end{array}=>\\\begin{array}{l}u = \frac{M}{{EI}}xy - \omega y + {u_0}\\v =  - \frac{{\mu M}}{{2EI}}{y^2} - \frac{M}{{2EI}}{x^2} + \omega x + {v_0}\end{array}$$<p>由边界约束条件,确定刚体的位移分量$u,v,\omega $</p><div class='alert alert-success'><ol> 弯应力${\sigma _x}$与材料力学的解相同</ol><br /><ol> 铅直线的转角$\beta  = \frac{{\partial u}}{{\partial y}} = \frac{M}{{EI}}x - \omega $,故在任一截面$x$处,平截面假设成立</ol><br /><ol> 纵向纤维的曲率$\frac{1}{\rho } =  - \frac{{{\partial ^2}v}}{{\partial {x^2}}} = \frac{M}{{EI}}$同材料力学的结果,故在纯弯曲情况下,弹性力学与材料力学的解相同。</div><h2 id="简支梁受均布荷载"><a href="#简支梁受均布荷载" class="headerlink" title="简支梁受均布荷载"></a>简支梁受均布荷载</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>简支梁$ {2l<em>h</em>1} $，受均布荷载$q$及两端支承反力$ql$</p><p><img src="1.jpg" alt=""></p><h3 id="求解过程"><a href="#求解过程" class="headerlink" title="求解过程"></a>求解过程</h3><h4 id="假设应力分量"><a href="#假设应力分量" class="headerlink" title="假设应力分量"></a>假设应力分量</h4>由材料力学${\sigma _x} \propto M,\tau  \propto {F_s},{\sigma _y} \propto q$，因为${\sigma _y} \propto q$为常数,可假设${\sigma _y} = f(y)$<h4 id="由应力分量推出应力函数"><a href="#由应力分量推出应力函数" class="headerlink" title="由应力分量推出应力函数"></a>由应力分量推出应力函数</h4>$\frac{{{\partial ^2}\Phi }}{{\partial {x^2}}} = {\sigma _y} = f(y)$对$x$积分，$\frac{{\partial \Phi }}{{\partial x}} = xf(y) + {f_1}(y)$对$x$再积分$\Phi  = \frac{{{x^2}}}{2}f(y) + x{f_1}(y) + {f_2}(y)$<h4 id="将-Phi-代入相容方程，-Phi"><a href="#将-Phi-代入相容方程，-Phi" class="headerlink" title="将$\Phi $代入相容方程，$\Phi $"></a>将$\Phi $代入相容方程，$\Phi $</h4><div class='full-math-div'>$$\frac{1}{2}\frac{{{d^4}f(y)}}{{d{y^4}}}{x^2} + \frac{{{d^4}{f_1}(y)}}{{d{y^4}}}x + (\frac{{{d^4}{f_2}(y)}}{{d{y^4}}} + 2\frac{{{d^2}f(y)}}{{d{y^2}}}) = 0$$</div><p>x的0，1，2次放的系数等于0</p><h4 id="解出"><a href="#解出" class="headerlink" title="解出"></a>解出</h4><div class='full-math-div'>$$\left. \begin{array}{l}f = A{y^3} + B{y^2} + cy + D\\{f_1} = E{y^3} + F{y^2} + Gy\\{f_2} =  - \frac{A}{{10}}{y^5} - \frac{B}{6}{y^4} + H{y^3} + K{y^2}\end{array} \right\}$$</div><h4 id="由-Phi-求应力"><a href="#由-Phi-求应力" class="headerlink" title="由$\Phi $求应力"></a>由$\Phi $求应力</h4><p>对称条件——由于结构和荷载对称于$y$轴,故$\Phi ,{\sigma _x},{\sigma _y}$应为x的偶函数，${\tau _{xy}}$为x的奇函数，故$E=F=G=0$</p><h4 id="考察边界条件"><a href="#考察边界条件" class="headerlink" title="考察边界条件"></a>考察边界条件</h4><ol><li>每个边界都要满足相应的边界条件</li><li>复核过程中，求得待定系数</li></ol>$$主要边界：(y =  \pm \frac{h}{2})\\\begin{array}{l}{({\sigma _y})_{y = h/2}} = 0,\\{({\sigma _y})_{y =  - h/2}} =  - q,\\{({\tau _{xy}})_{y =  \pm h/2}} = 0\end{array}$$解出系数A、B、C、D对于次要边界（$x=l$），应用圣维南原理的积分条件解出H、K得到应力解答：$$\begin{array}{l}{\sigma _x} = \frac{{6q}}{{{h^3}}}({l^2} - {x^2})y + q\frac{y}{h}(4\frac{{{y^2}}}{{{h^2}}} - \frac{3}{5})\\ = \frac{M}{l}y + q\frac{y}{h}(4\frac{{{y^2}}}{{{h^2}}} - \frac{3}{5})\\{\tau _{xy}} = \frac{{6q}}{{{h^3}}}x(\frac{{{h^2}}}{{\rm{4}}} - {y^2}) = \frac{{{F_s}S}}{{bl}}\\{\sigma _y} =  - \frac{q}{2}(1 - \frac{y}{h}){(1 - \frac{{2y}}{h})^2}\end{array}$$<h3 id="弹性力学解与材料力学解"><a href="#弹性力学解与材料力学解" class="headerlink" title="弹性力学解与材料力学解"></a>弹性力学解与材料力学解</h3><p>x方向的正应力第一项与$q{(\frac{l}{h})^2}$同阶，与材料力学解相同<br>第二项与$q$同阶（弹性力学的修正项）<br>x面上y方向上的切应力与$q{(\frac{l}{h})^2}$同阶，与材料力学解相同<br>y方向上的正应力与$q$同阶，材料力学不计。</p><h2 id="锲形体受重力及液体压力"><a href="#锲形体受重力及液体压力" class="headerlink" title="锲形体受重力及液体压力"></a>锲形体受重力及液体压力</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3>设有锲形体,左面垂直,顶角为$\alpha$,下端无限长,受重力及齐顶液体压力$ {f_x}=0, {f_y} = {{\rho _1}}g\$<h3 id="求解-量纲分析法"><a href="#求解-量纲分析法" class="headerlink" title="求解-量纲分析法"></a>求解-量纲分析法</h3><h4 id="假设应力"><a href="#假设应力" class="headerlink" title="假设应力"></a>假设应力</h4><p>因为应力$ \propto {\rho _{\rm{1}}}g,{\rho _2}g$,而应力的量纲只比${\rho _{\rm{1}}}g,{\rho _2}g$高一次.<br>所以应力$=({\rho _{\rm{1}}}g,{\rho _2}g) \times (x,y一次式)$<br>即可假设应力 为x,y的一次式</p><h4 id="得应力函数关系式"><a href="#得应力函数关系式" class="headerlink" title="得应力函数关系式"></a>得应力函数关系式</h4>$\Phi {\rm{ = }}a{x^3} + b{x^2}y + cx{y^2} + d{y^3}$满足相容方程: ${\nabla ^4}\Phi  = 0$<h4 id="求解应力"><a href="#求解应力" class="headerlink" title="求解应力"></a>求解应力</h4><div class='full-math-div'>$$\begin{array}{l}{\sigma _x} = \frac{{{\partial ^2}\Phi }}{{\partial {y^2}}} - {f_x}x = 2cx + 6dy\\{\sigma _x} = \frac{{{\partial ^2}\Phi }}{{\partial {x^2}}} - {f_y}y = 6ax + 2by - {\rho _1}gy\\{\tau _{xy}} =  - \frac{{{\partial ^2}\Phi }}{{\partial x\partial y}} =  - 2bx - 2cy\end{array}$$</div><h4 id="考察边界条件-1"><a href="#考察边界条件-1" class="headerlink" title="考察边界条件"></a>考察边界条件</h4><p>本题两个大边界,应力边界条件必须严格满足应力边界条件</p><p>$x=0$ 铅直面</p>${({\sigma _x})_{x = 0}} =  - {\rho _2}gy$,解出$d = \frac{{{\rho _2}g}}{6}$${({\tau _{xy}})_{x = 0}} = 0$,解出$c=0$$x=y{\tan \alpha}$ 斜边界$$\begin{array}{l}{\sigma _x} =  - {\rho _2}gy\\{\sigma _y} = ({\rho _1}gy\cot \alpha  - 2{\rho _2}g{\cot ^3}\alpha )x\\ + ({\rho _2}g{\cot ^2}\alpha  - {\rho _1}g)y\\{\tau _{xy}} =  - {\rho _2}gx{\cot ^2}\alpha \end{array}$$<h4 id="解答的应用"><a href="#解答的应用" class="headerlink" title="解答的应用"></a>解答的应用</h4><ol><li>作为重力的解答参考-坝体中部的应力,接近锲形体的解答</li><li>重力坝规范规定的解法-材料力学解法</li><li>重力坝的精确分析,可按有限单元法进行</li></ol>]]></content>
    
    
    <categories>
      
      <category>弹性力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ODBC和JDBC</title>
    <link href="/post/ODBC%E5%92%8CJDBC/"/>
    <url>/post/ODBC%E5%92%8CJDBC/</url>
    
    <content type="html"><![CDATA[<h2 id="ODBC"><a href="#ODBC" class="headerlink" title="ODBC"></a>ODBC</h2><p>开放数据互联(Open DATABase Connection, ODBC)是微软公司开放的服务结构(Windows Open Services Architecture, WOSA)中有关数据库的一个组成部分。并提供了一套对数据库方位的标准API(Application Programming Interface)这些API独立于不同的DBMS，应用程序可以使用相同的ODBC来访问任何支持ODBC标准的数据库。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ODBCDemo</span><span class="hljs-params">()</span></span>&#123;<br>  RETCODE error;<br>  HENV env;<br>  HDBC conn;<br><br>  SQLAllocEnv(&amp;env);<br>  SQLAllocConnection(env, &amp;conn);<br>  SQLConnect(conn, <span class="hljs-string">&quot;de.yale.edu&quot;</span>, SQL_NTS, <span class="hljs-string">&quot;avi&quot;</span>, SQL_NTS,<br>    <span class="hljs-string">&quot;passwords&quot;</span>, SQL_NTS);<br>  &#123;<br>    <span class="hljs-keyword">char</span> deptname[<span class="hljs-number">80</span>];<br>    <span class="hljs-keyword">float</span> salary;<br>    <span class="hljs-keyword">int</span> lenOut1, lenOut2;<br>    HSTMT stmt;<br><br>    <span class="hljs-keyword">char</span>* sqlquery = <span class="hljs-string">&quot;select depy_name, sum(salary)</span><br><span class="hljs-string">      from instructor </span><br><span class="hljs-string">      group by dept_name&quot;</span>;<br>    SQLAllocStmt(conn, &amp;stmt);<br>    error = SQLExecDirect(stmt, sqlquery, SQL_NTS);<br>    <span class="hljs-keyword">if</span>(error == SQL_SUCCESS)&#123;<br>      SQLBindCol(stmt, <span class="hljs-number">1</span>, SQL_C_CHAR, deptname, <span class="hljs-number">80</span>, &amp;lenOut1);<br>      SQLBindCol(stmt, <span class="hljs-number">2</span>, SQL_C_FLOAT, &amp;salary, <span class="hljs-number">0</span>, &amp;lenOut2);<br>      <span class="hljs-keyword">while</span> (SQLFetch(stmt) == SQL_SUCCESS)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s %g\n&quot;</span>, deptname, salary);<br>      &#125;<br>    &#125;<br>    SQLFreeStmt(stmt, SQL_DROP);<br>    SQLDisconnect(conn);<br>    SQLFreeConnect(conn);<br>    SQLFreeEnv(env);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="SQL的储存过程与函数"><a href="#SQL的储存过程与函数" class="headerlink" title="SQL的储存过程与函数"></a>SQL的储存过程与函数</h2><p><code>SQL</code>中可以创建储存过程和函数，把他们储存在数据库服务器中，并在<code>SQL</code>语句中调用</p><h3 id="储存过程"><a href="#储存过程" class="headerlink" title="储存过程"></a>储存过程</h3><p>储存过程(Stored Procedure)是为了完成特定的功能而汇聚成的一组语句，对该组语句命名，编译和优化后储存在数据库服务器中。用户可以指定在储存过程的名字并给出相应的参数来执行它。</p><h3 id="SQL-PSM"><a href="#SQL-PSM" class="headerlink" title="SQL/PSM"></a>SQL/PSM</h3><p>创建储存过程和函数可以指定所使用的一种程序设计语言。</p><p><code>SQL/PSM</code>是<code>SQL</code>标准的一部分，它指出了如何编写SQL持久储存模块，其中包括创建储存过程和函数的语句。</p><h3 id="条件控制语句"><a href="#条件控制语句" class="headerlink" title="条件控制语句"></a>条件控制语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL">IF &lt;condition&gt; THEN &lt;&#123;expressions&#125;&gt;<br>  ElSEIF &lt;condition&gt; THEN &lt;&#123;expressions&#125;&gt;<br>  ...<br>  ElSEIF &lt;condition&gt; THEN &lt;&#123;expressions&#125;&gt;<br>  ELSE &lt;condition&gt;<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">IF</span><br></code></pre></td></tr></table></figure><h3 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs SQL">WHILE &lt;condition&gt; DO<br>  &lt;&#123;expressions&#125;&gt;<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">WHILE</span><br><br><span class="hljs-keyword">REPEAT</span><br>  &lt;&#123;expression&#125;&gt;<br>  <span class="hljs-keyword">UNTIL</span> &lt;condition&gt;<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">REPEAT</span><br><br><span class="hljs-keyword">FOR</span> &lt;repeat_name&gt; <span class="hljs-keyword">AS</span> &lt;role_name&gt; <span class="hljs-keyword">CURSOR</span> <span class="hljs-keyword">FOR</span> &lt;<span class="hljs-keyword">search</span>&gt; <span class="hljs-keyword">DO</span><br>  &lt;&#123;expression&#125;&gt;<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">FOR</span><br></code></pre></td></tr></table></figure><h3 id="创建、执行和删除储存过程和函数"><a href="#创建、执行和删除储存过程和函数" class="headerlink" title="创建、执行和删除储存过程和函数"></a>创建、执行和删除储存过程和函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><br><span class="hljs-comment">-- 创建储存过程</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> &lt;procedure_name&gt; ([&#123;arguments&#125;]) [&lt;&#123;Partial_declaration&#125;&gt;] &lt;procedure_body&gt;;<br><br><span class="hljs-comment">-- 创建函数体</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> &lt;function_name&gt; (&lt;&#123;arguments&#125;&gt;) <span class="hljs-keyword">RETURNS</span> &lt;return_type&gt; [&lt;&#123;Partial_declaration&#125;&gt;] &lt;function_body&gt;;<br><br><span class="hljs-comment">-- 指定通用语言</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> &lt;procedure_name&gt; (&lt;&#123;arguments&#125;&gt;) <span class="hljs-keyword">LANGUAGE</span> &lt;programming_language&gt; <span class="hljs-keyword">EXTERNAL</span> <span class="hljs-keyword">NAME</span> &lt;file_path&gt;;<br><br><span class="hljs-comment">-- 执行储存过程和函数</span><br><span class="hljs-keyword">CALL</span> &lt;procedure_name | function_name&gt; ([&lt;arguments&gt;)<br><br><span class="hljs-comment">-- 删除储存过程或函数</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">PROCEDURE</span> &lt;procedure_name&gt;;<br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">FUNCTION</span> &lt;function_name&gt;;<br></code></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> TRANSFER (inaccount <span class="hljs-built_in">INT</span>, outaccount <span class="hljs-built_in">INT</span>, amount <span class="hljs-built_in">FLOAT</span>);<br>  <span class="hljs-keyword">DECLARE</span> totaldeposit <span class="hljs-built_in">FLOAT</span>;   <span class="hljs-comment">-- 申明变量</span><br>  <span class="hljs-keyword">SELECT</span> total INFO totaldeposit <span class="hljs-built_in">FLOAT</span>;<br>  <span class="hljs-keyword">SELECT</span> total <span class="hljs-keyword">INTO</span> totaldeposit <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">ACCOUNT</span><br>    <span class="hljs-keyword">WHERE</span> ACCOUNTNUM = outaccount;  <span class="hljs-comment">-- 检查转出余额</span><br>  IF otaldeposit IS NULL THEN  <span class="hljs-comment">-- 账户没有存款，回滚事务</span><br>    <span class="hljs-keyword">ROLLBACK</span>;<br>    RETURN;<br>  ELSEIF otaldeposit &lt;amount THEN -- 余额不足，回滚事务，并返回<br>    <span class="hljs-keyword">ROLLBACK</span>;<br>    RETURN;<br>  ELSE <span class="hljs-comment">--修改转出账户，减去转出额</span><br>    <span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ACCOUNT</span> <span class="hljs-keyword">SET</span> total = total - amount<br>      <span class="hljs-keyword">WHERE</span> ACCOUNTNUM = outaccount;<br>    <span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ACCOUNT</span> <span class="hljs-keyword">SET</span> tatal = total + amount<br>      <span class="hljs-keyword">WHERE</span> ACCOUNTNUM = inaccountl<br>    <span class="hljs-keyword">COMMIT</span>; <span class="hljs-comment">-- 转账完成，提交转账事务</span><br>  ENDIF;<br></code></pre></td></tr></table></figure><h2 id="SQL触发器"><a href="#SQL触发器" class="headerlink" title="SQL触发器"></a>SQL触发器</h2><p><strong>概述：</strong>触发器是用户定义在表上的一类特殊储存过程，触发器的执行是通过事件来出发执行的。</p><h3 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h3><p><code>SQL</code>使用<code>CREATE TRIGGER</code>语句创建触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TRIGGER</span> trigger_name<br>  | <span class="hljs-keyword">BEFORE</span> | <span class="hljs-keyword">AFTER</span> | trigger_event <span class="hljs-keyword">ON</span> table_name<br>  <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">EACH</span> | <span class="hljs-keyword">ROW</span> | <span class="hljs-keyword">STATEMENT</span> | [<span class="hljs-keyword">WHEN</span> &lt;condition&gt;]<br>  &lt;trigger_action&gt;<br></code></pre></td></tr></table></figure><p>其中<code>trigger_event</code>可取值：<code>INSERT</code>, <code>DELETE</code>, <code>UPDATE</code><br><code>trigger_action</code>一般用<code>BEGIN ... END</code>括起来，或者<code>AS</code>引导</p><h3 id="激活触发器"><a href="#激活触发器" class="headerlink" title="激活触发器"></a>激活触发器</h3><p>触发器是<code>trigger_event</code>发生时激活的，一个触发器只能作用于一张表，一个表上可以创建多个触发器，分别针对<code>INSERT</code>, <code>UPDATE</code>和<code>BEFORE</code>, <code>AFTER</code>的任意组合。</p><h3 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h3><p><code>DROP TRIGGER &lt;trigger_name&gt;</code></p><h3 id="触发器示例"><a href="#触发器示例" class="headerlink" title="触发器示例"></a>触发器示例</h3><p>下面是一个简易的周六或周日，尝试修改表时触发报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TRIGGER</span> tri_name<br>  <span class="hljs-keyword">BEFORE</span> <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">OR</span> <span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">OR</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ON</span> table_name<br><span class="hljs-keyword">DECLARE</span><br>  weekend_error <span class="hljs-keyword">EXCEPTION</span>;<br><span class="hljs-keyword">BEGIN</span> <br>  <span class="hljs-keyword">IF</span> TO_CHAR(<span class="hljs-keyword">SysDate</span>, <span class="hljs-string">&#x27;DY&#x27;</span>) = <span class="hljs-string">&#x27;SAT&#x27;</span> <span class="hljs-keyword">OR</span><br>    TO_CHAR(<span class="hljs-keyword">SysDAte</span>, <span class="hljs-string">&#x27;DY&#x27;</span>) = <span class="hljs-string">&#x27;SUM&#x27;</span><br>  <span class="hljs-keyword">THEN</span> <span class="hljs-keyword">RAISE</span> weekend_error;<br>  <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">EXCEPTION</span> <br>  <span class="hljs-keyword">WHEN</span> weekend_error <span class="hljs-keyword">THEN</span><br>    RAISE_APPLICATION_ERROR(<span class="hljs-number">-20001</span>, <span class="hljs-string">&#x27;error!&#x27;</span>);<br>  RETURN;<br><span class="hljs-keyword">END</span>;<br></code></pre></td></tr></table></figure><h2 id="嵌入式SQL"><a href="#嵌入式SQL" class="headerlink" title="嵌入式SQL"></a>嵌入式SQL</h2>]]></content>
    
    
    <categories>
      
      <category>程序字典</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL进阶用法</title>
    <link href="/post/SQL%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95/"/>
    <url>/post/SQL%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p><strong>视图</strong>是关系数据库系统提供给用户以多种角度观察数据库中数据的重要机制。他是使用<code>SELECT FROM</code>语句从一个或多个基本表（或其他视图）中导出的表，它与基本表不同，是一个虚表。数据库中只存放视图的定义，而不存放视图相应的数据，这些数据仍存放在导出它的基本表中。</p><p class='alert alert-danger'><strong>对视图的一切操作，将被转换为对其导出的基本表的操作</strong></p><h3 id="视图的创建"><a href="#视图的创建" class="headerlink" title="视图的创建"></a>视图的创建</h3><p><code>SQL</code>语言用<code>CREATE VIEW</code>语句创建视图</p><p><code>CREATE VIEW view_name SELECT &#123;col_names&#125; FROM table_name [where &#123;expressions&#125;</code></p><p>视图支持虚拟列创建，即船舰列名在原基本表中不存在。</p><h3 id="视图的删除"><a href="#视图的删除" class="headerlink" title="视图的删除"></a>视图的删除</h3><p><code>SQL</code>语句中视图的删除使用<code>DROP</code>关键字</p><p><code>DROP VIEW view_name [CASCADE]</code></p><h3 id="视图的查询"><a href="#视图的查询" class="headerlink" title="视图的查询"></a>视图的查询</h3><p>视图的查询方式和基本表的查询方式相同,即使用<code>SELECT</code>执行查询操作。</p><h3 id="视图的修改"><a href="#视图的修改" class="headerlink" title="视图的修改"></a>视图的修改</h3><p>视图的修改包括<code>INSERT</code>、<code>DELETE</code>、<code>UPDATE</code><br>对视图的修改都会转换成对基本表的修改</p><ol><li><code>INSERT INTO table_name(&#123;col_names&#125;) VALUES(&#123;col_values&#125;)</code></li><li>`DELETE FROM table_name WHERE {expressions}</li><li>`UPDATE table_name SET {expressions} [WHERE {expressions}]</li></ol><p><strong>视图的作用：</strong></p><ol><li>视图能够简化结构和简化复杂查询操作</li><li>视图使用户能以多角度，更灵活观察和共享同一数据</li><li>试图有助于提高数据的逻辑独立性</li><li>视图能够提供安全保护</li></ol><h2 id="数据控制"><a href="#数据控制" class="headerlink" title="数据控制"></a>数据控制</h2><p><code>SQL</code>语言的<code>GRANT</code>语句分为授予特权语句和授予角色语句两种形式。角色通常由DBA使用<code>CREATE ROLE</code>创建</p><ol><li>授予角色语句<ol><li><code>GRANT &lt;&#123;role&#125;&gt; TO | &lt;&#123;user&#125;&gt; |&#123;PUBLIC&#125;|</code></li></ol></li><li>授予权限语句<ol><li><code>GRANT |&lt;&#123;Authorities&#125;&gt; | ALL | [ON &lt;object_name&gt;] TO | &lt;user&gt; | [&lt;&#123;roles&#125;&gt;] | PUBLIC [WITH GRANT OPTION]</code></li></ol></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">对象(object)</th><th style="text-align:center">操作权限(Authorities)</th></tr></thead><tbody><tr><td style="text-align:center">COLUMN</td><td style="text-align:center">SELECT, INSERT, UPDATE, DELETE, ALL PRIVILEGES</td></tr><tr><td style="text-align:center">VIEW</td><td style="text-align:center">SELECT, INSERT, UPDATE, DELETE, ALL PRIVILEGES</td></tr><tr><td style="text-align:center">TABLE</td><td style="text-align:center">SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, INDEX, ALL PRIVILEGES</td></tr></tbody></table></div><p>授予的权限可以由DBA或授权者用<code>REVOKE</code>语句收回，其语法与授权相对应</p><ol><li>收回角色<ol><li><code>REVOKE &lt;role&gt; FROM &#123;&lt;users&gt;&#125;</code></li></ol></li><li>收回特权<ol><li><code>REVOKE &lt;&#123;Authorities&#125;&gt; [ON &lt;object_type&gt; &lt;object_name&gt;] FROM &#123;&lt;user&gt;&#125; [CASCADE | RESTRICT]</code></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>程序字典</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给学妹安装ArcGIS的各种坑</title>
    <link href="/post/%E7%BB%99%E5%AD%A6%E5%A6%B9%E5%AE%89%E8%A3%85ArcGIS/"/>
    <url>/post/%E7%BB%99%E5%AD%A6%E5%A6%B9%E5%AE%89%E8%A3%85ArcGIS/</url>
    
    <content type="html"><![CDATA[<p>前些天下午的某个时候，有学妹找我帮她远程装一个软件，ARCGIS。这是一个多功能的地理信息系统软件，支持各种平台的地图格式导入编辑处理，<br><img src="1.png" alt="ARCGIS"></p><p>当然，这个软件不是免费的，使用正版需要挺多的软妹币。对于我们学生来说，用作学习用途，使用学生专用版_pojie版_来说还是合适一些。但是总所周知，_学生版_不能给商家带来任何收益，因此该版本不论是在安装上，或者是使用上，都会有大大小小的各种问题。因此装软件是个坑，帮别人装软件是把和别人一起挖坑。</p><p><img src="2.jpg" alt=""></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>首先需要下载安装包，她选的是<code>ARCGIS10.6</code>。下载源还提供一份完整的安装教程，我们就安装这份安装教程安装。安装包有3.9G，保存在百度网盘里面。有一个同学曾经说过，百度网盘的下载速度不是取决于你的的网络带宽，而是却决于你的会员等级。因此，对于会员等级等于零的大部分用户来说，下载这个文件需要9小时加10分钟。为什么是9小时呢？因为下载了9小时，为什么要加上10分钟呢？学妹开通了临时会员加速，速度一下就上去了，就在10分钟里面把剩下的部分下载完了。</p><p>然后，我们把安装包解压缩，出现如下图<br><img src="3.png" alt=""></p><p>进入软件安装压缩包目录<br><img src="4.png" alt=""></p><p>双击安装倒数第三个，许可证服务器<code>ARCGIS_LICENSE_MANAGER</code>，安装好之后先暂时停止服务<br><img src="5.png" alt=""></p><p>然后安装主程序，顺序第三个<code>ARCGIS_DESKTOP</code>，一路绿灯。到需要更改安装位置的地方，将C盘改成D盘。<br><img src="6.png" alt=""><br><img src="7.png" alt=""></p><p>等待安装，安装完毕之后，将补丁文件夹打开，分别将证书服务器的补丁和主程序的补丁粘贴到对应的文件夹中，并且覆盖原文件。</p><p><img src="8.png" alt=""></p><p>其中第一个个文件夹里的文件是证书服务器上的补丁。第二个文件夹的文件是主程序的补丁。在替换之前，要保证证书服务器处于关闭状态。</p><p>替换好之后启动证书服务器。服务器启动完成后打开<code>ARCGIS Administrator</code>，在服务器的位置处选择自由服务器，同时把服务器地址填写为<code>localhost</code></p><p><img src="9.png" alt=""></p><p><img src="10.png" alt=""></p><p>输好后，点击确定，然后他会出现一个服务器列表，点击可用性，然后刷新，就能看到证书服务器了。</p><p><img src="11.png" alt=""></p><p>关闭程序，找到中文安装包。双击安装，就可以为软件添加中文界面了。</p><p><img src="12.png" alt=""></p><p>至此，安装结束。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>安装的时候出现了一些问题，刷新显示可用性的时候提示：<code>Not_Set</code>是无效的主机名。如下图:</p><p><img src="13.png" alt=""></p><p>这是因为在安装的时候跳过了选择服务器的阶段，导致服务器地址未设置到<code>localhost</code></p><p>我们的解决是把软件卸载重装。</p><p>还有一个问题，就是软件打开后，让他把谷歌地球导出来的<code>KML</code>文件转化成软件的图层文件，一直无法转换。是因为开启了地理位置的后台转换，导致线程挂起，只要在地理位置中关掉后台转换即可。</p><p><img src="14.png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>软件安装</tag>
      
      <tag>坑!</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>弹性力学-边界条件和圣维南原理</title>
    <link href="/post/%E5%BC%B9%E6%80%A7%E5%8A%9B%E5%AD%A6-%E8%BE%B9%E7%95%8C%E6%9D%A1%E4%BB%B6%E5%92%8C%E5%9C%A3%E7%BB%B4%E5%8D%97%E5%8E%9F%E7%90%86/"/>
    <url>/post/%E5%BC%B9%E6%80%A7%E5%8A%9B%E5%AD%A6-%E8%BE%B9%E7%95%8C%E6%9D%A1%E4%BB%B6%E5%92%8C%E5%9C%A3%E7%BB%B4%E5%8D%97%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h2><h3 id="位移边界条件"><a href="#位移边界条件" class="headerlink" title="位移边界条件"></a>位移边界条件</h3><p>位移边界条件中,物体在全部边界上的位移分量是已知的,即:${u_s} = \bar u,{v_s} = \bar v$</p><p>当边界为固定边界时,边界上的位移分量为零,使用${S_u}$来表示位移边界位置.</p><ol><li>位移边界约束条件是一个函数方程,要求在${S_u}$上每一点的位移与对应的约束位移相等</li><li>若为简单的固定边,$\overline u  = \overline v  = 0$,则有${(u)_s} = 0,{(v)_s} = 0$</li></ol><h3 id="应力边界条件"><a href="#应力边界条件" class="headerlink" title="应力边界条件"></a>应力边界条件</h3><p>将应力平衡状态移动到边界上,使斜面与边界重合,得到:</p><script type="math/tex; mode=display">\left. \begin{array}{l}{(l{\sigma _x} + m{\tau _{yx}})_s} = \overline  (s)\\{(m{\sigma _y} + l{\tau _{xy}})_s} = \overline  (s)\end{array} \right\}</script><ol><li>是边界上微分体的静力平衡条件</li><li>是函数方程,要求在边界上每一点s上均满足,这是精确的条件</li><li>在应力边界条件中,应力和面力的符号按弹性力学规定.</li><li>位移应力边界条件有两个分量,分别表示x,y的边界条件</li><li>所有边界均满足,无面力的边界(自由边)$\overline   = \overline   = 0$</li></ol><h2 id="圣维南原理"><a href="#圣维南原理" class="headerlink" title="圣维南原理"></a>圣维南原理</h2><p><strong>原理表述(局部效应原理):</strong>如果把物体的一小部分边界上的面力,变换为分布不同但静力等效的面力(主矢量相同,对同一点的主矩也相同).那么近处的应力分量将有显著的改变,远处所受的影响可忽略不计.</p><ol><li>只能用于一小部分边界(小边界,次要边界或局部边界)</li><li>静力等效☞主矢相同,对同一点的主矩也相同</li><li>近处☞面力变换范围的一、二倍的局部区域</li><li>远处☞近处之外的部分</li></ol><p><img src="1.png" alt=""></p><p>选取长度为l的边界<br><p class='note note-success full-math-div'>应力边界条件的原表述：$\left. \begin{array}{l}{\sigma _s}(x,y){|_{x = l}} = \overline {{f_x}} (y)\\{\tau _{xy}}(x,y){|_{x = l}} = \overline {{f_y}} (y)\end{array} \right\}$根据原理改写成积分边界条件：$$\int_{ - h/2}^{h/2} {{{({\sigma _x})}_{x =  \pm l}}dy*1 =  \pm } \int_{ - h/2}^{h/2} {\overline {{f_x}} (y)*1( = {F_N})}\\\begin{array}{l}\int_{ - h/2}^{h/2} {{{({\sigma _x})}_{x =  \pm l}}dy*1*y =  \pm } \int_{ - h/2}^{h/2} {\overline {{f_x}} (y)*1*y( = M)} \\\int_{ - h/2}^{h/2} {{{({\tau _x})}_{x =  \pm l}}dy*1 =  \pm } \int_{ - h/2}^{h/2} {\overline {{f_y}} (y)*1( = {F_s})} \end{array}$$</p></p><h2 id="求解平面问题"><a href="#求解平面问题" class="headerlink" title="求解平面问题"></a>求解平面问题</h2><p>弹性力学的基本方程:<br>$$\begin{array}{l}\frac{{\partial {\sigma _x}}}{{\partial x}} + \frac{{\partial {\tau _{yx}}}}{{\partial y}} + {f_x} = 0\\\frac{{\partial {\sigma _y}}}{{\partial y}} + \frac{{\partial {\tau _{xy}}}}{{\partial x}} + {f_y} = 0\\{\varepsilon _x} = \frac{{\partial u}}{{\partial x}},{\varepsilon _y} = \frac{{\partial v}}{{\partial y}}\\{\gamma _{xy}} = \frac{{\partial u}}{{\partial y}} + \frac{{\partial v}}{{\partial x}}\\{\varepsilon _x} = \frac{1}{E}({\sigma _x} - \mu {\sigma _y})\\{\varepsilon _x} = \frac{1}{E}({\sigma _y} - \mu {\sigma _x})\\{\gamma _{xy}} = \frac{{1(1 + \mu )}}{E}{\tau _{xy}}\\{(l{\sigma _x} + m{\tau _{yx}})_s} = \overline {{f_x}} \\{(m{\sigma _y} + l{\tau _{xy}})_s} = \overline {{f_y}} \\{(u)_s} = \overline u \\{(v)_s} = \overline v \end{array}$$可得到八个未知函数:$({\sigma _x},{\sigma _y},{\tau _{xy}},{\varepsilon _x},{\varepsilon _y},{\gamma _{xy}},u,v)$</p><h3 id="解法-消元法"><a href="#解法-消元法" class="headerlink" title="解法-消元法"></a>解法-消元法</h3><p class='note note-success'>按位移求解(位移法)☞取$u,v$为基本未知函数,从方程和边界条件中消去应变和应力,导出只$u,v$的方程和边界条件,从而求出$u,v$;再求应变和应力.</p><p class='note note-success'>按应力求解(应力法)☞取${\sigma _x},{\sigma _y},{\tau _{xy}}$为基本未知函数,从方程和边界条件中消去位移和应变,导出只含应力的方程和边界条件,从而求出应力;再求应变和位移.</p><h3 id="位移法思路和步骤"><a href="#位移法思路和步骤" class="headerlink" title="位移法思路和步骤"></a>位移法思路和步骤</h3><ol><li>取$u,v$为基本未知函数</li><li>其他未知函数用$u,v$表示</li><li>在$A$中导出$u,v$的基本方程-将弹性方程代入平衡微分方程,得出:</li></ol><p class="alert alert-success full-math-div" role="alert">$$\begin{array}{l}\frac{E}{{1 - {\mu ^2}}}(\frac{{{\partial ^2}u}}{{\partial {x^2}}} + \frac{{1 - \mu {\partial ^2}u}}{{2\partial {y^2}}} + \frac{{1 + \mu {\partial ^2}v}}{{2\partial x\partial y}}) + {f_x} = 0\\\frac{E}{{1 - {\mu ^2}}}(\frac{{{\partial ^2}v}}{{\partial {y^2}}} + \frac{{(1 - \mu ){\partial ^2}v}}{{2\partial {x^2}}} + \frac{{(1 + \mu ){\partial ^2}u}}{{2\partial x\partial y}}) + {f_y} = 0\end{array}$$</p>1. 在$S$上的边界条件:   1. 位移边界条件,用位移边界条件表示   2. 应力边界条件用位移代入表示:<p class="alert alert-success full-math-div" role="alert">$$\begin{array}{l}\frac{E}{{1 - {\mu ^2}}}{[l(\frac{{\partial u}}{{\partial x}} + \mu \frac{{\partial v}}{{\partial y}}) + m\frac{{1 - \mu }}{2}(\frac{{\partial u}}{{\partial y}} + \frac{{\partial v}}{{\partial x}})]_s} = \overline {{f_x}} \\\frac{E}{{1 - {\mu ^2}}}{[m(\frac{{\partial v}}{{\partial y}} + \mu \frac{{\partial u}}{{\partial x}}) + l\frac{{1 - \mu }}{2}(\frac{{\partial v}}{{\partial x}} + \frac{{\partial u}}{{\partial y}})]_s} = \overline {{f_y}} \end{array}$$</p><p class='note note-info'><strong>优点:</strong>适应性广<br /><strong>缺点:</strong>求解较为复杂</p><h3 id="应力法法思路和步骤和相容方程"><a href="#应力法法思路和步骤和相容方程" class="headerlink" title="应力法法思路和步骤和相容方程"></a>应力法法思路和步骤和相容方程</h3><p class="alert alert-info" role="alert">应变: 利用物理方程,用应力表示<br />位移: 通过应变,用应力表示,需通过积分,不仅表达式较复杂,而且包含积分带来的未知项,因此位移边界条件用应力分量来表示时既复杂又难以求解<br /><strong>当边界条件全部为应力边界条件时用应力法求解!</strong></p><ul><li>建立$A$内求解应力的方程<ul><li>平衡微分方程两个</li><li>补充方程-几何方程,物理方程中消去位移和应变,从几何方程中消去位移,得出相容方程</li></ul></li></ul><p class="alert alert-success full-math-div" role="alert">$$\frac{{{\partial ^2}{\varepsilon _x}}}{{\partial {y^2}}} + \frac{{{\partial ^2}{\varepsilon _y}}}{{\partial {x^2}}} = \frac{{{\partial ^2}{\gamma _{xy}}}}{{\partial x\partial y}}$$</p><p>代入物理方程,消去应变,并应用平衡微分方程进行简化,得到应力表示的相容方程:</p><p class="alert alert-success full-math-div" role="alert">$${\nabla ^2}({\sigma _x}{\rm{ + }}{\sigma _y}) =  - (1 + \mu )(\frac{{\partial {f_x}}}{{\partial x}} + \frac{{\partial {f_y}}}{{\partial y}})$$</p><p><strong>物理含义:</strong></p><ol><li>变形协调条件时位移连续性的必然结果</li><li>变形协调条件是与应变对应的位移存在且连续的必要条件.</li></ol><div class="alert alert-info full-math-div" role="alert"><strong>条件:</strong><ul><li>1. $A$内的平衡微分方程</li><li>2. $A$内的相容方程</li><li>3. 边界$s=S_{\sigma}$</li><li>4. 对于多连体,还需满足位移的单值条件.</li></ul></div><h3 id="常体力情况下的简化"><a href="#常体力情况下的简化" class="headerlink" title="常体力情况下的简化"></a>常体力情况下的简化</h3><p><strong>概念:</strong>体力是常量,分量不随坐标位置的变化而变化</p><p class="alert alert-info full-math-div" role="alert">(1)相容方程: $${\nabla ^2}({\sigma _x}{\rm{ + }}{\sigma _y}) = 0$$$(2)$平衡微分方程可表示为:$$\begin{array}{l}\frac{{\partial {\sigma _x}}}{{\partial x}} + \frac{{\partial {\tau _{yx}}}}{{\partial y}} + {f_x} = 0\\\frac{{\partial {\sigma _y}}}{{\partial y}} + \frac{{\partial {\tau _{xy}}}}{{\partial x}} + {f_y} = 0\end{array}$$$(3)$应力边界条件($s={s_{\sigma}},{s_u}=0$)$$\begin{array}{l}{(l{\sigma _x} + m{\tau _{yx}})_s} = \overline {{f_x}} \\{(m{\sigma _y} + l{\tau _{xy}})_s} = \overline {{f_y}} \end{array}$$</p><p>在1-3条件下求解的${\sigma _x},{\sigma _y},{\tau _{xy}}$不包含弹性常数,=其大小与弹性常数无关.</p><div class="alert alert-success full-math-div" role="alert"><h3>结论</h3><ul><li>不同材料的应力${\sigma _x},{\sigma _y},{\tau _{xy}}$的理论解相同,用实验方法求应力时,也可以用不同的材料来代替.</li><li>两类平面问题的应力解${\sigma _x},{\sigma _y},{\tau _{xy}}$相同,实验是可用平面应力的模型代替平面应变的模型.</li>对应得齐次微分方程的通解.艾里求出:$${\sigma _x} = \frac{{{\partial ^2}\Phi }}{{\partial {y^2}}},{\sigma _y} = \frac{{{\partial ^2}\Phi }}{{\partial {x^2}}},{\tau _{xy}} =  - \frac{{{\partial ^2}\Phi }}{{\partial x\partial y}}$$</ul><h3>归纳</h3>在常体力下求解平面问题,可转变为按应力函数$\Phi$求解,$\Phi$必须满足:<li>$A$内相容方程(h)</li><li>$s={s_{\sigma}}$上的应力边界条件</li><li>多连体中的位移单值条件</li></div>]]></content>
    
    
    <categories>
      
      <category>弹性力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百度统计数据服务器</title>
    <link href="/post/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/post/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="摘要-ABSTRACT"><a href="#摘要-ABSTRACT" class="headerlink" title="摘要(ABSTRACT)"></a>摘要(ABSTRACT)</h2><p>前些天有个小朋友说百度统计不支持实时PV、UV。我去找了一下官方提供的文档，百度统计确实没有实时的浏览量导出功能，因此我就想做一个百度统计的数据接口，以给大家用。<br>最后通过C#写了一个http服务器，作为网站和百度统计数据源的中间件，以连通两个数据端。最后的测试结果表明这种运行方式是可行的，就是有个问题，本地的请求调试延迟平均2000ms,原因是服务器查询百度的数据延迟较大，因此在服务器上设置缓存,以达到快速响应。同时为保证数据的及时性,每1分钟服务器执行更新缓存方法.</p><h2 id="百度API接口"><a href="#百度API接口" class="headerlink" title="百度API接口"></a>百度API接口</h2><p>百度提供接口的官方说明：<a href="https://tongji.baidu.com/sc-web/10000153831/home/dataapi">https://tongji.baidu.com/sc-web/10000153831/home/dataapi</a><br>以下的接口请求示范均使用<code>postman</code></p><p>百度的服务接口都有都需要通过<code>access_token</code>进行调用,这是一个用户级参数,通过登陆获取。要获取这个参数首先需要登录百度开发者平台控制台：<a href="http://developer.baidu.com/console#app/project">百度开发者中心控制台</a>,新建一个工程，添加安全域名，然后记录下<code>app_id</code>和<code>secrect_key</code>。</p><p>下一步：通过百度提供的接口，修改相应参数的值用<strong>浏览器打开</strong>，调起登录；<br><code>http://openapi.baidu.com/oauth/2.0/authorize?response_type=code&amp;client_id=&#123;CLIENT_ID&#125;&amp;redirect_uri=&#123;REDIRECT_URI&#125;&amp;scope=basic&amp;display=popup</code><br>参数配置如下图所示：<br><img src="1.png" alt=""></p><p>再下一步，使用获取到的code换取token，API如下图所示,这里可用浏览器打开也可用请求工具进行请求。<br><code>http://openapi.baidu.com/oauth/2.0/token?grant_type=authorization_code&amp;code=&#123;CODE&#125;&amp;client_id=&#123;CLIENT_ID&#125;&amp;client_secret=&#123;CLIENT_SECRET&#125;&amp;redirect_uri=&#123;REDIRECT_URI&#125;</code><br><img src="2.png" alt=""></p><p>请求完之后可以获得refresh_token和access_token，保存这两个值。如下图所示：<br><img src="3.png" alt=""></p><p>再再下一步，获取浏览量PV,UV和实时访客，百度提供了测试接口，<a href="https://tongji.baidu.com/api/debug/#">https://tongji.baidu.com/api/debug/#</a>可在此处调试接口，获取相关参数。</p><p>我写的服务器中因为使用了服务器缓存，因此不读取pv数，只每隔一分钟刷新UV和RV。因此不需要很多参数，项目已经上传至github，项目地址：<a href="https://github.com/QiQiWan/baidu-tongji.git">git@github.com:QiQiWan/baidu-tongji.git</a></p><h2 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h2><p>新建一个<code>.NET Core</code>项目，添加<code>HttpListener</code>服务器,该服务器可选SSL证书,且可编程度较高.开启泛主机名监听:<code>AddDomain(&quot;http://*:1234/&quot;);</code>微软的文档说这样干可能会有安全问题,因为我的域名没有备案,无法解析,所以先这样用着,否则用<code>localhost</code>他会在<code>IPv6</code>下监听,使得无法通过<code>IP</code>地址访问.</p><p>创建多线程接口:<code>myThread</code>,在有http请求之后,压入新的线程,并返回结果,防止阻塞.请求结束后从线程池中删除进程.</p><p>添加辅助百度请求类”BaiduWebHelper”,该类处理所有的百度接口调用.这个个web帮助类的源代码在最后</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>首先在服务器上安装<code>dotnet</code>,微软有安装教程:<a href="https://docs.microsoft.com/zh-cn/dotnet/core/install/sdk?pivots=os-linux">https://docs.microsoft.com/zh-cn/dotnet/core/install/sdk?pivots=os-linux</a></p><p>将项目克隆到本地,进入项目所在目录 <code>$ cd /baidu-tongji/helper.console/</code></p><p>修改配置文件的参数<code>$ vi config.json</code></p><p>启动:<code>$ dotnet run</code></p><p>如果需要后台启动:<code>$ nohup dotnet run &amp;</code></p><p>按回车键即可,日志文件保存在<code>&quot;nobup.out&quot;</code>和<code>log.txt</code>中</p><p>这里明确一下服务器的返回内容,本来设计是JSON直接返回的,因为<code>JavaScript</code>解析JSON格式的数据比<code>C#</code>方便,但是考虑到跨域请求的问题,还是直接改成了外部脚本,因此服务器返回的脚本.只需要在网页中添加服务器的脚本引用即可.<code>`&lt;script src=&quot;http://yourDomain.com:1234&quot;&gt;&lt;/script&gt;</code></p><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p>首先在服务器上运行<code>$ dotnet run</code></p><p><img src="4.png" alt=""></p><p>然后打开<code>demo.html</code>,就能直接看到结果啦.</p><p><img src="5.png" alt=""></p><h2 id="项目地址-https-github-com-QiQiWan-baidu-tongji-git"><a href="#项目地址-https-github-com-QiQiWan-baidu-tongji-git" class="headerlink" title="项目地址: https://github.com/QiQiWan/baidu-tongji.git"></a><a href="https://github.com/QiQiWan/baidu-tongji.git">项目地址: https://github.com/QiQiWan/baidu-tongji.git</a></h2><h2 id="WebHelper-cs"><a href="#WebHelper-cs" class="headerlink" title="WebHelper.cs"></a>WebHelper.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br></pre></td><td class="code"><pre><code class="hljs C#"><br><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> System.Net;<br><span class="hljs-keyword">using</span> System.Net.Sockets;<br><span class="hljs-keyword">using</span> System.Security.Cryptography;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Text.RegularExpressions;<br><span class="hljs-keyword">using</span> Fleck;<br><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">helper.console</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">WebSocketThread</span> : <span class="hljs-title">myThread</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> Socket sc;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">WebSocketThread</span>(<span class="hljs-params">Socket socket</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            sc = socket;<br>        &#125;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[<span class="hljs-number">1024</span>];<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Run</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Log.WriteLine(Common.GetTime() + <span class="hljs-string">&quot;客户端:&quot;</span> + sc.RemoteEndPoint.ToString() + <span class="hljs-string">&quot;已连接&quot;</span>);<br><br>            <span class="hljs-comment">//握手</span><br>            <span class="hljs-built_in">int</span> length = sc.Receive(buffer);<span class="hljs-comment">//接受客户端握手信息</span><br>            sc.Send(SocketPacker.PackHandShakeData(SocketPacker.GetSecKeyAccetp(buffer, length)));<br>            Log.WriteLine(Common.GetTime() + <span class="hljs-string">&quot;已经发送握手协议&quot;</span>);<br><br>            <span class="hljs-comment">//发送数据</span><br>            <span class="hljs-built_in">string</span> sendMsg = Program.GetStatics();<br>            sc.Send(SocketPacker.PackData(sendMsg));<br>            Log.WriteLine(Common.GetTime() + <span class="hljs-string">&quot;已发送：“&quot;</span> + sendMsg);<br><br><br>            Log.WriteLine(<span class="hljs-string">&quot;----------------------------------------------------------------------------------------------------&quot;</span>);<br>            <span class="hljs-keyword">this</span>.Abort();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BeforeAbort</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            sc.Close();<br>            Program.GetServerHelper().RemoveSocket(sc);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">HttpThread</span>: <span class="hljs-title">myThread</span>&#123;<br>        <span class="hljs-keyword">private</span> HttpListenerContext result;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HttpThread</span>(<span class="hljs-params">HttpListenerContext result</span>)</span>&#123;<br>            <span class="hljs-keyword">this</span>.result = result;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Run</span>(<span class="hljs-params"></span>)</span>&#123;<br>            HttpServer.SetResponse(result);<br>            <span class="hljs-comment">//Abort();</span><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BeforeAbort</span>(<span class="hljs-params"></span>)</span>&#123;&#125;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取百度接口的请求类</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">BaiduWebHelper</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> HttpWebRequest request;<br>        <span class="hljs-keyword">private</span> HttpWebResponse response;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> ACCESS_TOKEN;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> siteId;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> RequestUrl = <span class="hljs-string">&quot;https://openapi.baidu.com/rest/2.0/tongji/report/getData?&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> resultJson = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">BaiduWebHelper</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">this</span>.ACCESS_TOKEN = Common.GetAccessToken();<br>            <span class="hljs-keyword">this</span>.siteId = Common.site_id;<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取百度API返回的JSON</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">GetResult</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> url = RequestUrl +<br>                <span class="hljs-string">&quot;access_token=&quot;</span> + ACCESS_TOKEN + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;site_id=&quot;</span> + siteId + <span class="hljs-string">&quot;&amp;&quot;</span>;<br>            GetUVArgus getUVArgus = <span class="hljs-keyword">new</span> GetUVArgus(<span class="hljs-string">&quot;20200301&quot;</span>);<br>            <span class="hljs-built_in">string</span> result = <span class="hljs-string">&quot;&quot;</span>;<br><br>            <span class="hljs-comment">//获取RV    </span><br>            request = HttpWebRequest.Create(url + GetRealVisittor.GetMethod()) <span class="hljs-keyword">as</span> HttpWebRequest;<br>            request.Method = <span class="hljs-string">&quot;GET&quot;</span>;<br>            response = request.GetResponse() <span class="hljs-keyword">as</span> HttpWebResponse;<br>            result += ReadWebStream(response.GetResponseStream()) + <span class="hljs-string">&quot;, &quot;</span>;<br>            <span class="hljs-comment">//获取UV</span><br>            url = url + getUVArgus.ToString();<br>            request = HttpWebRequest.Create(url) <span class="hljs-keyword">as</span> HttpWebRequest;<br>            request.Method = <span class="hljs-string">&quot;GET&quot;</span>;<br>            response = request.GetResponse() <span class="hljs-keyword">as</span> HttpWebResponse;<br>            result += ReadWebStream(response.GetResponseStream());<br><br>            resultJson = result;<br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 读取web响应流</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;stream&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ReadWebStream</span>(<span class="hljs-params">Stream stream</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            StreamReader reader = <span class="hljs-keyword">new</span> StreamReader(stream);<br>            <span class="hljs-built_in">string</span> result = reader.ReadToEnd();<br>            stream.Close();<br>            reader.Close();<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> token过期后换取新的token</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">RefreshToken</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">if</span> (Common.GetRefreshToken() == <span class="hljs-literal">null</span>)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;未给定更新权限!&quot;</span>);<br>            <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;http://openapi.baidu.com/oauth/2.0/token?grant_type=refresh_token&amp;&quot;</span>;<br>            url = url + <span class="hljs-string">&quot;refresh_token=&quot;</span> + Common.GetRefreshToken() + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;client_secret=&quot;</span> + Common.client_secret + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;client_id=&quot;</span> + Common.client_id;<br>            request = HttpWebRequest.Create(url) <span class="hljs-keyword">as</span> HttpWebRequest;<br>            response = request.GetResponse() <span class="hljs-keyword">as</span> HttpWebResponse;<br>            <span class="hljs-built_in">string</span> result = ReadWebStream(response.GetResponseStream());<br>            <span class="hljs-built_in">string</span> REFRESH_TOKEN = Common.GetJsonValue(result, <span class="hljs-string">&quot;refresh_token&quot;</span>);<br>            <span class="hljs-keyword">this</span>.ACCESS_TOKEN = Common.GetJsonValue(result, <span class="hljs-string">&quot;access_token&quot;</span>);<br>            Common.UpdateToken(REFRESH_TOKEN, ACCESS_TOKEN);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">HttpServer</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> HttpListener server;<br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">string</span>&gt; domainList</span> = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">HttpThread</span>&gt; threadPools</span> = <span class="hljs-keyword">new</span> List&lt;HttpThread&gt;();<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HttpServer</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            server = <span class="hljs-keyword">new</span> HttpListener();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> domainList)<br>                server.Prefixes.Add(item);<br>            server.Start();<br>            <span class="hljs-comment">//IAsyncResult result = server.BeginGetContext(new AsyncCallback(SetResponse), server);</span><br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 阻塞进程</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WaitRequest</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br>                HttpListenerContext result = server.GetContext();<br>                HttpThread temp = <span class="hljs-keyword">new</span> HttpThread(result);<br>                AddThread(temp);<br>                temp.Start();<br>                threadPools.Remove(temp);<br>            &#125;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetResponse</span>(<span class="hljs-params">HttpListenerContext result</span>)</span>&#123;<br>            HttpListenerRequest request = result.Request;<br>            Log.WriteLine(Common.GetTime() + request.RemoteEndPoint.Address + <span class="hljs-string">&quot;  已连接&quot;</span>);<br><br>            HttpListenerResponse response = result.Response;<br>            <span class="hljs-built_in">string</span> responseString = Program.GetStatics();<br>            <span class="hljs-keyword">if</span> (responseString.Contains(<span class="hljs-string">&quot;error&quot;</span>))<br>                Program.UpdateToken();<br>            responseString = Program.GetStatics();<br>            <span class="hljs-built_in">byte</span>[] buffer = System.Text.Encoding.UTF8.GetBytes(responseString);<br>            response.ContentLength64 = buffer.Length;<br>            System.IO.Stream output = response.OutputStream;<br>            output.Write(buffer, <span class="hljs-number">0</span>, buffer.Length);<br>            output.Close();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetResponse</span>(<span class="hljs-params">IAsyncResult result</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            HttpListener listener = (HttpListener)result.AsyncState;<br>            HttpListenerContext context = listener.EndGetContext(result);<br>            HttpListenerRequest request = context.Request;<br>            Log.WriteLine(Common.GetTime() + request.RemoteEndPoint.Address + <span class="hljs-string">&quot;  已连接&quot;</span>);<br><br>            HttpListenerResponse response = context.Response;<br>            <span class="hljs-built_in">string</span> responseString = Program.GetStatics();<br>            <span class="hljs-keyword">if</span> (responseString.Contains(<span class="hljs-string">&quot;error&quot;</span>))<br>                Program.UpdateToken();<br>            responseString = Program.GetStatics();<br>            <span class="hljs-built_in">byte</span>[] buffer = System.Text.Encoding.UTF8.GetBytes(responseString);<br>            response.ContentLength64 = buffer.Length;<br>            System.IO.Stream output = response.OutputStream;<br>            output.Write(buffer, <span class="hljs-number">0</span>, buffer.Length);<br>            output.Close();<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Stop</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            server.Stop();<br>            server.Close();<br>            server.Abort();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddDomain</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> domain</span>)</span> =&gt; domainList.Add(domain);<br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddThread</span>(<span class="hljs-params">HttpThread thread</span>)</span>&#123;<br>            <span class="hljs-keyword">this</span>.threadPools.Add(thread);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">WebSocketServerHelper</span><br>    &#123;<br>        <span class="hljs-comment">//套接字服务池 </span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">Socket</span>&gt; SocketPools</span> = <span class="hljs-keyword">new</span> List&lt;Socket&gt;();<br>        <span class="hljs-keyword">private</span> WebSocketServer server;<br><br>        Socket Socket;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">WebSocketServerHelper</span>(<span class="hljs-params">IpAdress ipadress</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;ws://&quot;</span> + ipadress.ToString();<br>            server = <span class="hljs-keyword">new</span> WebSocketServer(url);<br>            IPEndPoint localIEP = <span class="hljs-keyword">new</span> IPEndPoint(IPAddress.Any, ipadress.port);<br>            Socket = <span class="hljs-keyword">new</span> Socket(localIEP.Address.AddressFamily, SocketType.Stream, ProtocolType.Tcp);<br>            Socket.Bind(localIEP);<br>            Socket.Listen(<span class="hljs-number">100</span>);<span class="hljs-comment">//同时允许100个监听套接字</span><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Socket <span class="hljs-title">GetSocket</span>(<span class="hljs-params"></span>)</span> =&gt; Socket.Accept();<br>        <span class="hljs-comment">//配合主程序采用泛型参数</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">RemoveSocket</span>(<span class="hljs-params">Socket socket</span>)</span> =&gt; SocketPools.Remove((Socket)socket);<br>    &#125;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">SocketPacker</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">byte_to_string</span>(<span class="hljs-params"><span class="hljs-built_in">byte</span>[] b</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> s = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">byte</span> _b <span class="hljs-keyword">in</span> b)<br>            &#123;<br>                s += _b.ToString();<br>            &#125;<br>            <span class="hljs-keyword">return</span> s;<br>        &#125;<br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 打包握手信息</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;secKeyAccept&quot;&gt;</span>Sec-WebSocket-Accept<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>数据包<span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">PackHandShakeData</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> secKeyAccept</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">var</span> responseBuilder = <span class="hljs-keyword">new</span> StringBuilder();<br>            responseBuilder.Append(<span class="hljs-string">&quot;HTTP/1.1 101 Switching Protocols&quot;</span> + Environment.NewLine);<br>            responseBuilder.Append(<span class="hljs-string">&quot;Upgrade: websocket&quot;</span> + Environment.NewLine);<br>            responseBuilder.Append(<span class="hljs-string">&quot;Connection: Upgrade&quot;</span> + Environment.NewLine);<br>            <span class="hljs-comment">//responseBuilder.Append(&quot;Sec-WebSocket-Accept: &quot; + secKeyAccept + Environment.NewLine + Environment.NewLine);</span><br>            <span class="hljs-comment">//如果把上一行换成下面两行，才是thewebsocketprotocol-17协议，但居然握手不成功，目前仍没弄明白！</span><br>            responseBuilder.Append(<span class="hljs-string">&quot;Sec-WebSocket-Accept: &quot;</span> + secKeyAccept + Environment.NewLine);<br>            responseBuilder.Append(<span class="hljs-string">&quot;Sec-WebSocket-Protocol: chat&quot;</span>);<br><br>            <span class="hljs-keyword">return</span> Encoding.UTF8.GetBytes(responseBuilder.ToString());<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 生成Sec-WebSocket-Accept</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;handShakeText&quot;&gt;</span>客户端握手信息<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>Sec-WebSocket-Accept<span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetSecKeyAccetp</span>(<span class="hljs-params"><span class="hljs-built_in">byte</span>[] handShakeBytes, <span class="hljs-built_in">int</span> bytesLength</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> handShakeText = Encoding.UTF8.GetString(handShakeBytes, <span class="hljs-number">0</span>, bytesLength);<br>            <span class="hljs-built_in">string</span> key = <span class="hljs-built_in">string</span>.Empty;<br>            Regex r = <span class="hljs-keyword">new</span> Regex(<span class="hljs-string">@&quot;Sec\-WebSocket\-Key:(.*?)\r\n&quot;</span>);<br>            Match m = r.Match(handShakeText);<br>            <span class="hljs-keyword">if</span> (m.Groups.Count != <span class="hljs-number">0</span>)<br>            &#123;<br>                key = Regex.Replace(m.Value, <span class="hljs-string">@&quot;Sec\-WebSocket\-Key:(.*?)\r\n&quot;</span>, <span class="hljs-string">&quot;$1&quot;</span>).Trim();<br>            &#125;<br>            <span class="hljs-built_in">byte</span>[] encryptionString = SHA1.Create().ComputeHash(Encoding.ASCII.GetBytes(key + <span class="hljs-string">&quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot;</span>));<br>            <span class="hljs-keyword">return</span> Convert.ToBase64String(encryptionString);<br>        &#125;<br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 解析客户端数据包</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;recBytes&quot;&gt;</span>服务器接收的数据包<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;recByteLength&quot;&gt;</span>有效数据长度<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">AnalyticData</span>(<span class="hljs-params"><span class="hljs-built_in">byte</span>[] recBytes, <span class="hljs-built_in">int</span> recByteLength</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">if</span> (recByteLength &lt; <span class="hljs-number">2</span>) &#123; <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty; &#125;<br><br>            <span class="hljs-built_in">bool</span> fin = (recBytes[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0x80</span>) == <span class="hljs-number">0x80</span>; <span class="hljs-comment">// 1bit，1表示最后一帧  </span><br>            <span class="hljs-keyword">if</span> (!fin)<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<span class="hljs-comment">// 超过一帧暂不处理 </span><br>            &#125;<br><br>            <span class="hljs-built_in">bool</span> mask_flag = (recBytes[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0x80</span>) == <span class="hljs-number">0x80</span>; <span class="hljs-comment">// 是否包含掩码  </span><br>            <span class="hljs-keyword">if</span> (!mask_flag)<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<span class="hljs-comment">// 不包含掩码的暂不处理</span><br>            &#125;<br><br>            <span class="hljs-built_in">int</span> payload_len = recBytes[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0x7F</span>; <span class="hljs-comment">// 数据长度  </span><br><br>            <span class="hljs-built_in">byte</span>[] masks = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[<span class="hljs-number">4</span>];<br>            <span class="hljs-built_in">byte</span>[] payload_data;<br><br>            <span class="hljs-keyword">if</span> (payload_len == <span class="hljs-number">126</span>)<br>            &#123;<br>                Array.Copy(recBytes, <span class="hljs-number">4</span>, masks, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                payload_len = (UInt16)(recBytes[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span> | recBytes[<span class="hljs-number">3</span>]);<br>                payload_data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[payload_len];<br>                Array.Copy(recBytes, <span class="hljs-number">8</span>, payload_data, <span class="hljs-number">0</span>, payload_len);<br><br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (payload_len == <span class="hljs-number">127</span>)<br>            &#123;<br>                Array.Copy(recBytes, <span class="hljs-number">10</span>, masks, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                <span class="hljs-built_in">byte</span>[] uInt64Bytes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[<span class="hljs-number">8</span>];<br>                <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>                &#123;<br>                    uInt64Bytes[i] = recBytes[<span class="hljs-number">9</span> - i];<br>                &#125;<br>                UInt64 len = BitConverter.ToUInt64(uInt64Bytes, <span class="hljs-number">0</span>);<br><br>                payload_data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[len];<br>                <span class="hljs-keyword">for</span> (UInt64 i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>                &#123;<br>                    payload_data[i] = recBytes[i + <span class="hljs-number">14</span>];<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                Array.Copy(recBytes, <span class="hljs-number">2</span>, masks, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                payload_data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[payload_len];<br>                Array.Copy(recBytes, <span class="hljs-number">6</span>, payload_data, <span class="hljs-number">0</span>, payload_len);<br><br>            &#125;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; payload_len; i++)<br>            &#123;<br>                payload_data[i] = (<span class="hljs-built_in">byte</span>)(payload_data[i] ^ masks[i % <span class="hljs-number">4</span>]);<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> Encoding.UTF8.GetString(payload_data);<br>        &#125;<br><br><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> 打包服务器数据</span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;message&quot;&gt;</span>数据<span class="hljs-doctag">&lt;/param&gt;</span></span><br>        <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>数据包<span class="hljs-doctag">&lt;/returns&gt;</span></span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">PackData</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> message</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">byte</span>[] contentBytes = <span class="hljs-literal">null</span>;<br>            <span class="hljs-built_in">byte</span>[] temp = Encoding.UTF8.GetBytes(message);<br><br>            <span class="hljs-keyword">if</span> (temp.Length &lt; <span class="hljs-number">126</span>)<br>            &#123;<br>                contentBytes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[temp.Length + <span class="hljs-number">2</span>];<br>                contentBytes[<span class="hljs-number">0</span>] = <span class="hljs-number">0x81</span>;<br>                contentBytes[<span class="hljs-number">1</span>] = (<span class="hljs-built_in">byte</span>)temp.Length;<br>                Array.Copy(temp, <span class="hljs-number">0</span>, contentBytes, <span class="hljs-number">2</span>, temp.Length);<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (temp.Length &lt; <span class="hljs-number">0xFFFF</span>)<br>            &#123;<br>                contentBytes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[temp.Length + <span class="hljs-number">4</span>];<br>                contentBytes[<span class="hljs-number">0</span>] = <span class="hljs-number">0x81</span>;<br>                contentBytes[<span class="hljs-number">1</span>] = <span class="hljs-number">126</span>;<br>                contentBytes[<span class="hljs-number">2</span>] = (<span class="hljs-built_in">byte</span>)(temp.Length &amp; <span class="hljs-number">0xFF</span>);<br>                contentBytes[<span class="hljs-number">3</span>] = (<span class="hljs-built_in">byte</span>)(temp.Length &gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">0xFF</span>);<br>                Array.Copy(temp, <span class="hljs-number">0</span>, contentBytes, <span class="hljs-number">4</span>, temp.Length);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-comment">// 暂不处理超长内容  </span><br>            &#125;<br><br>            <span class="hljs-keyword">return</span> contentBytes;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取UV的请求</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Method为请求保留字</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">GetUVArgus</span><br>    &#123;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Method = <span class="hljs-string">&quot;overview/getTimeTrendRpt&quot;</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> StartDate = <span class="hljs-string">&quot;20200301&quot;</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> EndDate;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> Metrics = <span class="hljs-string">&quot;visitor_count&quot;</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">GetUVArgus</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> startDate</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">this</span>.StartDate = startDate;<br>            EndDate = GetDateString();<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetDateString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            DateTime now = DateTime.Now;<br>            <span class="hljs-built_in">string</span> month = now.Month &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&quot;0&quot;</span> + now.Month.ToString() : now.Month.ToString();<br>            <span class="hljs-built_in">string</span> day = now.Day &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&quot;0&quot;</span> + now.Day : now.Day.ToString();<br>            <span class="hljs-keyword">return</span> now.Year + month + day;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;start_date=&quot;</span> + StartDate + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;end_date=&quot;</span> + EndDate + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;method=&quot;</span> + Method + <span class="hljs-string">&quot;&amp;&quot;</span> +<br>                <span class="hljs-string">&quot;metrics=&quot;</span> + Metrics;<br>            <span class="hljs-keyword">return</span> url;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 不需要加什么,定义一个Method即可</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">GetRealVisittor</span><br>    &#123;<br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Method = <span class="hljs-string">&quot;trend/latest/a&quot;</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetMethod</span>(<span class="hljs-params"></span>)</span> =&gt; <span class="hljs-string">&quot;method=&quot;</span> + Method;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 指定请求类型,UV访问总数,RV实时在线</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-built_in">enum</span> GetWebType &#123; UV, RV &#125;;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 格式化的IP地址包括port</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">IpAdress</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ip;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> port;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">IpAdress</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> ip, <span class="hljs-built_in">int</span> port</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">this</span>.ip = ip;<br>            <span class="hljs-keyword">this</span>.port = port;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">return</span> ip + port.ToString();<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">enum</span> Protocol &#123; NoSSL, SSL &#125;;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>百度统计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>土方工程-边坡土方量计算程序设计</title>
    <link href="/post/%E5%9C%9F%E6%96%B9%E5%B7%A5%E7%A8%8B-%E8%BE%B9%E5%9D%A1%E5%9C%9F%E6%96%B9%E9%87%8F%E8%AE%A1%E7%AE%97/"/>
    <url>/post/%E5%9C%9F%E6%96%B9%E5%B7%A5%E7%A8%8B-%E8%BE%B9%E5%9D%A1%E5%9C%9F%E6%96%B9%E9%87%8F%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="程序更新-V1-1"><a href="#程序更新-V1-1" class="headerlink" title="程序更新: V1.1"></a>程序更新: V1.1</h2><ol><li>新增加了功能:计算方格点内所有的开挖和填充的土方量</li><li>计算精度降低,在所有计算过程中对计算结果保留 3 位小数</li></ol><a id="more"></a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在土木工程施工的土方问题当中,边坡土方计算是一个重点和难点.何为边坡土方计算?如图所示</p><p><img src="1.jpg" alt="土方边坡"></p><p>土方计算主要是土地平整的计算,其包括平整时的土方挖填和平整后的边坡修建.</p><p>在土地平整之后需要根据平面周围地形进行放坡处理.放坡处理时会涉及到边坡的挖填问题,因此需要根据施工高度和周围地形计算边坡土方的施工量.</p><h2 id="假设"><a href="#假设" class="headerlink" title="假设"></a>假设</h2><p>由于边坡放坡的坡脚线与平面高度以及周围地形的高程有关,现有的条件只能通过格点的高程来确定相应的施工高度,无法对平面周围的其他位置高程进行有效测量,同时,由于原地形地貌不可能保持沿单方向线性变化,因此根据有限条件简化模型:</p><ol><li>假设格子内的施工高度都沿线性变化</li><li>格点外的周边地形高程与格点高程相同</li><li>相邻格点连线,及其外侧地形高程按照格点坡降均匀变化</li></ol><p>基于这三个假设可以忽略不规则的地形地貌的影响,同时一定程度上对放坡地形进行了预测.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>土方工程先要进行土地平整,在网格内土地平整的施工量有相应的计算公式.土地平整完后为保证边坡稳定需要对边坡进行放坡,因此边坡也存在挖填问题.</p><p>边坡挖填土方平面示意图如图所示:</p><p><img src="2.jpg" alt="土方边坡"><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="橙子杀手的博客-边坡土方量计算">[2]</span></a></sup></p><p>示例格点的计算模型如下图所示:</p><p><img src="3.jpg" alt="土方边坡"><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="橙子杀手的博客-边坡土方量计算">[2]</span></a></sup></p><p>由图可得,挖填边坡宽度由施工高度决定,关于施工高度的计算可我的其他文章:<a href='https://eatrice.top/post/2020-02-18-%E5%9C%9F%E6%9C%A8%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5-%E5%AF%BC%E8%AE%BA/#场地的设计标高'>土木工程施工-导论</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="2020-02-18-土木工程施工-导论">[1]</span></a></sup></p><p>得到施工高度后,已知坡的宽高比$m$,相邻格点的间距$a$可以将计算边坡的施工高度问题转化成求解大量几何体形状体积的问题。</p><h3 id="土地平整施工量计算"><a href="#土地平整施工量计算" class="headerlink" title="土地平整施工量计算"></a>土地平整施工量计算</h3><h4 id="所有角点的符号都相同"><a href="#所有角点的符号都相同" class="headerlink" title="所有角点的符号都相同"></a>所有角点的符号都相同</h4>当四个角点的符号都相同时,可直接把根据施工高度计算:$V = \frac{{{a^2}}}{4}({h_1} + {h_2} + {h_3} + {h_4})$#### 角点有正有负假定角点之间的连线都为直线,其体积公式为:${V_w} = \frac{{{a^2}}}{4}\frac{{\sum {|{h_w}|} }}{{\sum {|{h_i}|} }}$<h3 id="角点"><a href="#角点" class="headerlink" title="角点"></a>角点</h3><p>其中四个方格顶点的体积问题计算可简化成计算底边为正方形四棱锥体积问题，其中底边变长等于$m{h_{ij} }$,其中 m 为施工放坡的宽高比，${h_{ij} }$为计算格点的施工高度。</p>因此角点开挖体积的计算公式为：$V = {(m{h_{ij}})^2}*{h_{ij}}*\frac{1}{3}$其符号与施工高度同号<h3 id="一端格点在零线上"><a href="#一端格点在零线上" class="headerlink" title="一端格点在零线上"></a>一端格点在零线上</h3><p>一端格点在零线上即有一个格点的施工高度为 0，即可将该段的边坡工程计算简化成计算底面高度为另一侧施工高度，底面宽度为放坡底宽，高为相邻格点边长的三棱锥计算。</p>因此该类边的体积计算公式为：$V = mh_{ij}^2*\frac{1}{2}*a*\frac{1}{3}*\frac{{|{h_{ij} }|} }{{{h_{ij} }} }$其中$\frac{{|{h_{ij} }|} }{{{h_{ij} }} }$的作用是保证计算出的体积符号与施工高度符号一致<h3 id="两个格点的值均不为零"><a href="#两个格点的值均不为零" class="headerlink" title="两个格点的值均不为零"></a>两个格点的值均不为零</h3><p>此处有两种情况，第一种是两个格点同号，另一种异号</p><h4 id="关于同号格点"><a href="#关于同号格点" class="headerlink" title="关于同号格点"></a>关于同号格点</h4>同号格点可以直接按照三棱台计算，一侧底面面积${F_1} = \frac{1}{2}*mh_1^2$,另一侧底面面积${F_2} = \frac{1}{2}*mh_2^2$,则其中间截面面积为：${F_0} = \frac{{{F_1} + {F_2} }}{2}$可得棱台的体积计算公式：$$\begin{array}{l}V = \frac{a}{6}({F_1} + {F_2} + 4{F_0})\\ = a{F_0}\end{array}$$<h4 id="关于异号格点"><a href="#关于异号格点" class="headerlink" title="关于异号格点"></a>关于异号格点</h4>零点其在中间，其施工高度既有开挖部分也有填充部分，因此需要分别计算，，首先按照线性插值法，找到零点位置：${a_1} = \frac{{a{h_1} }}{{|{h_1}| + |{h_2}|} }$对应的格点的施工体积为：$V = mh_1^2*\frac{1}{2}*{a_1}*\frac{1}{3}$<p>计算简要示意图如图所示：</p><p><img src="4.jpg" alt="土方边坡"><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="橙子杀手的博客-边坡土方量计算">[2]</span></a></sup></p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><ol><li>先对相关参数进行读取:坡的宽高比 m，相邻格点间距 a，方格点的行数 raw，方格点的列数 col。</li><li>每四个格点单独提取出来</li><li>设计方格内的计算程序</li><li>先计算方格内的土方工程量</li><li>对行数和列数生成表格，读取各格点的施工高度</li><li>提取四个角点的施工高度分别计算</li><li>提取四边</li><li>设计计算每条边的施工体积</li><li>设计开挖填充工程量的数据结构模型 work</li></ol><h2 id="源程序"><a href="#源程序" class="headerlink" title="源程序"></a>源程序</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-class">.deter</span> &#123;</span><br>      width: 50px;<br>      height: 50px;<br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>计算挖方量<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>每行有多少角点?<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;colCount&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>有多少行?<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;rowCount&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span> 坡的宽高比:<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;M&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span> 方格边长a:<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;A&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span>生成<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> start = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;start&quot;</span>);</span><br><span class="javascript">    <span class="hljs-keyword">var</span> m = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> a = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> d = <span class="hljs-literal">null</span>;</span><br><span class="javascript">    start.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="javascript">      <span class="hljs-comment">//document.removeChild(document.getElementById(&#x27;forms&#x27;));</span></span><br><br><span class="javascript">      <span class="hljs-keyword">var</span> row = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;rowCount&quot;</span>).value;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> col = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;colCount&quot;</span>).value;</span><br><span class="javascript">      m = <span class="hljs-built_in">parseFloat</span>(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;M&quot;</span>).value);</span><br><span class="javascript">      a = <span class="hljs-built_in">parseFloat</span>(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;A&quot;</span>).value);</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (row == <span class="hljs-string">&quot;&quot;</span> || col == <span class="hljs-string">&quot;&quot;</span> || m == <span class="hljs-string">&quot;&quot;</span> || a == <span class="hljs-string">&quot;&quot;</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="javascript">      <span class="hljs-keyword">else</span> createtables(row, col);</span><br>    &#125;);<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createtables</span>(<span class="hljs-params">row, col</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-comment">//搭建界面</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> determinants = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(row);</span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; row; i++) determinants[i] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(col);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> form = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;table&quot;</span>);</span><br><span class="javascript">      form.setAttribute(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;forms&quot;</span>);</span><br><span class="javascript">      <span class="hljs-built_in">document</span>.body.appendChild(form);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> tr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(row);</span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; row; i++) &#123;</span><br><span class="javascript">        tr[i] = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);</span><br>        form.appendChild(tr[i]);<br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; col; j++) &#123;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);</span><br>          tr[i].appendChild(td);<br><span class="javascript">          determinants[i][j] = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);</span><br><span class="javascript">          determinants[i][j].setAttribute(<span class="hljs-string">&quot;class&quot;</span>, <span class="hljs-string">&quot;deter&quot;</span>);</span><br><span class="javascript">          determinants[i][j].setAttribute(<span class="hljs-string">&quot;type&quot;</span>, <span class="hljs-string">&quot;number&quot;</span>);</span><br>          td.appendChild(determinants[i][j]);<br>        &#125;<br>      &#125;<br>      d = determinants;<br><br><span class="javascript">      <span class="hljs-keyword">var</span> count = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);</span><br><span class="javascript">      count.setAttribute(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;count&quot;</span>);</span><br>      form.appendChild(count);<br><br><span class="javascript">      count.appendChild(<span class="hljs-built_in">document</span>.createTextNode(<span class="hljs-string">&quot;计算&quot;</span>));</span><br><span class="javascript">      <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="javascript">      result.setAttribute(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;result&quot;</span>);</span><br><span class="javascript">      <span class="hljs-built_in">document</span>.body.appendChild(result);</span><br><span class="javascript">      count.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br>        calculation(row, col, result);<br>      &#125;;<br>    &#125;<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calculation</span>(<span class="hljs-params">row, col, result</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-comment">//总算法</span></span><br><span class="javascript">      <span class="hljs-comment">//安全检查</span></span><br><span class="javascript">      d.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (item.value == <span class="hljs-string">&quot;&quot;</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br>      &#125;);<br><span class="javascript">      <span class="hljs-keyword">var</span> total = <span class="hljs-keyword">new</span> work();</span><br>      total.init(0, 0);<br><br><span class="javascript">      <span class="hljs-comment">//记录四个角点位置</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> corners = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(</span><br>        d[0][0].value,<br>        d[0][col - 1].value,<br>        d[row - 1][0].value,<br>        d[row - 1][col - 1].value<br>      );<br><br><span class="javascript">      <span class="hljs-comment">//提取四条边</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> up = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(),</span><br><span class="javascript">        left = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(),</span><br><span class="javascript">        buttom = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(),</span><br><span class="javascript">        right = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();</span><br><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; row; i++) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; col; j++) &#123;</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>) up.push(<span class="hljs-built_in">parseFloat</span>(d[i][j].value));</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (j == <span class="hljs-number">0</span>) left.push(<span class="hljs-built_in">parseFloat</span>(d[i][j].value));</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (i == row - <span class="hljs-number">1</span>) buttom.push(<span class="hljs-built_in">parseFloat</span>(d[i][j].value));</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (j == col - <span class="hljs-number">1</span>) right.push(<span class="hljs-built_in">parseFloat</span>(d[i][j].value));</span><br>        &#125;<br>      &#125;<br><br><span class="javascript">      <span class="hljs-keyword">var</span> sides = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(up, buttom, left, right);</span><br><br><span class="javascript">      <span class="hljs-comment">//提取格点</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> latticeResult = <span class="hljs-keyword">new</span> work().init(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);</span><br><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; row - <span class="hljs-number">1</span>; i++) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; col - <span class="hljs-number">1</span>; j++) &#123;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> temp = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(</span><br>            d[i][j].value,<br>            d[i + 1][j].value,<br>            d[i][j + 1].value,<br>            d[i + 1][j + 1].value<br>          );<br>          latticeResult.add(CalInGrid(temp));<br><span class="javascript">          <span class="hljs-built_in">console</span>.log(latticeResult.toString(<span class="hljs-string">&quot;格点&quot;</span>));</span><br>        &#125;<br>      &#125;<br><br><span class="javascript">      <span class="hljs-comment">//计算四个角点</span></span><br><span class="javascript">      corners.forEach(<span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(total.toString(<span class="hljs-string">&quot;角点&quot;</span>));</span><br><span class="javascript">        total.add(CalCorner(<span class="hljs-built_in">parseFloat</span>(h)));</span><br>      &#125;);<br><span class="javascript">      <span class="hljs-comment">//计算四条边</span></span><br><span class="javascript">      sides.forEach(<span class="hljs-function"><span class="hljs-params">side</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(total.toString(<span class="hljs-string">&quot;边坡&quot;</span>));</span><br>        total.add(CalSide(side));<br>      &#125;);<br><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(total.toString(<span class="hljs-string">&quot;整个边坡&quot;</span>));</span><br><span class="javascript">      <span class="hljs-comment">//输出结果</span></span><br>      result.innerHTML =<br><span class="javascript">        latticeResult.toString(<span class="hljs-string">&quot;格子&quot;</span>) +</span><br><span class="javascript">        <span class="hljs-string">&quot;&lt;br /&gt; &quot;</span> +</span><br><span class="javascript">        total.toString(<span class="hljs-string">&quot;整个边坡&quot;</span>);</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//计算一条边上的土方量</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CalSide</span>(<span class="hljs-params">side</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> total = <span class="hljs-keyword">new</span> work();</span><br>      total.init(0, 0);<br><span class="javascript">      <span class="hljs-keyword">var</span> len = side.length;</span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;</span><br>        temp = CalLattice(side[i], side[i + 1]);<br>        total.add(temp);<br>      &#125;<br><span class="javascript">      <span class="hljs-keyword">return</span> total;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//计算相邻格点的挖填土方量</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CalLattice</span>(<span class="hljs-params">p1, p2</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (p1 == <span class="hljs-number">0</span> &amp;&amp; p2 == <span class="hljs-number">0</span>) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> work();</span><br>      &#125;<br><span class="javascript">      <span class="hljs-keyword">if</span> (checkSign(p1, p2)) &#123;</span><br><span class="javascript">        <span class="hljs-comment">//如果角点同号</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> V;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (p1 * p2 == <span class="hljs-number">0</span>) &#123;</span><br><span class="javascript">          <span class="hljs-comment">//有一个是0格点,按照三角锥计算</span></span><br><span class="javascript">          <span class="hljs-keyword">var</span> h = checkZero(p1, p2);</span><br><span class="javascript">          <span class="hljs-keyword">var</span> sign = <span class="hljs-built_in">Math</span>.abs(h) / h; <span class="hljs-comment">//保存符号</span></span><br>          V = (a / 6) * h * h * m * sign;<br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">          <span class="hljs-comment">//按照三棱台计算</span></span><br><span class="javascript">          <span class="hljs-keyword">var</span> sign = <span class="hljs-built_in">Math</span>.abs(p1) / p1; <span class="hljs-comment">//保存符号</span></span><br><span class="javascript">          <span class="hljs-keyword">var</span> F1 = (<span class="hljs-number">1</span> / <span class="hljs-number">2</span>) * m * p1 * p1;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> F2 = (<span class="hljs-number">1</span> / <span class="hljs-number">2</span>) * m * p2 * p2;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> F0 = (F1 + F2) / <span class="hljs-number">2</span>;</span><br>          V = (a / 6) * (F1 + F2 + 4 * F0) * sign;<br>        &#125;<br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> work().set(V);</span><br><span class="javascript">      &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">        <span class="hljs-comment">//如果角点异号需要线性插值零点</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> ap1 = (p1 * a) / (<span class="hljs-built_in">Math</span>.abs(p1) + <span class="hljs-built_in">Math</span>.abs(p2)); <span class="hljs-comment">//格点1分到的边长</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> ap2 = (p2 * a) / (<span class="hljs-built_in">Math</span>.abs(p1) + <span class="hljs-built_in">Math</span>.abs(p2)); <span class="hljs-comment">//格点2分到的边长</span></span><br><span class="javascript">        <span class="hljs-comment">// var sign1 = p1 / Math.abs(p1);</span></span><br><span class="javascript">        <span class="hljs-comment">// var sign2 = p2 / Math.abs(p2);</span></span><br><span class="javascript">        <span class="hljs-comment">//ap中带了正负号,这一段不要</span></span><br><br><span class="javascript">        <span class="hljs-keyword">var</span> V1 = (ap1 / <span class="hljs-number">6</span>) * m * p1 * p1;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> V2 = (ap2 / <span class="hljs-number">6</span>) * m * p2 * p2;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> work();</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (V1 &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> result.init(V2, V1);</span><br><span class="javascript">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> result.init(V1, V2);</span><br>      &#125;<br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//按照四边形底面计算</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CalCorner</span>(<span class="hljs-params">h</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (h == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> work();</span><br><span class="javascript">      <span class="hljs-keyword">var</span> V = ((<span class="hljs-built_in">Math</span>.pow(m * h, <span class="hljs-number">2</span>) * <span class="hljs-number">1</span>) / <span class="hljs-number">3</span>) * h;</span><br><span class="javascript">      result = <span class="hljs-keyword">new</span> work();</span><br>      result.set(V);<br><span class="javascript">      <span class="hljs-keyword">return</span> result;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">// 计算方形格点内部的挖填量</span></span><br><span class="javascript">    <span class="hljs-comment">// 传入一个2X2的方格</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CalInGrid</span>(<span class="hljs-params">d</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">new</span> work();</span><br><span class="javascript">      <span class="hljs-keyword">var</span> sum = sumAbs(d);</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (checkFourCorner(d)) &#123;</span><br><span class="javascript">        <span class="hljs-comment">//如果数组同号的话</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> sign = d[<span class="hljs-number">0</span>] / <span class="hljs-built_in">Math</span>.abs(d[<span class="hljs-number">0</span>]);</span><br><span class="javascript">        <span class="hljs-keyword">var</span> V = (<span class="hljs-built_in">Math</span>.pow(a, <span class="hljs-number">2</span>) / <span class="hljs-number">4</span>) * sum * sign;</span><br>        result.set(V);<br><span class="javascript">      &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">        <span class="hljs-comment">//如果数组异号的话需要分成两组求</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> PArr = GetPositives(d);</span><br><span class="javascript">        <span class="hljs-keyword">var</span> NArr = GetNegatives(d);</span><br><span class="javascript">        <span class="hljs-keyword">var</span> V1 = <span class="hljs-built_in">Math</span>.pow(a, <span class="hljs-number">2</span>) / <span class="hljs-number">4</span> * <span class="hljs-built_in">Math</span>.pow(sumAbs(PArr), <span class="hljs-number">2</span>) / sum;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> V2 = <span class="hljs-built_in">Math</span>.pow(a, <span class="hljs-number">2</span>) / <span class="hljs-number">4</span> * <span class="hljs-built_in">Math</span>.pow(sumAbs(NArr), <span class="hljs-number">2</span>) / sum * -<span class="hljs-number">1</span>;</span><br>        result.init(V1, V2);<br>      &#125;<br><span class="javascript">      <span class="hljs-keyword">return</span> result;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//检查四个格点是否都同号</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFourCorner</span>(<span class="hljs-params">d</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; d.length - <span class="hljs-number">1</span>; i++) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (!checkSign(d[i], d[i + <span class="hljs-number">1</span>]))</span><br><span class="javascript">          <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br>      &#125;<br><span class="javascript">      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//绝对值求和</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumAbs</span>(<span class="hljs-params">d</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> d.length &lt;= <span class="hljs-number">1</span> ? <span class="hljs-built_in">Math</span>.abs(d) : d.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">x, y</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(x) + <span class="hljs-built_in">Math</span>.abs(y);</span><br>      &#125;);<br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//获取正数数列</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetPositives</span>(<span class="hljs-params">d</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr = [];</span><br><span class="javascript">      d.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (item &gt; <span class="hljs-number">0</span>) arr.push(item);</span><br>      &#125;);<br><span class="javascript">      <span class="hljs-keyword">return</span> arr;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//获取负数数列</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetNegatives</span>(<span class="hljs-params">d</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr = [];</span><br><span class="javascript">      d.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (item &lt; <span class="hljs-number">0</span>) arr.push(item);</span><br>      &#125;);<br><span class="javascript">      <span class="hljs-keyword">return</span> arr;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//检查两个数是否同号</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkSign</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (a * b &gt;= <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="javascript">      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br>    &#125;<br><span class="javascript">    <span class="hljs-comment">//检查哪个点为0,返回不为0的点</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkZero</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> a != <span class="hljs-number">0</span> ? a : b;</span><br>    &#125;<br><br><span class="javascript">    <span class="hljs-comment">//挖填对象</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">work</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.dig = <span class="hljs-number">0</span>;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.fill = <span class="hljs-number">0</span>;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.init = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) </span>&#123;</span><br>        a = a.toFixed(3);<br>        b = b.toFixed(3);<br><span class="javascript">        <span class="hljs-comment">//dig是正数,fill时负数</span></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (a &gt;= <span class="hljs-number">0</span>) <span class="hljs-built_in">this</span>.dig = a;</span><br><span class="javascript">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">this</span>.fill = a;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (b &gt;= <span class="hljs-number">0</span>) <span class="hljs-built_in">this</span>.dig = b;</span><br><span class="javascript">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">this</span>.fill = b;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;</span><br>      &#125;;<br><span class="javascript">      <span class="hljs-built_in">this</span>.set = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;</span><br>        value = value.toFixed(3);<br><span class="javascript">        <span class="hljs-keyword">if</span> (value &gt; <span class="hljs-number">0</span>) <span class="hljs-built_in">this</span>.dig = value;</span><br><span class="javascript">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">this</span>.fill = value;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;</span><br>      &#125;;<br><span class="javascript">      <span class="hljs-built_in">this</span>.add = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">work</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.dig += work.dig;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.fill += work.fill;</span><br>      &#125;;<br><span class="javascript">      <span class="hljs-built_in">this</span>.toString = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;开挖土方:&quot;</span> + <span class="hljs-built_in">this</span>.dig + <span class="hljs-string">&quot;&lt;br /&gt;填充土方:&quot;</span> + <span class="hljs-built_in">this</span>.fill;</span><br>      &#125;;<br><span class="javascript">      <span class="hljs-built_in">this</span>.toString = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">str</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> str + <span class="hljs-string">&quot;处开挖土方:&quot;</span> + <span class="hljs-built_in">this</span>.dig + <span class="hljs-string">&quot;&lt;br /&gt;填充土方:&quot;</span> + <span class="hljs-built_in">this</span>.fill;</span><br>      &#125;;<br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="软件计算结果校验"><a href="#软件计算结果校验" class="headerlink" title="软件计算结果校验"></a>软件计算结果校验</h2><p>程序中有对其每一部分的计算结果进行跟踪<br>跟踪结果与计算结果如图所示</p><p><img src="5.jpg" alt="计算结果"></p><p><img src="6.jpg" alt="计算结果"></p><p>其中主页面下侧为总计算结果，右边控制台输出结果与前一步的插值，为单步计算的结果，控制台对每一步结棍都进行了求和</p><p>方格的计算顺序是从左至右,从上至下</p><p>四个角点计算顺序是 左上 右上 左下 右下</p><p>边的计算顺序是，上 下 左 右</p><p>我通过手算进行了计算核对，每一步的手算和机算的误差都在 0.0001 内，其他的误差可能是<code>javascript</code>程序语言中对小数储存的方式而引起的系统误差，验证计算结果正确，程序可以使用。</p><p>由于只只有我用一道题目做了手算和机算的相互验证，因此结果可能具有偶然性，欢迎大家辅助验证程序，并欢迎留言指正</p><h2 id="计算程序地址"><a href="#计算程序地址" class="headerlink" title="计算程序地址"></a>计算程序地址</h2><p><a href='https://qiqi-1252510405.cos.ap-beijing.myqcloud.com/scripts/%E8%AE%A1%E7%AE%97%E6%8C%96%E5%A1%AB%E6%96%B9%E9%87%8F.html'>计算挖填方量</a></p><h2 id="引用Reference"><a href="#引用Reference" class="headerlink" title="引用Reference"></a>引用<code>Reference</code></h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://eatrice.top/post/2020-02-18-%E5%9C%9F%E6%9C%A8%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5-%E5%AF%BC%E8%AE%BA/#%E5%9C%BA%E5%9C%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A0%87%E9%AB%98">2020-02-18-土木工程施工-导论</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://ruru.eatrice.top/post/%E8%BE%B9%E5%9D%A1%E5%9C%9F%E6%96%B9%E9%87%8F%E8%AE%A1%E7%AE%97/">橙子杀手的博客-边坡土方量计算</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>土木工程施工</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>工程结构设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>东京奥运会炫酷的图标</title>
    <link href="/post/%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E7%82%AB%E9%85%B7%E7%9A%84%E5%9B%BE%E6%A0%87/"/>
    <url>/post/%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E7%82%AB%E9%85%B7%E7%9A%84%E5%9B%BE%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<p>最近<code>cov-2019</code>也肆虐到日本去了，网上各种流言飞起，说日本奥运会不办了。最近找到一些有关于东京奥运会的形象设计，包括动态图标，宣传视频等等。初一看这些东西设计的真是太棒了，很少关注运动会的我，也开始隐隐有小期待了呢。</p><a id="more"></a><p>2020东京奥运会此次设计了73个动态图标<code>(icon)</code>，分别代表和展示了22种残奥会运动项目和33种奥林匹克运动项目。</p><div id = 'dplayer1'></div><p>2020年东京残奥会和奥运会组委会公布了首批将在本次奥运会活动中使用的动态图标（icon）。这73个图标的形象由日本设计师广村正彰（Masaaki Hiromura）完成，并由日本动态设计师井口皓太（Kota Iguchi）制作了动画效果，以完整的动作模式来展示每个运动项目。图标从白色背景中以碎片的形式出现，展示一部分动作流程后，暂停片刻，然后继续完成运动项目展示并以碎片化形式消失，回到最初的空白帧。</p><p><img src="1.png" alt=""></p><div id = 'dplayer2'></div><p><img src="2.png" alt=""></p><p><img src="1.gif" alt=""></p><p><img src="2.gif" alt=""></p><p><img src="3.gif" alt=""></p><p><img src="4.gif" alt=""></p><p><img src="5.gif" alt=""></p><p><img src="6.gif" alt=""></p><p><img src="7.gif" alt=""></p><p><img src="8.gif" alt=""></p><p><img src="9.gif" alt=""></p><p><img src="3.png" alt=""></p><p><img src="4.png" alt=""></p><p><img src="5.png" alt=""></p><div id = 'dplayer3'></div>]]></content>
    
    
    <categories>
      
      <category>平面设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奥运会</tag>
      
      <tag>logo</tag>
      
      <tag>喜欢</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL字典式教程</title>
    <link href="/post/SQL%E5%AD%97%E5%85%B8%E5%BC%8F%E6%95%99%E7%A8%8B/"/>
    <url>/post/SQL%E5%AD%97%E5%85%B8%E5%BC%8F%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p> <strong>SQL</strong>（<code>Structure Query Language</code>)又称结构化设计语言。是一门数据库语言，其作用包括数据定义<code>Statistic Define</code>、数据操纵<code>Maniplation</code>、数据控制<code>Control</code>三个主要部分。其运行基于数据库管理系统<code>（DBMS）</code>对数据库的外模式进行操作控制，为外置的数据库用户或程序提供对数据库数据进行操作提供一种方式，并集成常用的操作和功能。</p><p>其语句结构包括一下方面：</p><ol><li>数据定义</li><li>数据查询</li><li>数据操作</li><li>数据控制</li><li>指针控制</li><li>事务控制</li></ol><p>此篇文章主要介绍SQL语句结构的前三种</p><h2 id="数据定义Data-Define-Language"><a href="#数据定义Data-Define-Language" class="headerlink" title="数据定义Data Define Language"></a>数据定义<code>Data Define Language</code></h2><p>SQL的数据定义有特定的谓词<code>CREATE</code>，<code>DROP</code>，<code>ALTER</code></p><h3 id="谓词CREATE"><a href="#谓词CREATE" class="headerlink" title="谓词CREATE"></a>谓词<code>CREATE</code></h3><p>谓词<code>CREATE</code>用于创建数据类型 、表、模式。数据库等同时定义完整性约束。<br><strong>使用方法：</strong></p><ul><li><p>创建数据库<br>-<code>CREATR &#123;DATABASE | SCHEMA&#125; db_name [create_spcification[,create_specification]...]</code></p><ul><li><code>[create_specification]: [DEFAULT] CHARACTER SET charset_name | [DEFAULT] COLLATE collation_name</code></li></ul></li><li><p>创建数据表</p><ul><li><code>CREATE [sc_name] TABLE table_name [(create_definition, create_definition, ...)] [table_options] [select_statement]</code></li><li><code>[create_definition]</code>包括数据列名称<code>col_name</code>，数据类型<code>data type</code>，数据完整性约束<code>[[NOT] NULL]</code>，数据索引<code>[INDEX]</code>，数据主键<code>[PRIMARY KEY]</code></li></ul></li><li><p>创建模式</p><ul><li><code>CREATE SCHEMA sc_name AUTHORIZATION &lt;user_name [&lt;CREATE DOMAIN 子句&gt;|&lt;CREATE TABLE 子句 &gt;|&lt;CREATE VIEW 子句&gt;|...]</code></li></ul></li><li><p>创建索引</p><ul><li><code>CREATE [UNIQUE] [CLUSTER] INDEX &lt;index_name&gt; ON &lt;table_name&gt; [&lt;col_name&gt; [&lt;(ASC|DESC)&gt;]],...]);</code></li></ul></li><li><p><code>UNIQUE</code>表示索引值唯一对应</p><ul><li><code>CLUSTER</code>表示要建立的索引为聚族索引,与表中记录顺序一致的索引组织</li></ul><p>关于<code>[create_definition]</code>的定义,其中包括三个部分</p><p>[&lt;列名&gt; &lt;数据类型&gt; [列级完整性约束]]，其中不同层级的<code>[CREATE_DEFINITION]</code>用半角逗号<code>,</code>分隔</p><p>数据库的数据类型分为:</p><ol><li>预定义数据类型: 即可在SQL中直接使用的数据类型(较为常用)<ol><li><code>INT</code>整数类型, <code>SMALLINT</code>短整数类型</li><li><code>REAL</code>浮点数类型, <code>DOUBLE PRECISION</code>双精度浮点数类型, <code>FLOAT(n)</code>浮点数类型, 精度至少为n位数字</li><li><code>NUMERIC(p,d)</code>定点数类型,共有p位数字,其中小数点后d位</li><li><code>CHAR(n)</code>长度为n的字符串, <code>VARCHAR(n)</code>最大长度为n的字符串</li><li><code>BIT</code>(n)长度为n的二进制位串, <code>BIT</code>和<code>VARYING(n)</code>最大长度为n的二进制位串</li><li><code>DATE</code>日期类型: <code>YYYY-MM-DD</code>, 时间类型: <code>HH:MM:SS</code>, <code>TIMESTAMP</code>时间戳(<code>DATE</code>加<code>TIME</code>)</li><li><code>BOOLEAN</code>布尔型,有三个值<code>TRUE</code>、<code>FALSE</code>和<code>UNKNOWN</code></li></ol></li><li>构造数据类型: 由特性的保留字和预定义数据类型构造而成, 如<code>REF</code>、<code>ROW</code>和<code>ARRAY</code>等</li><li>用户定义数据类型: 是一个对象类型，是由用户按照一定的规则用预定义数据类型组合定义的用户自用的数据类型</li><li>大对象类型: 可储存多达<code>1Gbyts</code>的串。称为<code>LOB</code>: <code>BLIB</code>二进制大对象，储存音频、图像、视频等。<code>CLOB</code></li></ol></li></ul><h3 id="谓词DROP"><a href="#谓词DROP" class="headerlink" title="谓词DROP"></a>谓词<code>DROP</code></h3><p>谓词<code>DROP</code>用于删除数据类型:</p><ul><li>删除模式<ul><li><code>DROP SCHEMA sc_name (CASCADE | RESTRICT)</code></li><li>CASCADE 删除模式时, 将模式及其下属的表、视图索引等全部删除</li><li>RESTRICT 只删除空模式</li></ul></li><li>删除表<ul><li><code>DROP col_name (CASCADE | RESTRICT) [DROP 完整性约束]</code></li></ul></li><li>删除索引<ul><li><code>DROP INDEX [ON table_name] index_name</code></li></ul></li></ul><h3 id="谓词MODIFY"><a href="#谓词MODIFY" class="headerlink" title="谓词MODIFY"></a>谓词<code>MODIFY</code></h3><p>谓词<code>MODIFY</code>用于修改数据类型:</p><ul><li>修改数据表的列:<ul><li><code>MODIFY [TABLE table_name] col_name create_spcification</code> </li></ul></li></ul><h2 id="数据查询DATA-Query-Language"><a href="#数据查询DATA-Query-Language" class="headerlink" title="数据查询DATA Query Language"></a>数据查询<code>DATA Query Language</code></h2><p>SQL的数据查询有特定的谓词<code>SELECT</code>也是SQL用的最多的谓词</p><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><p>简单查询仅涉及数据库中的一个表,也称为单表查询</p><ul><li>查询表中的若干列(投影)<ul><li><code>SELECT col_name1[, col_name2]... FROM table_name</code> //投影部分列</li><li><code>SELECT * FROM table_name</code> //投影所有列</li></ul></li><li>查询若干元组<ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE &#123;Expression&#125;</code></li><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [col_name] BETWEEN [left_limit] AND [right_linit]</code></li><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [col_name] [NOT] LIKE [Expression]</code><ul><li><code>[Expression]</code>中使用’’包裹条件</li><li>%匹配任意长的字符串</li><li>_匹配单个任意字符</li></ul></li><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [col_name] IN (&#39;MA&#39;, &#39;CS&#39;, &#39;EE&#39;);</code></li></ul></li><li>排序查询结果<ul><li><code>SELECT * FROM table_name ORGER BY &#123;[col_names]&#125; DESC;</code>数组中的第一列优先级最高</li></ul></li><li>使用聚集函数<ul><li><code>COUNT ([DISTINCT | ALL] *)</code> 统计元组个数</li><li><code>COUNT ([DISTINCT | ALL] col_name)</code> 统计一列元组个数</li><li><code>SUM ([DISTINCT | ALL] col_name)</code> 对数值列求和</li><li><code>AVG ([DISTINCT | ALL] col_name)</code> 对数值求平均</li><li><code>MAX ([DISTINCT | ALL] col_name)</code> 求最大值</li><li><code>MIN ([DISTINCT | ALL] col_name)</code>求最小值</li><li><code>SELECT COUNT(*) FROM table_name</code> 查询元组数量</li></ul></li><li>对查询结果分组<ul><li>SELECT {[col_names]} FROM table_name GROUP BY {[col_names]} [HAVING Expression]</li></ul></li></ul><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p>查询通过多个表取得数据,称为连接查询</p><ul><li>等值连接和非等值连接<ul><li><code>SELECT table_name1 &#123;[col_names]&#125; FROM table_name2 WHERE table1.att1 = table2.att2</code>当两个表有相同的某列的值时,将其连接起来</li></ul></li><li>符合条件链接<ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [Express] [AND] [table1.att1 = table2.att2]</code></li></ul></li><li>自身连接<ul><li>`SELECT {[col_names]} FROM table_name AS [alias1], table_name AS [alias2] WHERE alias1.att1 &gt; alias2.att2 AND [Expression]</li></ul></li><li>多表连接<ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name FROM &#123;[table_names]&#125; WHERE &#123;[Expression]&#125;</code></li></ul></li></ul><h3 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h3><ul><li>带有谓词<code>IN</code>的子查询<ul><li>`SELECT {[col_names]} FROM table_name WHERE [clo_name] IN (SELECT [col_NAme] FROM table_name WHERE [Epression])</li></ul></li><li>带有ANY(SOME)或ALL谓词的子查询<ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [col_name] &lt; ANY(select_array)</code></li><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [col_name] &lt; ALL(select_array)</code></li></ul></li><li>带有`[NOT] EXISTS谓词的子查询<ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE EXISTS(select_array)</code></li></ul></li></ul><h3 id="集合查询"><a href="#集合查询" class="headerlink" title="集合查询"></a>集合查询</h3><ul><li>并<code>(UNION)</code><ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [Expression1] UNION SELECT  &#123;[col_names]&#125; FROM table_name WHERE [Expression2]</code></li></ul></li><li>交<code>(Intersect)</code><ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [Expression1] INTERSECT SELECT &#123;[col_names]&#125; FROM table_name WHERE [Expression2]</code></li></ul></li><li>差<code>(EXCEPT)</code><ul><li><code>SELECT &#123;[col_names]&#125; FROM table_name WHERE [Expression1] EXCEPT SELECT &#123;[col_names]&#125; FROM table_name WHERE [Expression1]</code></li></ul></li></ul><h3 id="连接表"><a href="#连接表" class="headerlink" title="连接表"></a>连接表</h3><div class='alert alert-success'><strong>连接表</strong>允许用户在一个`SELECT`语句的`FROM`子句中指定连接操作,这种连接操作所得到的表称为连接表。</div><ul><li>`<table_name1> [NATURAL] <Connection_Type> <table_name2> <Connection_Condition><ul><li><code>Connect_Type</code> includes JOIN, OUTER, JOIN, NATURAL JOIN and CROSS JOIN</li><li><code>Connect_Condition</code> includes ON, USING({col_names})</li><li><code>SELECT &#123;col_names&#125; FROM (&lt;table_name1&gt; JOIN &#123;col_names&#125; ON &lt;table_name2.col_names&gt; [Judge_condition]) Where &#123;Judge_condition&#125;</code></li></ul></li></ul><h2 id="数据修改"><a href="#数据修改" class="headerlink" title="数据修改"></a>数据修改</h2><h3 id="数据插入"><a href="#数据插入" class="headerlink" title="数据插入"></a>数据插入</h3><p><code>SQL</code>的插入操作通过<code>INSERT</code>语句实现,该语句将数据插入到一个表中.其一般格式有两种:</p><ol><li>插入一行<ol><li><code>INSERT INFO table_name [&#123;col_names&#125;] VALUES(&#123;col_values&#125;)</code></li></ol></li><li>使用查询插入多行<ol><li><code>INSERT INTO table_name[&#123;col_names&#125;] &#123;child_query&#125;</code></li></ol></li></ol><h3 id="数据删除"><a href="#数据删除" class="headerlink" title="数据删除"></a>数据删除</h3><p><code>SQL</code>的数据删除由<code>DELETE</code>实现</p><p><code>DELETE FROM table_name [WHERE &#123;expressions&#125;]</code></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p><code>SQL</code>数据更新操作由<code>UPDATE</code>语句实现</p><p><code>UPDATE table_name SET &#123;col_names=col_values&#125; WHERE &#123;expressions&#125;</code></p><p class='alert alert-success'>更新操作一次只能更新一个表,若更新多个表,需要执行多个更新语句</p>]]></content>
    
    
    <categories>
      
      <category>程序字典</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数学——模型评估方法</title>
    <link href="/post/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95/"/>
    <url>/post/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在学习机器学习的一些相关的算法，在学习过程中新接触到了大量的概念和原理。为了更好地提高学习的效果，于是就把在学习的过程中接触到的新概念和遇到的问题通通写进我的博客，作为学习笔记，以提供给自己和其他朋友进行查阅和参考。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这篇内容主要是讲述数学模型的模型评估方法，将会对新的概念进行逐一解读。有条件的还会对相关的内容进行拓展资料的整理，其主要内容如下：</p><h2 id="新的概念"><a href="#新的概念" class="headerlink" title="新的概念"></a>新的概念</h2><h3 id="评估思路"><a href="#评估思路" class="headerlink" title="评估思路"></a>评估思路</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过实验测试，对模型的泛化误差进行评估，选出泛化误差最小的模型。待测数据集未知，使用测试集进行泛化测试，测试误差（<code>Testing Error</code>）即为泛化误差的近似。</p><p><img src="1.png" alt="一直数据集和待测数据集" title="一直数据集和待测数据集"></p><p>::: warning<br>需要注意:</p><ol><li><p>测试集和训练集要保持互斥：即测试集和训练集不能相同，就像数学题中的例题和测试题一样，用的方法和原理要相同，但是做法不一致。</p></li><li><p>测试集和训练集要服从独立同分布：即测试集和训练集所取得数据要保证同源，即要保证他们有相同的期望和方差，且相互独立。<br>:::</p></li></ol><h3 id="评估方法"><a href="#评估方法" class="headerlink" title="评估方法"></a>评估方法</h3><h4 id="留出法（Hold-out）"><a href="#留出法（Hold-out）" class="headerlink" title="留出法（Hold-out）"></a>留出法（Hold-out）</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>概念：</strong>讲已知数据集分成两个互斥的部分，其中一部分用来训练模型，另一部分用来测试模型，评估其误差，作为泛化误差的估计。</p><p>::: warning<br>需要注意：</p><ol><li><p>两个数据集的划分要尽可能保持数据分布一致性，避免因数据划分过程引入认为的偏差：即划分之后的数据要尽可能使他们独立同分布。</p></li><li><p>数据分割存在多种形式会导致不同的训练集，测试集划分，单次留出法结果往往存在偶然性，其稳定性较差，通常会进行若干次随即划分、重复实验评估取平均值作为评估结果。</p></li><li><p>数据集拆分成两部分，每部分的规模设置会影响评估结果，测试训练的比例通常为7:3、8:2等<br>:::</p></li></ol><p><img src="2.png" alt="分层采样(Stratified Sampleing)" title="分层采样"></p><h4 id="交叉验证法-Cross-Validation"><a href="#交叉验证法-Cross-Validation" class="headerlink" title="交叉验证法(Cross Validation)"></a>交叉验证法(Cross Validation)</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>概念：</strong>将数据集划分成<code>k</code>个大小相似的互斥的数据自己，自己数据尽可能保证数据分布的一致性（分层采样），每次从中取一个数据作为测试集，其余用作训练及，可以进行<code>k</code>次训练和测试，得到评估均值。该验证方法也称作<code>k</code>折交叉验证(<code>k-fold Cross Validation</code>)。使用不同的划分，重复<code>p</code>次，称为<code>p</code>次<code>k</code>折交叉验证。</p><p><img src="3.png" alt="交叉验证图示" title="交叉验证法图示"></p><h4 id="留一法（Leave-One-Out-LOO）"><a href="#留一法（Leave-One-Out-LOO）" class="headerlink" title="留一法（Leave-One-Out LOO）"></a>留一法（Leave-One-Out LOO）</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>概念：</strong>是<code>k</code>折交叉验证的特殊形式，将数据集分成两个，其中一个数据集记录条数为1，作为测试集使用，其余记录作为训练集训练模型。训练出的模型和使用全部数据集训练得到的模型接近，其评估结果比较准确。确定是当数据集较大时，训练的次数和计算规模较大。</p><p><img src="4.png" alt="留一法图示" title="留一法图示"></p><h4 id="自助法（Bootstrapping）"><a href="#自助法（Bootstrapping）" class="headerlink" title="自助法（Bootstrapping）"></a>自助法（Bootstrapping）</h4><blockquote><p>拽着自己的鞋带把自己从湖里提起来.<br>—巴龙伯爵历险记</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>概念：</strong>是一种产生样本的抽样方法，其实质是有放回的随机抽样，即从一直数据集中随机抽取一条记录，然后将该记录放入测试集同时放回原数据集，继续下一次抽样，直到测试集中的数据条数满足要求。</p><p>::: tips</p><p>要点:</p><ul><li>假设已知数据集 D 含有 n 条数据，采用自助法得到一个记录条数为 n 的测试集 T 。D 中的一些数据会在 T 中出现多次，还有一些数据不会出现。</li><li>估算一下经过 n 次有放回采样后，大概多少记录未被选中：<ul><li>某一次具体的采样，一条数据被选中的概率为 1/n，未被选中的概率为：1- 1/n</li><li>连续 n 次采样均未被选中的概率为：<img src="e1.png" alt="公式1" title="公式1">，取极限：<img src="e2.png" alt="公式2" title="公式2"></li></ul></li><li>通过有放回的抽样获得的训练集去训练模型，不在训练集中的数据（总数量的 1/3）去用于测试，这样的测试结果被称为<strong>包外估计（Out-of-Bag Estimate, OOB）</strong></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><h4 id="留出法"><a href="#留出法" class="headerlink" title="留出法"></a><strong>留出法</strong></h4><ol><li><p>实现简单、方便，在一定程度上能评估泛化误差</p></li><li><p>测试机和训练及分开，缓解了过拟合</p></li></ol><ul><li>一次划分，评估结果的偶然性大</li><li>数据被拆分后，用于训练、测试的数据更少了</li></ul><h4 id="交叉验证法（留一法）"><a href="#交叉验证法（留一法）" class="headerlink" title="交叉验证法（留一法）"></a><strong>交叉验证法（留一法）</strong></h4><ol><li><p>k 可以根据实际情况设置，充分利用了所有样本</p></li><li><p>多次划分，评估结果相对稳定</p></li></ol><ul><li>计算比较繁琐，需要进行 k 次训练和评估</li></ul><h4 id="自助法"><a href="#自助法" class="headerlink" title="自助法"></a><strong>自助法</strong></h4><ol><li><p>样本较小时可以通过自助法产生多个自助样本集，且有约36.8%的测试样本</p></li><li><p>对于总体的理论分布没有要求</p></li></ol><ul><li>无放回抽样引入了额外的偏差</li></ul><h3 id="几种方法的选择"><a href="#几种方法的选择" class="headerlink" title="几种方法的选择"></a>几种方法的选择</h3><ul><li>已知数据集数量充足时，通常采用留出法或者 k 折交叉验证法</li><li>对于已知数据集较小且难以有效划分训练集/测试集的时候，采用自助法</li><li>对于已知数据集较小且可以有效划分训练集/测试集的时候，采用留一法。</li></ul>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>笔记</tag>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>马上就要开学了</title>
    <link href="/post/%E9%A9%AC%E4%B8%8A%E5%B0%B1%E8%A6%81%E5%BC%80%E5%AD%A6%E4%BA%86/"/>
    <url>/post/%E9%A9%AC%E4%B8%8A%E5%B0%B1%E8%A6%81%E5%BC%80%E5%AD%A6%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h1 id="又是一个新的学期的开始"><a href="#又是一个新的学期的开始" class="headerlink" title="又是一个新的学期的开始"></a>又是一个新的学期的开始</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2020年又是一个世纪之交，十九大提出今年要全面建成小康社会。不知道我属于贫困户还是属于底层小康，管他呢，反正2020年的元旦在一个月前已经过去了。庚子鼠年的春节，也在全家隔离看春晚中谢幕。时至今日，外面<code>2019-nCov</code>依旧在肆虐，全国人民都躲在家里等待着初春进入暖春。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作为一名大三狗，直觉告诉我寒假结束了，接下来的新一轮的学习课程。当然，在全国人民都在家闭关修炼的时刻，学校当然不会让我们提前到学校去，感受新春的空气的清新的。因此我们的新学期应该从在线上网课开始。老师可能觉得自己讲的不是很好，或者就是单纯地懒得去录网课，所以我们之前预想的一群人围在电脑面前，前面老师开了个直播间然后我们在直播间里面<del>叽叽喳喳</del>各抒己见。然后老师忍无可忍，这节课大家再去看看书，书中的内容很重要，下课！</p><p><img src="1.png" alt="学银在线" title="线上课程图片"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如今，老师采用了一种更加简单<del>粗暴</del>省事的方式，来让我们自己去查看网课，然后打卡打卡。</p><h1 id="寒假原本的计划"><a href="#寒假原本的计划" class="headerlink" title="寒假原本的计划"></a>寒假原本的计划</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;寒假原本制定了许多计划，然后完成了一些，没有完成一些。计划中的事情有些做了，有些没做，还有些没有计划的事情倒是做了。寒假最刺激的一件事情就是和小邹同学晚上骑车前往艾溪湖冲刺。我们花了三个小时，在路上吹风，从艾溪湖大桥出发，然后返回艾溪湖大桥。</p><p><img src="2.png" alt="路灯下的自行车" title="路灯下的自行车"></p><p><img src="3.png" alt="湖边" title="湖边大楼"></p><p><img src="4.png" alt="晚上的桥" title="晚上的桥"></p><h1 id="无聊的年"><a href="#无聊的年" class="headerlink" title="无聊的年"></a>无聊的年</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每年的这些时候附近，总是有各种理由可以找小伙伴出来游戏。现在因为<code>2019-nCov</code>关系，几乎所有人都拒绝出门，导致路上空荡荡。出门还要通行证，还要检查体温，出个门会有一大片的事情，这也是很多情况下不想出去的理由。各村各乡镇封闭设卡，打着各种各样的标签，有趣极了。</p><p><img src="5.jpg" alt="通行证" title="通行证"></p><p><img src="6.jpg" alt="有趣的标语" title="有趣的标语"></p><p><img src="7.jpg" alt="有趣的标语" title="有趣的标语"></p><h1 id="守望先锋"><a href="#守望先锋" class="headerlink" title="守望先锋"></a>守望先锋</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自从上学期开始，因为课程比较多，有用的事和没用的事也有很多，原来的战友们都没有在一起开黑。机缘巧合之下，发现了七夏姐姐战队群，里面有一些前辈们可以一起玩耍，这也算是守望先锋的一个队友大换盘。不知道又会发生什么有趣的故事呢？🎆🎆🎆</p><p><img src="8.png" alt="七夏姐姐的战队" title="七夏姐姐的战队"></p><h1 id="愿望"><a href="#愿望" class="headerlink" title="愿望"></a>愿望</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;考证，比赛，考试，不挂科，就是这学期最GOOD的愿望，希望全部都能通通实现！！！</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>白话</tag>
      
      <tag>上学</tag>
      
      <tag>开学季</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从0开始搭建一个hexo博客</title>
    <link href="/post/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/post/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="摘要和准备工作"><a href="#摘要和准备工作" class="headerlink" title="摘要和准备工作"></a>摘要和准备工作</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我从很早以前开始就有搭建一个博客的想法，最早能够追溯到高中二年级。后来也陆陆续续尝试了搭建一群由静态页面组成的页面体系，后来发现这种页面体系有点坑，主要是但个网页的制作在页眉和页头处会有大量的相同的代码内容需要更改，而且该页面体系对于各种资源文件的路径特别敏感，很容易出错。再后来，学习的不断深入，还新学了C#的ASP.NET。这种框架的主要设计模式为动态网页开发，且这类网站挂载在IIS上，但是由于该网站服务依赖于独立的云计算资源，没钱续费，最后还是放弃了。。。经过无数次的尝试和体验，我终于发现了一个简单好用的网站框架，那就是hexo。下面就是我从0开始搭建我的hexo博客的来龙去脉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里使用的是 <code>ubuntu 18.1</code> 的操作系统对 <code><a href='https://hexo.io/'>hexo</a></code> 框架的安装和在云端的 <code><a href='https://github.com'>github</a></code> 的部署。关于如何安装 <code><a href='https://hexo.io/'>hexo</a></code> 框架，百度上已经有许多的相关教程和方法，如何在 <code><a href='https://github.com'>github</a></code> 部署，也有很多的相关教程，还有着很多官方文档。所以这里的<code><a href='https://hexo.io/'>hexo</a></code>网站搭建教程，主要是用来介绍我在搭建网站的时候遇到的一些问题和最后的解决方案，以通过这些给自己或其他人提供相关的意见和建议。</p><p><img src="1.png" alt="休伯利安号的空间" title="博客首页"></p><h1 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我选用的主题为Fluid，该主题功能不是很多，但主要有优点使用简单，整体效果好等优点。如下是安装命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> blog    <span class="hljs-comment">#进入博客所在的目录</span></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> themes    <span class="hljs-comment">#进入主题宝所在的目录</span></span><br><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git    <span class="hljs-comment">#克隆主题文件</span></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ../    <span class="hljs-comment">#返回博客主目录</span></span><br><span class="hljs-meta">$</span><span class="bash"> vi _config.yml    <span class="hljs-comment">#修改博客的主配置文件</span></span><br></code></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装好主题后可以在文件夹 <code>themes</code> 文件夹中即可查看。对于本次使用的主题 <code>Fluid</code> 需要对文件夹进行重命名，或在主文件目录下 <code>config.yml</code> 找到’theme’选项，改成<code>theme: &#123;你的主题名字&#125;</code>。同时我们会对主题文件会进行一些自定义的设置，为了避免配置在主题更新后失效，可以制定全局主题的配置文件: <code>source/_data/fluid_config.yml</code> 其中的内容可以直接从主题文件下的配置文件中复制粘贴。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在配置主题的配置文件中，随意增加或删除一些配置选项，或者文件内容的格式不符合文件的标准格式。<code>hexo</code>对此也能够继续进行生成和发布，但是其生成和发布的过程中会发生报错，所以，在一开始使用过程中发生了错误或问题，不妨检查一下配置文件的配置选项和格式标准。<br><img src="2.png" alt="Fluid主题" title="主题logo"></p><h2 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于网站是静态的，所以可以使用第三方的评论系统。目前比较常用的有 <code>disqus | valine | gitalk | utterances | changyan | livere</code> 这里使用的是 <code>livere</code> 去官网注册一个账号，放在 <code>Fluid</code> 主题里面完全可以傻瓜式操作。来比力的评论插件有着很多的缺点，比如加载太过于慢了，还有其本身的样式也很丑。搭建博客的初衷是为了写作，所以就不为这个问题劳心劳力了，管他长啥样，重点不那儿！效果如图所示：</p><p><img src="3.png" alt="LiveRe评论系统" title="来比力"></p><h2 id="MarkDown撰写博客"><a href="#MarkDown撰写博客" class="headerlink" title="MarkDown撰写博客"></a><code>MarkDown</code>撰写博客</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>hexo</code>的文章标记语言<code>MarkDown</code>这语言之前都没有接触过的东西，作为一名业余选手，只能把自己以前写过的<code>html</code>连粘带贴地，直接应用到这里面来啦。就像博客的开篇起手式“<a href='翻墙的少年'>翻墙的少年一样</a>”，卑微地敲着<code>html</code>。我学院有位已经毕业了的学长说使用Latex给我们做了一个论文模板，我觉得他做的工作和我现在做的工作差不多。另外关于写作问题，我还是研习一下的命令就行，其他的复杂格式用<code>html</code>代替便是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs 说明">&lt;!--more--&gt;    #首先这是一个摘要分割符<br>#这是一级标题<br>##这是二级标题<br>###这是三级标题<br>####这是四级标题<br>...<br>![图片详情](url &quot;&#123;图片占位符&#125;&quot;)    #这是放置一个图片<br>- [ ] 任务一 未做任务 &#96;- + 空格 + [ ]&#96;<br>- [x] 任务二 已做任务 &#96;- + 空格 + [x]&#96;    #这是服务列表<br>&amp;nbsp;    #设置缩进之一个空格<br><br>*斜体*或_斜体_<br>**粗体**<br>***加粗斜体***<br>~~删除线~~<br>++下划线++<br>&#x3D;&#x3D;背景高亮&#x3D;&#x3D;<br><br>超链接还是&lt;a href&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;比较好用<br><br>我经常去的几个网站[Google][1]、[Leanote][2]。    #参考链接<br><br>[1]:http:&#x2F;&#x2F;www.google.com <br>[2]:http:&#x2F;&#x2F;www.leanote.com<br><br>使用 Markdown<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Markdown是一种纯文本标记语言">[1]</span></a></sup>可以效率的书写文档, 直接转换成 HTML<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="HyperText Markup Language 超文本标记语言## 0. 目录&#123;#index&#125;    #描至页面的其他部分 无序列表项 一    #无序列表+ 无序列表项 二- 无序列表项 三1. 有序列表项 一    #有序列表2. 有序列表项 二3. 有序列表项 三&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白    #多级引用&gt;&gt; 自己看教程！ - 愤青&gt; 教程在哪？ - 小白#代码、、、include &lt;stdio.h&gt;int main(void)&#123;    printf(&quot;Hello world\n&quot;);&#125;、、、​、、、graph LR    #流程图A—&gt;B、、、、、、sequenceDiagram    #消息列表A-&gt;&gt;B: How are you?B-&gt;&gt;A: Great!、、、|学号|姓名|序号|    #表格|-|-|-||小明明|男|5||小红|女|79||小陆|男|192|&#96;$ &#123;equation&#125; $&#96;    #行内公式公式   #整行公式、、、 math    #块级公式x &#x3D; \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; 、、、、、、 math[\frac&#123;1&#125;&#123;\Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;\frac25 \pi&#125;&#125; &#x3D;1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-6\pi&#125;&#125;&#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\ldots&#125; &#125; &#125; &#125;]、、、#分割线  **- - -—————-#特殊字符的使用特殊字符     描述     字符的代码  空格符     &amp;nbsp;&lt;     小于号     &lt;&gt;     大于号     &gt;&amp;     和号     &amp;￥     人民币     &amp;yen;©     版权     &amp;copy;®     注册商标     &amp;reg;°C     摄氏度     &amp;deg;C±     正负号     &amp;plusmn;×     乘号     &amp;times;÷     除号     &amp;divide;²     平方（上标²）     &amp;sup2;³     立方（上标³）     &amp;sup3;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/hexoPostRenderCodeBlock&gt;">[2]</span></a></sup>。    #注脚&#x2F;引用来源<br><br>##部署在`Github`上&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要有一个`Github`账户，然后新建一个`repository`使用`ReadMe.md`来创建主分支`matser`。`repository`的名字就叫`{user.name}.github.io`设置完之后，直接访问这个地址，就能跳转到相应的链接啦。之后的问题就是把我们本地的储存库推送到云端。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先，需要在你的`Guthub`账号设置里面添加在你计算机上生成的公钥，以便帮助云端识别你的设备，授予相应的权限。在`Ubuntu`的终端中输入以下指令：<hexoPostRenderCodeBlock><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span>  <span class="hljs-built_in">ls</span> <span class="hljs-literal">-al</span> ~/.ssh    <span class="hljs-comment">#检查本地公钥的存在</span><br>&gt;&gt;  No such file or directory<br><span class="hljs-variable">$</span>  ssh<span class="hljs-literal">-keygen</span> <span class="hljs-literal">-t</span> rsa <span class="hljs-literal">-C</span> &#123;your_email@example.com&#125;    <span class="hljs-comment">#使用邮箱生成公钥，并一路按下确定建</span><br><span class="hljs-variable">$</span>  <span class="hljs-built_in">cat</span>  ~/.ssh/k8s_rsa.pub    <span class="hljs-comment">#即可输出公钥的内容</span><br></code></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后将生成的公钥复制粘贴进公钥添加的页面中即可完成公钥的添加。如图所示：</p><p><img src="3.png" alt="公钥页面" title="公钥添加"></p><p><img src="4.png" alt="添加完成" title="公钥添加完成"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之后我们只需要在本地的终端中输入</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">$  hexo clean<br>$  hexo <span class="hljs-keyword">generate</span><br>$  hexo deploy<br></code></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即可成功发布。</p><p><img src="5.png" alt="发布界面" title="网站发布完成!"></p><h2 id="自定义域名访问"><a href="#自定义域名访问" class="headerlink" title="自定义域名访问"></a>自定义域名访问</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我在<code>github</code>上注册的名字为<code>QiQiWan</code>所以我的博客的链接地址为<a href='qiqiwan.github.io'><code>qiqiwan.github.io</code></a>。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个名字可能比较难记，所以可以自己去申请一个域名，在域名解析里面添加记录值为<a href='qiqiwan.github.io'><code>qiqiwan.github.io</code></a>的<code>CNAME</code>类型解析即可。</p><p><img src="6.png" alt="解析界面" title="解析界面"></p><p>现在我们可以通过<a href='http://eatrice.top'><code>EatRice.top</code></a>来访问我们的网站啦！</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Markdown是一种纯文本标记语言<br><br><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>HyperText Markup Language 超文本标记语言<br><br>## 0. 目录&#123;#index&#125;    #描至页面的其他部分<br><br><em> 无序列表项 一    #无序列表<br>+ 无序列表项 二<br>- 无序列表项 三<br><br>1. 有序列表项 一    #有序列表<br>2. 有序列表项 二<br>3. 有序列表项 三<br><br>&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白    #多级引用<br>&gt;&gt; 自己看教程！ - 愤青<br>&gt; 教程在哪？ - 小白<br><br>#代码<br>、、、<br>include &lt;stdio.h&gt;<br>int main(void)<br>&#123;<br>    printf(&quot;Hello world\n&quot;);<br>&#125;<br>、、、<br><br>​、、、<br>graph LR    #流程图<br>A—&gt;B<br>、、、<br><br>、、、<br>sequenceDiagram    #消息列表<br>A-&gt;&gt;B: How are you?<br>B-&gt;&gt;A: Great!<br>、、、<br><br>|学号|姓名|序号|    #表格<br>|-|-|-|<br>|小明明|男|5|<br>|小红|女|79|<br>|小陆|男|192|<br><br><br>&#96;$ &#123;equation&#125; $&#96;    #行内公式<br><br><script type="math/tex">公式</script>   #整行公式<br><br>、、、 math    #块级公式<br>x &#x3D; \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; <br>、、、<br>、、、 math<br>[\frac&#123;1&#125;&#123;\Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;\frac25 \pi&#125;&#125; &#x3D;<br>1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-6\pi&#125;&#125;<br>&#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\ldots&#125; &#125; &#125; &#125;]<br>、、、<br><br>#分割线<br></em> <em> </em><br><strong><em><br>**</em></strong><br>- - -<br>—————-<br><br>#特殊字符的使用<br>特殊字符     描述     字符的代码<br>  空格符     &amp;nbsp;<br>&lt;     小于号     &lt;<br>&gt;     大于号     &gt;<br>&amp;     和号     &amp;<br>￥     人民币     &amp;yen;<br>©     版权     &amp;copy;<br>®     注册商标     &amp;reg;<br>°C     摄氏度     &amp;deg;C<br>±     正负号     &amp;plusmn;<br>×     乘号     &amp;times;<br>÷     除号     &amp;divide;<br>²     平方（上标²）     &amp;sup2;<br>³     立方（上标³）     &amp;sup3;<br>&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/hexoPostRenderCodeBlock&gt;<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>聊自己</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>自述</tag>
      
      <tag>内容分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>翻墙的少年</title>
    <link href="/post/%E7%BF%BB%E5%A2%99%E7%9A%84%E5%B0%91%E5%B9%B4/"/>
    <url>/post/%E7%BF%BB%E5%A2%99%E7%9A%84%E5%B0%91%E5%B9%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="翻墙的少年"><a href="#翻墙的少年" class="headerlink" title="翻墙的少年"></a>翻墙的少年</h1><p><img src="1.png" alt="翻墙的少年" title="翻"></p><h3 id="世间本没有墙，只是有人想看一看外面的世界，所以就有了翻墙，也就有了墙。"><a href="#世间本没有墙，只是有人想看一看外面的世界，所以就有了翻墙，也就有了墙。" class="headerlink" title="世间本没有墙，只是有人想看一看外面的世界，所以就有了翻墙，也就有了墙。"></a>世间本没有墙，只是有人想看一看外面的世界，所以就有了翻墙，也就有了墙。</h3><h3 id="联系我请到关于页面，加友链可在友链页下方留言"><a href="#联系我请到关于页面，加友链可在友链页下方留言" class="headerlink" title="联系我请到关于页面，加友链可在友链页下方留言"></a>联系我请到<a href="/about/">关于</a>页面，加友链可在<a href="/links/">友链页</a>下方留言</h3>]]></content>
    
    
    <categories>
      
      <category>聊自己</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自述</tag>
      
      <tag>白话</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
